[{"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/index.js":"1","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/util/session_api_util.js":"2","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/root.js":"3","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/util/giphy_api_util.js":"4","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/actions/session_actions.js":"5","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/store/store.js":"6","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/app.js":"7","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/reducers/root_reducer.js":"8","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/util/route_util.js":"9","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/main/main_page.js":"10","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/chat/dashboard_container.js":"11","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/chat/chat_box_container.js":"12","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/reducers/errors_reducer.js":"13","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/reducers/session_reducer.js":"14","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/reducers/messages_reducer.js":"15","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/reducers/rooms_reducer.js":"16","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/actions/room_actions.js":"17","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/actions/message_actions.js":"18","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/reducers/session_errors_reducer.js":"19","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/chat/chat_box.jsx":"20","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/session/signup_form_container.js":"21","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/session/login_form_container.js":"22","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/chat/dashboard.jsx":"23","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/chat/user_list.js":"24","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/util/message_api_util.js":"25","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/util/room_api_util.js":"26","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/chat/data_share.js":"27","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/message/message_container.js":"28","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/giphy/giphy.jsx":"29","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/message/message.jsx":"30","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/message/edit_message_form_container.js":"31","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/message/replies.jsx":"32","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/message/replies_container.js":"33","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/chat/search_dropdown.jsx":"34","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/message/edit_message_form.jsx":"35","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/message/edit_reply_form.jsx":"36","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/chat/side_bar_container.js":"37","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/chat/side_bar.jsx":"38","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/reducers/modal_reducer.js":"39","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/actions/modal_actions.js":"40","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/modal/modal.jsx":"41","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/session/session_form.js":"42","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/splash/splash_page_container.js":"43","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/splash/splash_page.jsx":"44"},{"size":1741,"mtime":1609965181078,"results":"45","hashOfConfig":"46"},{"size":459,"mtime":1609965181082,"results":"47","hashOfConfig":"46"},{"size":286,"mtime":1609287170495,"results":"48","hashOfConfig":"46"},{"size":113,"mtime":1609280323993,"results":"49","hashOfConfig":"46"},{"size":2156,"mtime":1609965181069,"results":"50","hashOfConfig":"46"},{"size":507,"mtime":1609782099615,"results":"51","hashOfConfig":"46"},{"size":773,"mtime":1609986003713,"results":"52","hashOfConfig":"46"},{"size":361,"mtime":1609884541629,"results":"53","hashOfConfig":"46"},{"size":1030,"mtime":1609882506548,"results":"54","hashOfConfig":"46"},{"size":258,"mtime":1609882506535,"results":"55","hashOfConfig":"46"},{"size":914,"mtime":1609965181072,"results":"56","hashOfConfig":"46"},{"size":626,"mtime":1609965181071,"results":"57","hashOfConfig":"46"},{"size":172,"mtime":1606993092138,"results":"58","hashOfConfig":"46"},{"size":717,"mtime":1609965181081,"results":"59","hashOfConfig":"46"},{"size":1659,"mtime":1609965181079,"results":"60","hashOfConfig":"46"},{"size":2517,"mtime":1609965181080,"results":"61","hashOfConfig":"46"},{"size":1922,"mtime":1609965181069,"results":"62","hashOfConfig":"46"},{"size":1069,"mtime":1609782099607,"results":"63","hashOfConfig":"46"},{"size":429,"mtime":1606993092144,"results":"64","hashOfConfig":"46"},{"size":5165,"mtime":1609991835938,"results":"65","hashOfConfig":"46"},{"size":658,"mtime":1609885028324,"results":"66","hashOfConfig":"46"},{"size":606,"mtime":1609884998628,"results":"67","hashOfConfig":"46"},{"size":8384,"mtime":1609988044250,"results":"68","hashOfConfig":"46"},{"size":333,"mtime":1609280323948,"results":"69","hashOfConfig":"46"},{"size":302,"mtime":1609184311855,"results":"70","hashOfConfig":"46"},{"size":974,"mtime":1609965181082,"results":"71","hashOfConfig":"46"},{"size":182,"mtime":1609965181072,"results":"72","hashOfConfig":"46"},{"size":679,"mtime":1609965181077,"results":"73","hashOfConfig":"46"},{"size":2697,"mtime":1609782099611,"results":"74","hashOfConfig":"46"},{"size":2328,"mtime":1609965181077,"results":"75","hashOfConfig":"46"},{"size":578,"mtime":1609965181076,"results":"76","hashOfConfig":"46"},{"size":6448,"mtime":1609965181078,"results":"77","hashOfConfig":"46"},{"size":562,"mtime":1609782099613,"results":"78","hashOfConfig":"46"},{"size":11676,"mtime":1609965181073,"results":"79","hashOfConfig":"46"},{"size":1915,"mtime":1609965181076,"results":"80","hashOfConfig":"46"},{"size":2362,"mtime":1609881586429,"results":"81","hashOfConfig":"46"},{"size":593,"mtime":1609985667593,"results":"82","hashOfConfig":"46"},{"size":3960,"mtime":1609987400683,"results":"83","hashOfConfig":"46"},{"size":282,"mtime":1609884448890,"results":"84","hashOfConfig":"46"},{"size":245,"mtime":1609884319323,"results":"85","hashOfConfig":"46"},{"size":1002,"mtime":1609884778769,"results":"86","hashOfConfig":"46"},{"size":3507,"mtime":1609980911865,"results":"87","hashOfConfig":"46"},{"size":367,"mtime":1609885396655,"results":"88","hashOfConfig":"46"},{"size":594,"mtime":1609967578083,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"1wmyq9k",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"92"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"92"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"92"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"92"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"92"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"92"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"92"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/index.js",[],["186","187"],"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/util/session_api_util.js",[],"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/root.js",[],"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/util/giphy_api_util.js",[],"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/actions/session_actions.js",[],"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/store/store.js",[],"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/app.js",["188","189","190","191"],"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/reducers/root_reducer.js",[],"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/util/route_util.js",[],"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/main/main_page.js",[],"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/chat/dashboard_container.js",[],"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/chat/chat_box_container.js",[],"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/reducers/errors_reducer.js",[],"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/reducers/session_reducer.js",["192"],"import { RECEIVE_CURRENT_USER, \n         RECEIVE_USER_LOGOUT, \n         RECEIVE_USER_SIGN_IN } from '../actions/session_actions';\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case RECEIVE_CURRENT_USER:\n      // console.log(action.currentUser)\n      return {\n        ...state,\n        isAuthenticated: !!action.currentUser,\n        user: action.currentUser\n      };\n    case RECEIVE_USER_LOGOUT:\n      return {\n        isAuthenticated: false,\n        user: undefined\n      };\n    case RECEIVE_USER_SIGN_IN:\n      return ({\n        ...state,\n        isSignedIn: true\n      })\n    default:\n      return state;\n  }\n}","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/reducers/messages_reducer.js",[],"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/reducers/rooms_reducer.js",[],"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/actions/room_actions.js",["193","194","195","196"],"import { getRoom, getRooms, deleteRoomUtil, updateRoomUtil, createRoomUtil, getRoomUsers, leaveRoomUtil } from '../util/room_api_util';\n\nexport const RECEIVE_ROOMS = \"RECEIVE_ROOMS\";\nexport const RECEIVE_ROOM = \"RECEIVE_ROOM\";\nexport const DELETE_ROOM = \"DELETE_ROOM\";\nexport const UPDATE_ROOM = \"UPDATE_ROOM\";\nexport const LEAVE_ROOM = \"LEAVE_ROOM\";\n//export const RECEIVE_NEW_MESSAGE = \"RECEIVE_NEW_MESSAGE\";\nexport const RECEIVE_ROOM_USERS = \"RECEIVE_ROOM_USERS\";\nexport const CHAT_ROOM_STATUS = 'CHAT_ROOM_STATUS';\n\n\nexport const receiveRooms = rooms => ({\n  type: RECEIVE_ROOMS,\n  rooms\n});\n\nexport const deleteRoom = room => ({\n  type: DELETE_ROOM,\n  room\n});\n\nexport const updateRoom = room => ({\n  type: UPDATE_ROOM,\n  room\n})\n\nexport const exitRoom = room => ({\n  type: LEAVE_ROOM,\n  room\n})\n\nexport const receiveRoom = room => ({\n  type: RECEIVE_ROOM,\n  room\n})\n\nexport const chatRoomStatus = data => ({\n  type: CHAT_ROOM_STATUS,\n  data\n})\n\nexport const chatRoomSwitch = data => dispatch => {\n  dispatch(chatRoomStatus(data));\n};\n\n\nexport const fetchRoom = (roomId) => dispatch => (\n  getRoom(roomId)\n    .then(room => dispatch(receiveRoom(room)))\n    .catch(err => console.log(err))\n);\n\nexport const createRoom = room => dispatch => {\n  dispatch(receiveRoom(room))\n}\n\nexport const removeRoom = room => dispatch => (\n  dispatch(deleteRoom(room))\n  )\n\nexport const editRoom = room => dispatch => (\n  updateRoomUtil(room)\n    .then(room => {\n         \n      dispatch(updateRoom(room.data))\n    })\n)\nexport const updateUserList = room => dispatch => {\n    \n  dispatch(updateRoom(room));\n    \n}\n\nexport const leaveRoom = room => dispatch => (\n  updateRoomUtil(room)\n    .then(room => {\n       \n      dispatch(exitRoom(room.data))\n    })\n)\n\nexport const fetchRooms = (userId) => dispatch => (\n  getRooms(userId)\n    .then(rooms => {\n      dispatch(receiveRooms(rooms));\n    })\n    .catch(err => console.log(err))\n);\n\n","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/actions/message_actions.js",[],"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/reducers/session_errors_reducer.js",[],"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/chat/chat_box.jsx",["197"],"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/session/signup_form_container.js",["198"],"import { connect } from 'react-redux';\nimport { signup, login } from '../../actions/session_actions';\nimport SessionForm from './session_form';\nimport { openModal, closeModal } from '../../actions/modal_actions';\n\nconst mapStateToProps = (state) => {\n  return {\n    errors: state.errors.session,\n    signedIn: state.session.isSignedIn,\n    formType: 'Sign up'\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    processForm: user => dispatch(signup(user)),\n    switchForm: () => dispatch(openModal('login')),\n    closeModal: () => dispatch(closeModal()),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SessionForm);","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/session/login_form_container.js",[],"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/chat/dashboard.jsx",["199"],"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/chat/user_list.js",[],"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/util/message_api_util.js",[],"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/util/room_api_util.js",[],"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/chat/data_share.js",[],"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/message/message_container.js",[],"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/giphy/giphy.jsx",[],"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/message/message.jsx",["200","201","202"],"import React, { Component } from 'react';\nimport { debug } from 'request';\nimport EditMessageForm from './edit_message_form_container.js';\nimport Replies from './replies.jsx';\nimport RepliesForm from './replies_container.js'\nexport default class Message extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      repliesOpen: false\n    }\n    this.editMessage = this.editMessage.bind(this);\n    this.deleteMessage = this.deleteMessage.bind(this);\n    this.deleteGif = this.deleteGif.bind(this);\n    this.toggleReplies = this.toggleReplies.bind(this)\n  };\n\n  componentDidMount(){\n    this.props.socket.on(\"Message Edited\", this.editMessage);\n    this.props.socket.on(\"Message Deleted\", this.deleteMessage);\n  };\n\n  editMessage(msg){\n     \n    if (msg._id === this.props.msg.id){\n      this.props.editMessage(msg);\n    }\n  };\n\n  deleteMessage(msg){\n    if (msg._id === this.props.msg.id) {\n      this.props.deleteMessage(msg);\n    }\n  };\n\n  deleteGif(){\n    let response = window.confirm(`Are you sure you want to delete your Gif?`);\n    if (response) {\n      this.props.socket.emit(\"Delete Message\", this.props.msg);\n    }\n  };\n\n  toggleReplies(){\n    this.state.repliesOpen === true ? \n    this.setState({repliesOpen: false}) : this.setState({repliesOpen: true})\n  };\n  \n  render() {\n    //show edit button only if current user was the author of this message\n    //open edit message textfield form if button is clicked\n    //use socket to edit database and all connected users' message\n    //update redux state (room and messages)\n    let msg = this.props.msg;\n    let author = false;\n  \n    if (msg.sender === this.props.user.id){\n       author = true;\n     }\n    \n    let message;\n    if (msg.message.includes('giphy')){\n      message = <li key={msg.id}>{msg.username} says: <img className=\"chat-img\" src={msg.message} alt=\"image\" />\n        {author && \n          <button onClick={this.deleteGif}>Delete Gif</button>\n        }\n      </li>\n    } else {\n      message = <li key={msg.id} id={this.props.id}>{msg.username} says: {msg.message}\n        {author &&\n          <EditMessageForm socket={this.props.socket} msg={msg}/> \n        }\n       \n      </li>\n    }\n\n   \n      //  \n    return (\n      <div>\n      {message}\n        <RepliesForm socket={this.props.socket} msg={msg} />\n      </div>\n   \n    )\n  }\n}\n","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/message/edit_message_form_container.js",[],"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/message/replies.jsx",["203"],"import React from \"react\"\nimport moment from \"moment\";\nimport Picker from 'emoji-picker-react';\nimport Giphy from \"../giphy/giphy\";\nimport EditReplyForm from './edit_reply_form';\nimport * as cloneDeep from 'lodash/cloneDeep';\n\nclass Replies extends React.Component {\n   constructor(props){\n      super(props)\n\n      this.state ={\n         replyBox: false,\n         replyText: \"\",\n         repliesOpen: false,\n         emojiPicker: false,\n      }\n      this.handleReply = this.handleReply.bind(this);\n      this.handleChange = this.handleChange.bind(this);\n      this.submitReply = this.submitReply.bind(this);\n      this.toggleReplies = this.toggleReplies.bind(this)\n      this.openEmoji = this.openEmoji.bind(this);\n      this.selectEmoji = this.selectEmoji.bind(this);\n      this.useGiphy = this.useGiphy.bind(this);\n   };\n\n   //componentDidMount(){\n\n   //}\n\n   handleReply(e) {\n      this.state.replyBox === false ? \n         (this.props.replies  ?\n           this.setState({ replyBox: true, repliesOpen: true })\n           : \n           this.setState({replyBox: true, repliesOpen: false})\n         ) \n        :\n        this.setState({ replyBox: false, repliesOpen: false })\n\n   }\n   handleChange(e){\n      this.setState({\n         replyText: e.currentTarget.value\n      })\n   };\n\n   submitReply(e){\n      e.preventDefault();\n      let username = this.props.user.username;\n      let userId = this.props.user.id;\n       \n      let room = this.props.room;\n\n      let timestamp = moment().format('LT');\n      let reply = this.state.replyText;\n      let message = this.props.msg.message\n      let id =  this.props.message.id;\n      this.props.socket.emit(\"Edit Message\", {\n         reply,\n         timestamp,\n         username,\n         userId,\n         room,\n         message,\n         id\n      })\n      this.setState({\n         replyText: \"\",\n         repliesOpen: true,\n      })\n   };\n\n   toggleReplies() {\n      this.state.repliesOpen === true ?\n         this.setState({ repliesOpen: false, replyBox: false })\n          : \n         this.setState({ repliesOpen: true, replyBox: true })\n   };\n\n   selectEmoji(e, emojiObject) {\n      let newMessage = this.state.replyText + emojiObject.emoji;\n      this.setState({\n         replyText: newMessage\n      })\n   };\n\n   openEmoji() {\n      this.state.emojiPicker === true ?\n         this.setState({ emojiPicker: false }) :\n         this.setState({ emojiPicker: true })\n   };\n\n   useGiphy(e) {\n      e.preventDefault();\n      let username = this.props.user.username;\n      let userId = this.props.user.id;\n      let room = this.props.room;\n\n      let timestamp = moment().format('LT');\n      let reply = `${e.target.src}`;\n      let message = this.props.msg.message;\n      let id = this.props.message.id;\n      this.props.socket.emit(\"Edit Message\", {\n         reply,\n         timestamp,\n         username,\n         userId,\n         room,\n         message,\n         id\n      })\n      this.setState({\n         replyText: \"\",\n         repliesOpen: true,\n      })\n   };\n\n   deleteGifReply(e){\n      let response = window.confirm(`Are you sure you want to delete your Gif?`);\n      if (response) {\n         let replies = cloneDeep(this.props.msg.replies);\n         let replyId = e.currentTarget.id;\n         debugger;\n         let replyIndex = replies.findIndex(reply => replyId === reply._id);\n         replies.splice(replyIndex, 1);\n\n         this.props.socket.emit(\"Edit Message Reply\", {\n            message: this.props.msg,\n            replies: replies,\n         });\n      }\n   }\n\n\n   render(){\n      let msg = this.props.msg;\n\n      return(\n         <div>\n            {msg.replies && this.state.repliesOpen === true ?\n               (\n\n                  [msg.replies.map(reply => {\n                     // return (\n                     if (reply.reply.includes(\"giphy\")){\n                        return (\n                           <li key={reply._id} className=\"reply\" >\n                              {reply.username} says: <img className=\"chat-img\" src={reply.reply} alt=\"image\" />\n                              {reply.userId === this.props.user.id && \n                                 <button onClick={this.deleteGifReply} id={reply._id}>Delete Gif</button>\n                              }\n                           </li>\n                        )\n                     }\n                     else{\n                        return (\n                           <li key={reply._id} className=\"reply\" id={`msg-reply-${reply.reply}`}>\n                              {reply.username} says: {reply.reply}\n                              {reply.userId === this.props.user.id &&\n                                 <EditReplyForm socket={this.props.socket} msg={msg} replyId={reply._id}/>\n                              }\n                           </li>\n                        )\n                     }\n                  }),\n\n                     <button key=\"button\" className=\"replies-div\" onClick={this.toggleReplies}> Close Thread</button> \n                  ])\n               : (msg.replies.length > 0 ? \n                  (msg.replies.length > 1 ?\n                      <button className=\"replies-div\" onClick={this.toggleReplies}> View {msg.replies.length} replies</button>\n                      :\n                     <button className=\"replies-div\" onClick={this.toggleReplies}> View {msg.replies.length} reply</button>\n                  )\n                  : <button className=\"replies-div\" onClick={this.toggleReplies}> Start Thread</button>)\n            }\n            {this.state.replyBox === false ?\n            // (<button onClick={this.handleReply}> Add Reply</button>)\n            \"\"\n            :\n            (\n               <div>\n                  <form onSubmit={this.submitReply}>\n                    \n                     <input type=\"text\" onChange={this.handleChange} value={this.state.replyText}/>\n                        \n                  </form>\n                     {this.state.emojiPicker === false ?\n                        <button onClick={this.openEmoji} > ☺ </button> :\n                        <div onMouseLeave={this.openEmoji}> <Picker className=\"emoji-picker\" onEmojiClick={this.selectEmoji} /> </div>}\n                     <Giphy useGiphy={this.useGiphy} roomTitle={this.props.room.title} />\n                     {/* <button onClick={this.handleReply}> Cancel</button> */}\n               </div>\n            )}\n            \n         </div>\n      )\n   }\n}\n\nexport default Replies;","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/message/replies_container.js",[],"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/chat/search_dropdown.jsx",["204","205","206"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport {switches} from './data_share'\n\nconst mapStateToProps = (state) => {\n\n    return {\n        roomsJoined: state.rooms\n    };\n\n};\n\n\nclass SearchBarDropdown extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.removeEmojis = this.removeEmojis.bind(this);\n        this.listedMessages = this.listedMessages.bind(this);\n        this.findRepliesMasterMessage = this.findRepliesMasterMessage.bind(this);\n        this.objectifiedMessages = this.objectifiedMessages.bind(this);\n        this.filteredRooms = this.filteredRooms.bind(this);\n        this.objectifiedReplies = this.objectifiedReplies.bind(this);\n        this.boyer_moore = this.boyer_moore.bind(this);\n        this.handleOpen = this.handleOpen.bind(this);\n        this.handleClickChatroom = this.handleClickChatroom.bind(this);\n        this.handleClickThread = this.handleClickThread.bind(this);\n    };\n\n\n\n    removeEmojis(string) {//function to replace emojis from https://stackoverflow.com/questions/18862256/how-to-detect-emoji-using-javascript\n        const regex = /(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\u0023-\\u0039]\\ufe0f?\\u20e3|\\u3299|\\u3297|\\u303d|\\u3030|\\u24c2|\\ud83c[\\udd70-\\udd71]|\\ud83c[\\udd7e-\\udd7f]|\\ud83c\\udd8e|\\ud83c[\\udd91-\\udd9a]|\\ud83c[\\udde6-\\uddff]|\\ud83c[\\ude01-\\ude02]|\\ud83c\\ude1a|\\ud83c\\ude2f|\\ud83c[\\ude32-\\ude3a]|\\ud83c[\\ude50-\\ude51]|\\u203c|\\u2049|[\\u25aa-\\u25ab]|\\u25b6|\\u25c0|[\\u25fb-\\u25fe]|\\u00a9|\\u00ae|\\u2122|\\u2139|\\ud83c\\udc04|[\\u2600-\\u26FF]|\\u2b05|\\u2b06|\\u2b07|\\u2b1b|\\u2b1c|\\u2b50|\\u2b55|\\u231a|\\u231b|\\u2328|\\u23cf|[\\u23e9-\\u23f3]|[\\u23f8-\\u23fa]|\\ud83c\\udccf|\\u2934|\\u2935|[\\u2190-\\u21ff])/g;\n        return string.replace(regex, \" \");\n    };\n\n\n\n    listedMessages(obj) {//get an object with roomJoined's title as the key and each room's messages as values\n        const messageArr = [];\n        Object.entries(obj).forEach(room => {\n            const title = [room[1].title]; //put title ar the index 0 in the messageArr\n            const messages = room[1].messages.map(m => (\n                m.message\n            ));\n            const newArr = title.concat(messages)\n            messageArr.push(newArr);\n            debugger\n        });\n        return messageArr;\n    };\n\n    findRepliesMasterMessage(reply, obj){\n        const res = [];\n        Object.entries(obj).forEach(room => {\n            const messages = room[1].messages.map(m => (\n                m.message\n            ));\n            if (messages.includes(reply)){\n                res.push(room[1].title)\n            };\n        });\n        return res;\n    }\n\n    listedReplies(obj) {\n        const repliesArr = [];\n        Object.entries(obj).forEach(room => {\n            let allReplies = [];\n            let title = [room[1].title];\n            let replies = room[1].messages.filter(m => {\n                return m.replies.length > 0\n            });\n            for (let i = 0; i < replies.length; i++) {\n                allReplies = allReplies.concat(replies[i].replies.map(r => (r.reply)));\n            }\n            const newArr = title.concat(allReplies)\n            repliesArr.push(newArr);\n        });\n        return repliesArr;\n    };\n\n    objectifiedMessages(arr) {//get an object with roomJoined's title as the key and each room's messages as values\n        const newObj = {}\n        Object.entries(arr).forEach(room => {\n            newObj[room[1].title] = room[1].messages.map(m => (m.message));\n        });\n        return newObj;\n    };\n\n    objectifiedReplies(arr) {\n        const repObj = {};\n        arr.forEach(room => {\n            repObj[room[0]] = room.slice(1);\n        });\n        return repObj;\n    };\n\n    filteredRooms(sub) {//display a list of matching rooms\n        const { allRooms } = this.props;\n        const roomList = allRooms.map(room => {\n\n            return room.title\n        });\n        let filteredRooms = [];\n        for (let r = 0; r < roomList.length; r++) {\n            let skip;\n            let bad_char = new Array(265).fill(-1);\n\n            for (let t = 0; t < sub.length; t++) {//constructing a bad character table for each chatacter in the substring at its corresponding place in 256 ASCII characters\n                const index = sub[t].charCodeAt();\n                bad_char[index] = t;\n            };\n\n            for (let i = 0; i <= roomList[r].length - sub.length; i += skip) {//compare each character from substring to string, if mismatch, then shift to the next matching character; if no matching character found, shift the entire length of the substring\n                skip = 0;\n                for (let j = sub.length - 1; j >= 0; j--) {\n                    if (sub[j].toLowerCase() != roomList[r][i + j].toLowerCase()) {\n                        const asciiIndex = bad_char[roomList[r][i + j].charCodeAt()];\n                        skip = 1 > j - asciiIndex ? 1 : j - asciiIndex;\n                        break;\n                    }\n                };\n                if (skip === 0) {\n                    filteredRooms.push([roomList[r]]);\n                    skip++;\n                    break\n                }\n            }\n        }\n        return filteredRooms; //return list of object with matching room name as key and character index as value \n    };\n\n    boyer_moore(arr, sub) {//customized seaching function based on Boyer Moore searchign algorithm for faster lookup\n        let filteredMessages = [];\n        arr.forEach(room => {//iterating thru rooms\n            for (let r = 1; r < room.length; r++) {//iterating thru messages in each room\n                if (room[r].slice(0, 8) !== 'https://' && room[r].slice(room[r].length - 4, room[r].length) !== '.gif' &&\n                    room[r].slice(0, 4) !== '<img' && room[r].slice(room[r].length - 1, room[r].length) !== '>') {//skipiing gifs\n                    room[r] = this.removeEmojis(room[r]);\n                    let skip;\n                    let bad_char = new Array(265).fill(-1);\n\n                    for (let t = 0; t < sub.length; t++) {//constructing a bad character table for each chatacter in the substring at its corresponding place in 256 ASCII characters\n                        const index = sub[t].charCodeAt();\n                        bad_char[index] = t;\n                    };\n\n                    for (let i = 0; i <= room[r].length - sub.length; i += skip) {//compare each character from substring to string, if mismatch, then shift to the next matching character; if no matching character found, shift the entire length of the substring\n                        skip = 0;\n                        for (let j = sub.length - 1; j >= 0; j--) {\n                            if (sub[j].toLowerCase() != room[r][i + j].toLowerCase()) {\n                                const asciiIndex = bad_char[room[r][i + j].charCodeAt()];\n                                skip = 1 > j - asciiIndex ? 1 : j - asciiIndex;\n                                break;\n                            }\n                        };\n                        if (skip === 0) {\n                            filteredMessages.push([room[0], r - 1, i]);\n                            skip++;\n                        };\n                    }\n                }\n            }\n        });\n\n        return filteredMessages; //this returns an array: [room_title, message_index, matching_character_index]\n    };\n\n    handleOpen(id){\n        const roomTitle = id.split('-');\n        switches.sendOpen(roomTitle[1]);//tells the chatroom to open\n    };\n\n    handleClickChatroom(id) {\n        this.handleOpen(id);\n        setTimeout(()=>{//open first then search the element\n            const ele = document.getElementById(id);\n            ele.scrollIntoView();\n            this.props.handleDropDown();\n        }, 100);\n    };\n\n    handleClickThread(id) {\n        const roomTitle = id.split('-');\n        switches.sendOpen(roomTitle[2]);\n        setTimeout(()=>{\n            //get the master message here and grab its id\n            const ele = document.getElementById(id);\n            ele.scrollIntoView();\n            // this.props.handleDropDown();\n        }, 100);\n    };\n\n    render() {\n        let { roomsJoined, allRooms, roomsAvailable, searchInput } = this.props;\n        if (allRooms !== undefined && roomsAvailable.data !== undefined) {\n            allRooms = allRooms.map(r => (Object.values(r))).map(roomTitle => (roomTitle[3])) || []; //return an array of all of the room titles [\"Dave's Room #1\", \"sss\", \"hahaha\", \"heyheyhey\", \"lala\", \"blah\", \"yoyo\", \"Cars\", \"new new new\"]\n            roomsAvailable = roomsAvailable.data.map(r => (Object.values(r))).map(roomTitle => (roomTitle[3])) || []; //return an array of all the rooms available to join\n        };\n\n        const roomArr = this.listedMessages(roomsJoined);\n        const repliesArr = this.listedReplies(roomsJoined);\n        const roomsDisplayed = roomArr.map(r => (r[0]));\n        \n        const availableRoomObj = this.objectifiedMessages(roomsJoined);\n        const searchableReplies = this.objectifiedReplies(repliesArr);\n\n        const matchedMessages = this.boyer_moore(roomArr, searchInput).map(m => {\n            return [availableRoomObj[m[0]][m[1]].slice(m[2]), m[0], m[1]]; //m[0] is the chatroom title; m[1] is the index number for the matching string in the array; and m[2] is the matching substring\n        });\n        const matchedRooms = this.filteredRooms(searchInput).map(room => {\n            return room[0];\n        });\n        const matchedReplies = this.boyer_moore(repliesArr, searchInput).map(m => {\n            return [searchableReplies[m[0]][m[1]].slice(m[2]), m[0], m[1], searchableReplies[m[0]][m[1]]]; //m[0] is the chatroom title; m[1] is the index number for the matching string in the array; and m[2] is the matching substring\n        });\n\n        //function to find the thread master for the reply using the searchableReplies[m[0]][m[1]] from line 190\n        const roomsJoinable = matchedRooms.filter(room => (roomsAvailable.includes(room)));\n        const roomsOpened = matchedRooms.filter(room => (roomsDisplayed.includes(room)));\n\n        // debugger\n        return (\n            <div className='searchbar-dropdown'>\n                <div className='message-results'>\n                    {matchedMessages.length === 0 ?\n                        <p>No Match Found</p>\n                        :\n                        <ul>\n                            {matchedMessages.map(m => {\n                                return (\n                                    <li onClick={() => this.handleClickChatroom(`msg-${m[1]}-${m[2]}`)}>\n                                        Message: {m[0]} Room: {m[1]}\n                                    </li>\n                                )\n                            })}\n                        </ul>}\n                </div>\n                <p>------------------------------</p>\n                <div className='replies-results'>\n                    {matchedReplies.length === 0 ?\n                        <p>No Match Found</p>\n                        :\n                        <ul>\n                            {matchedReplies.map(m => {\n                                const masterMessage = this.findRepliesMasterMessage(m[3], roomsJoined)//this should return a list of master messages\n                                return (\n                                    <li onClick={() => this.handleClickChatroom(`msg-reply-${m[3]}`)}>\n                                        Thread Replies: {m[0]} Room: {m[1]}\n                                    </li>\n                                )\n                            })}\n                        </ul>}\n                </div>\n                <p>------------------------------</p>\n                <div className='room-results'>\n                    {matchedRooms.length === 0 ?\n                        <p>No Match Found</p>\n                        :\n                        <ul>\n                            {roomsJoinable.length === 0 ? null :\n\n                                roomsJoinable.map(r => {\n                                    return (\n                                        <li>\n                                            {r}\n                                            <p>Rooms Not Joined</p>\n                                        </li>\n                                    )\n                                })\n                            }\n                            {roomsOpened.length === 0 ? null :\n                                roomsOpened.map(r => {\n                                    return (\n                                        <li>{r}</li>\n                                    )\n                                })\n                            }\n                        </ul>}\n\n                </div>\n            </div>\n        )\n    }\n};\n\n\nexport default connect(\n    mapStateToProps,\n    null\n)(SearchBarDropdown);","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/message/edit_message_form.jsx",[],"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/message/edit_reply_form.jsx",[],"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/chat/side_bar_container.js",[],"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/chat/side_bar.jsx",["207"],"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/reducers/modal_reducer.js",[],"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/actions/modal_actions.js",[],"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/modal/modal.jsx",[],"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/session/session_form.js",[],"/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/splash/splash_page_container.js",["208"],"import { connect } from 'react-redux';\nimport { openModal, closeModal} from '../../actions/modal_actions';\nimport SplashPage from './splash_page';\n\nconst mapStateToProps = (state) => ({\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  openModal: modal => dispatch(openModal(modal))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SplashPage);","/Users/lynnq/Desktop/MERN/Pillar/frontend/src/components/splash/splash_page.jsx",[],{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","severity":1,"message":"214","line":3,"column":18,"nodeType":"215","messageId":"216","endLine":3,"endColumn":23},{"ruleId":"213","severity":1,"message":"217","line":5,"column":8,"nodeType":"215","messageId":"216","endLine":5,"endColumn":16},{"ruleId":"213","severity":1,"message":"218","line":6,"column":8,"nodeType":"215","messageId":"216","endLine":6,"endColumn":15},{"ruleId":"213","severity":1,"message":"219","line":9,"column":8,"nodeType":"215","messageId":"216","endLine":9,"endColumn":14},{"ruleId":"220","severity":1,"message":"221","line":10,"column":1,"nodeType":"222","endLine":32,"endColumn":2},{"ruleId":"213","severity":1,"message":"223","line":1,"column":29,"nodeType":"215","messageId":"216","endLine":1,"endColumn":43},{"ruleId":"213","severity":1,"message":"224","line":1,"column":61,"nodeType":"215","messageId":"216","endLine":1,"endColumn":75},{"ruleId":"213","severity":1,"message":"225","line":1,"column":77,"nodeType":"215","messageId":"216","endLine":1,"endColumn":89},{"ruleId":"213","severity":1,"message":"226","line":1,"column":91,"nodeType":"215","messageId":"216","endLine":1,"endColumn":104},{"ruleId":"213","severity":1,"message":"227","line":2,"column":8,"nodeType":"215","messageId":"216","endLine":2,"endColumn":10},{"ruleId":"213","severity":1,"message":"228","line":2,"column":18,"nodeType":"215","messageId":"216","endLine":2,"endColumn":23},{"ruleId":"229","severity":1,"message":"230","line":72,"column":37,"nodeType":"231","messageId":"232","endLine":72,"endColumn":39},{"ruleId":"213","severity":1,"message":"233","line":2,"column":10,"nodeType":"215","messageId":"216","endLine":2,"endColumn":15},{"ruleId":"213","severity":1,"message":"234","line":4,"column":8,"nodeType":"215","messageId":"216","endLine":4,"endColumn":15},{"ruleId":"235","severity":1,"message":"236","line":63,"column":55,"nodeType":"237","endLine":63,"endColumn":113},{"ruleId":"235","severity":1,"message":"236","line":149,"column":54,"nodeType":"237","endLine":149,"endColumn":112},{"ruleId":"229","severity":1,"message":"230","line":118,"column":46,"nodeType":"231","messageId":"232","endLine":118,"endColumn":48},{"ruleId":"229","severity":1,"message":"230","line":152,"column":54,"nodeType":"231","messageId":"232","endLine":152,"endColumn":56},{"ruleId":"213","severity":1,"message":"238","line":247,"column":39,"nodeType":"215","messageId":"216","endLine":247,"endColumn":52},{"ruleId":"213","severity":1,"message":"225","line":2,"column":9,"nodeType":"215","messageId":"216","endLine":2,"endColumn":21},{"ruleId":"213","severity":1,"message":"239","line":2,"column":21,"nodeType":"215","messageId":"216","endLine":2,"endColumn":31},"no-native-reassign",["240"],"no-negated-in-lhs",["241"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'MainPage' is defined but never used.","'ChatBox' is defined but never used.","'NavBar' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'deleteRoomUtil' is defined but never used.","'createRoomUtil' is defined but never used.","'getRoomUsers' is defined but never used.","'leaveRoomUtil' is defined but never used.","'io' is defined but never used.","'login' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'debug' is defined but never used.","'Replies' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'masterMessage' is assigned a value but never used.","'closeModal' is defined but never used.","no-global-assign","no-unsafe-negation"]