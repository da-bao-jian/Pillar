[{"/home/harry/App Academy/MERN/Pillar/frontend/src/index.js":"1","/home/harry/App Academy/MERN/Pillar/frontend/src/components/root.js":"2","/home/harry/App Academy/MERN/Pillar/frontend/src/actions/session_actions.js":"3","/home/harry/App Academy/MERN/Pillar/frontend/src/util/session_api_util.js":"4","/home/harry/App Academy/MERN/Pillar/frontend/src/store/store.js":"5","/home/harry/App Academy/MERN/Pillar/frontend/src/reducers/root_reducer.js":"6","/home/harry/App Academy/MERN/Pillar/frontend/src/components/app.js":"7","/home/harry/App Academy/MERN/Pillar/frontend/src/util/route_util.js":"8","/home/harry/App Academy/MERN/Pillar/frontend/src/reducers/errors_reducer.js":"9","/home/harry/App Academy/MERN/Pillar/frontend/src/reducers/messages_reducer.js":"10","/home/harry/App Academy/MERN/Pillar/frontend/src/components/main/main_page.js":"11","/home/harry/App Academy/MERN/Pillar/frontend/src/reducers/session_reducer.js":"12","/home/harry/App Academy/MERN/Pillar/frontend/src/components/session/login_form_container.js":"13","/home/harry/App Academy/MERN/Pillar/frontend/src/reducers/rooms_reducer.js":"14","/home/harry/App Academy/MERN/Pillar/frontend/src/components/session/signup_form_container.js":"15","/home/harry/App Academy/MERN/Pillar/frontend/src/components/chat/dashboard_container.js":"16","/home/harry/App Academy/MERN/Pillar/frontend/src/components/nav/navbar_container.js":"17","/home/harry/App Academy/MERN/Pillar/frontend/src/reducers/session_errors_reducer.js":"18","/home/harry/App Academy/MERN/Pillar/frontend/src/actions/message_actions.js":"19","/home/harry/App Academy/MERN/Pillar/frontend/src/actions/room_actions.js":"20","/home/harry/App Academy/MERN/Pillar/frontend/src/components/nav/navbar.js":"21","/home/harry/App Academy/MERN/Pillar/frontend/src/components/chat/dashboard.jsx":"22","/home/harry/App Academy/MERN/Pillar/frontend/src/util/room_api_util.js":"23","/home/harry/App Academy/MERN/Pillar/frontend/src/util/message_api_util.js":"24","/home/harry/App Academy/MERN/Pillar/frontend/src/components/chat/chat_box_container.js":"25","/home/harry/App Academy/MERN/Pillar/frontend/src/components/chat/side_bar_container.js":"26","/home/harry/App Academy/MERN/Pillar/frontend/src/components/chat/chat_box.jsx":"27","/home/harry/App Academy/MERN/Pillar/frontend/src/components/chat/side_bar.jsx":"28","/home/harry/App Academy/MERN/Pillar/frontend/src/components/chat/user_list.js":"29","/home/harry/App Academy/MERN/Pillar/frontend/src/components/chat/search_dropdown.jsx":"30","/home/harry/App Academy/MERN/Pillar/frontend/src/util/giphy_api_util.js":"31","/home/harry/App Academy/MERN/Pillar/frontend/src/components/giphy/giphy.jsx":"32","/home/harry/App Academy/MERN/Pillar/frontend/src/components/message/message_container.js":"33","/home/harry/App Academy/MERN/Pillar/frontend/src/components/message/message.jsx":"34","/home/harry/App Academy/MERN/Pillar/frontend/src/components/message/edit_message_form_container.js":"35","/home/harry/App Academy/MERN/Pillar/frontend/src/components/message/edit_message_form.jsx":"36","/home/harry/App Academy/MERN/Pillar/frontend/src/components/message/replies_container.js":"37","/home/harry/App Academy/MERN/Pillar/frontend/src/components/message/replies.jsx":"38","/home/harry/App Academy/MERN/Pillar/frontend/src/components/chat/data_share.js":"39","/home/harry/App Academy/MERN/Pillar/frontend/src/components/message/edit_reply_form.jsx":"40","/home/harry/App Academy/MERN/Pillar/frontend/src/components/session/signup_form.js":"41","/home/harry/App Academy/MERN/Pillar/frontend/src/components/session/login_form.js":"42"},{"size":1901,"mtime":1609987941276,"results":"43","hashOfConfig":"44"},{"size":286,"mtime":1609378349288,"results":"45","hashOfConfig":"44"},{"size":2197,"mtime":1609987941208,"results":"46","hashOfConfig":"44"},{"size":550,"mtime":1609987941291,"results":"47","hashOfConfig":"44"},{"size":507,"mtime":1609378349320,"results":"48","hashOfConfig":"44"},{"size":316,"mtime":1609987810145,"results":"49","hashOfConfig":"44"},{"size":808,"mtime":1609987810124,"results":"50","hashOfConfig":"44"},{"size":1030,"mtime":1609797289075,"results":"51","hashOfConfig":"44"},{"size":172,"mtime":1608084305856,"results":"52","hashOfConfig":"44"},{"size":1779,"mtime":1609987941279,"results":"53","hashOfConfig":"44"},{"size":258,"mtime":1609797289044,"results":"54","hashOfConfig":"44"},{"size":737,"mtime":1609987941285,"results":"55","hashOfConfig":"44"},{"size":506,"mtime":1609987810138,"results":"56","hashOfConfig":"44"},{"size":2531,"mtime":1609987941281,"results":"57","hashOfConfig":"44"},{"size":603,"mtime":1609987810143,"results":"58","hashOfConfig":"44"},{"size":920,"mtime":1609987941219,"results":"59","hashOfConfig":"44"},{"size":333,"mtime":1608084305845,"results":"60","hashOfConfig":"44"},{"size":429,"mtime":1608084305863,"results":"61","hashOfConfig":"44"},{"size":1069,"mtime":1609709711662,"results":"62","hashOfConfig":"44"},{"size":2262,"mtime":1609987941205,"results":"63","hashOfConfig":"44"},{"size":1444,"mtime":1609987810135,"results":"64","hashOfConfig":"44"},{"size":8619,"mtime":1609987941216,"results":"65","hashOfConfig":"44"},{"size":1248,"mtime":1609987941288,"results":"66","hashOfConfig":"44"},{"size":302,"mtime":1608336332628,"results":"67","hashOfConfig":"44"},{"size":849,"mtime":1609987941213,"results":"68","hashOfConfig":"44"},{"size":1013,"mtime":1609987941236,"results":"69","hashOfConfig":"44"},{"size":5905,"mtime":1609988379032,"results":"70","hashOfConfig":"44"},{"size":4125,"mtime":1609987941233,"results":"71","hashOfConfig":"44"},{"size":333,"mtime":1608747853901,"results":"72","hashOfConfig":"44"},{"size":14038,"mtime":1609988337449,"results":"73","hashOfConfig":"44"},{"size":113,"mtime":1609012435523,"results":"74","hashOfConfig":"44"},{"size":2697,"mtime":1609709711702,"results":"75","hashOfConfig":"44"},{"size":680,"mtime":1609987941269,"results":"76","hashOfConfig":"44"},{"size":2348,"mtime":1609987941259,"results":"77","hashOfConfig":"44"},{"size":579,"mtime":1609987941256,"results":"78","hashOfConfig":"44"},{"size":1916,"mtime":1609987941247,"results":"79","hashOfConfig":"44"},{"size":562,"mtime":1609836401500,"results":"80","hashOfConfig":"44"},{"size":6794,"mtime":1609987941272,"results":"81","hashOfConfig":"44"},{"size":375,"mtime":1609987941228,"results":"82","hashOfConfig":"44"},{"size":2362,"mtime":1609836401498,"results":"83","hashOfConfig":"44"},{"size":2842,"mtime":1609987810141,"results":"84","hashOfConfig":"44"},{"size":2231,"mtime":1609987810137,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vbxwgt",{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"90"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"90"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"90"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"90"},"/home/harry/App Academy/MERN/Pillar/frontend/src/index.js",[],"/home/harry/App Academy/MERN/Pillar/frontend/src/components/root.js",[],["181","182"],"/home/harry/App Academy/MERN/Pillar/frontend/src/actions/session_actions.js",[],"/home/harry/App Academy/MERN/Pillar/frontend/src/util/session_api_util.js",[],"/home/harry/App Academy/MERN/Pillar/frontend/src/store/store.js",[],"/home/harry/App Academy/MERN/Pillar/frontend/src/reducers/root_reducer.js",[],"/home/harry/App Academy/MERN/Pillar/frontend/src/components/app.js",["183","184","185"],"import React from 'react';\nimport { AuthRoute, ProtectedRoute } from '../util/route_util';\nimport { Switch, Route } from 'react-router-dom';\nimport NavBarContainer from './nav/navbar_container';\n\nimport MainPage from './main/main_page';\nimport LoginFormContainer from './session/login_form_container';\nimport SignupFormContainer from './session/signup_form_container';\n\nimport DashBoard from './chat/dashboard_container';\nconst App = () => (\n  <div>\n    <NavBarContainer />\n    <Switch>\n        <AuthRoute exact path=\"/login\" component={LoginFormContainer} />\n        <AuthRoute exact path=\"/signup\" component={SignupFormContainer} />\n        <AuthRoute exact path=\"/\" component={MainPage} />\n        <ProtectedRoute exact path=\"/chat\" component={DashBoard} /> \n    </Switch>\n  </div>\n);\n\nexport default App;","/home/harry/App Academy/MERN/Pillar/frontend/src/util/route_util.js",[],"/home/harry/App Academy/MERN/Pillar/frontend/src/reducers/errors_reducer.js",[],"/home/harry/App Academy/MERN/Pillar/frontend/src/reducers/messages_reducer.js",[],"/home/harry/App Academy/MERN/Pillar/frontend/src/components/main/main_page.js",[],"/home/harry/App Academy/MERN/Pillar/frontend/src/reducers/session_reducer.js",["186"],"import { RECEIVE_CURRENT_USER, \n         RECEIVE_USER_LOGOUT, \n         RECEIVE_USER_SIGN_IN } from '../actions/session_actions';\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case RECEIVE_CURRENT_USER:\n      // console.log(action.currentUser)\n      return {\n        ...state,\n        isAuthenticated: !!action.currentUser,\n        user: action.currentUser\n      };\n    case RECEIVE_USER_LOGOUT:\n      return {\n        isAuthenticated: false,\n        user: undefined\n      };\n    case RECEIVE_USER_SIGN_IN:\n      return ({\n        ...state,\n        isSignedIn: true\n      })\n    default:\n      return state;\n  }\n}","/home/harry/App Academy/MERN/Pillar/frontend/src/components/session/login_form_container.js",[],"/home/harry/App Academy/MERN/Pillar/frontend/src/reducers/rooms_reducer.js",[],"/home/harry/App Academy/MERN/Pillar/frontend/src/components/session/signup_form_container.js",["187"],"import { connect } from 'react-redux';\nimport { signup, login } from '../../actions/session_actions';\nimport SignupForm from './signup_form';\nimport {withRouter} from 'react-router-dom'\n\n\nconst mapStateToProps = (state) => {\n    \n  return {\n    errors: state.errors.session,\n    authenticated: state.session.isAuthenticated,\n    signedIn: state.session\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n   \n  return {\n    signup: user => dispatch(signup(user)),\n    login: user => dispatch(login(user))\n\n  }\n}\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignupForm));","/home/harry/App Academy/MERN/Pillar/frontend/src/components/chat/dashboard_container.js",[],"/home/harry/App Academy/MERN/Pillar/frontend/src/components/nav/navbar_container.js",[],"/home/harry/App Academy/MERN/Pillar/frontend/src/reducers/session_errors_reducer.js",[],"/home/harry/App Academy/MERN/Pillar/frontend/src/actions/message_actions.js",[],"/home/harry/App Academy/MERN/Pillar/frontend/src/actions/room_actions.js",["188","189","190","191"],"import { getRoom, getRooms, deleteRoomUtil, updateRoomUtil, createRoomUtil, getRoomUsers, leaveRoomUtil } from '../util/room_api_util';\n\nexport const RECEIVE_ROOMS = \"RECEIVE_ROOMS\";\nexport const RECEIVE_ROOM = \"RECEIVE_ROOM\";\nexport const DELETE_ROOM = \"DELETE_ROOM\";\nexport const UPDATE_ROOM = \"UPDATE_ROOM\";\nexport const LEAVE_ROOM = \"LEAVE_ROOM\";\n//export const RECEIVE_NEW_MESSAGE = \"RECEIVE_NEW_MESSAGE\";\nexport const RECEIVE_ROOM_USERS = \"RECEIVE_ROOM_USERS\";\nexport const CHAT_ROOM_STATUS = 'CHAT_ROOM_STATUS';\n\n\nexport const receiveRooms = rooms => ({\n  type: RECEIVE_ROOMS,\n  rooms\n});\n\nexport const deleteRoom = room => ({\n  type: DELETE_ROOM,\n  room\n});\n\nexport const updateRoom = room => ({\n  type: UPDATE_ROOM,\n  room\n})\n\nexport const exitRoom = room => ({\n  type: LEAVE_ROOM,\n  room\n})\n\nexport const receiveRoom = room => ({\n  type: RECEIVE_ROOM,\n  room\n})\n\nexport const chatRoomStatus = data => ({\n  type: CHAT_ROOM_STATUS,\n  data\n})\n\nexport const chatRoomSwitch = data => dispatch => {\n  dispatch(chatRoomStatus(data));\n};\n\n\nexport const fetchRoom = (roomId) => dispatch => (\n  getRoom(roomId)\n    .then(room => dispatch(receiveRoom(room)))\n    .catch(err => console.log(err))\n);\n\nexport const createRoom = room => dispatch => {\n  dispatch(receiveRoom(room))\n}\n\nexport const removeRoom = room => dispatch => (\n  dispatch(deleteRoom(room))\n  )\n\nexport const editRoom = room => dispatch => (\n  updateRoomUtil(room)\n    .then(room => {\n         \n      dispatch(updateRoom(room.data))\n    })\n)\nexport const updateUserList = room => dispatch => {\n    \n  dispatch(updateRoom(room));\n    \n}\n\nexport const leaveRoom = room => dispatch => (\n  updateRoomUtil(room)\n    .then(room => {\n       \n      dispatch(exitRoom(room.data))\n    })\n)\n\nexport const fetchRooms = (userId) => dispatch => (\n  getRooms(userId)\n    .then(rooms => {\n      dispatch(receiveRooms(rooms));\n    })\n    .catch(err => console.log(err))\n);\n\n","/home/harry/App Academy/MERN/Pillar/frontend/src/components/nav/navbar.js",[],"/home/harry/App Academy/MERN/Pillar/frontend/src/components/chat/dashboard.jsx",["192"],"import React from 'react';\n//import room from '../../../../validation/room';\nimport io from \"socket.io-client\";\nimport ChatBox from './chat_box_container';\nimport Sidebar from './side_bar_container'\nimport { getAvailableRooms, getRooms } from '../../util/room_api_util';\nimport * as cloneDeep from 'lodash/cloneDeep';\nimport \"./chatbox.css\"\nclass DashBoard extends React.Component{\n   constructor(props){\n      super(props);\n      this.socket = io();\n      this.state = {\n         newTitle: \"\",\n         roomsAvailable: [],\n         roomsJoined: [],\n         all: [],\n         deletedRoom: null,\n         errors: [],\n      }\n\n      this.createNewRoom = this.createNewRoom.bind(this);\n      this.handleChange = this.handleChange.bind(this);\n      this.joinRoom = this.joinRoom.bind(this);\n      this.leaveRoom = this.leaveRoom.bind(this);\n      this.userLeft = this.userLeft.bind(this);\n      this.userJoined = this.userJoined.bind(this);\n      this.deleteRoom = this.deleteRoom.bind(this);\n      this.roomDeleted = this.roomDeleted.bind(this);\n      this.ackDelete = this.ackDelete.bind(this);\n      this.roomCreated = this.roomCreated.bind(this);\n      this.addRoomCreationError = this.addRoomCreationError.bind(this);\n      \n   }\n\n   \n   //component did mount\n   componentDidMount(){\n      \n      this.props.getRooms(this.props.user.id); //this pings the database\n      \n      getRooms(this.props.user.id)\n         .then(rooms => {\n            this.setState({\n               roomsJoined: rooms,\n            })\n         })\n         .then(()=>{\n            getAvailableRooms(this.props.user.id) //this pings the database                                \n            .then(rooms => {\n               this.setState({\n                  roomsAvailable: rooms,\n               })\n            })\n            .then(()=>{\n               this.setState({all: this.state.roomsAvailable.data.concat(this.state.roomsJoined.data)})\n            })\n         })\n      \n      this.socket.on(\"user left\", this.userLeft);\n      this.socket.on(\"user joined\", this.userJoined);\n      this.socket.on(\"room deleted\", this.roomDeleted);\n      this.socket.on(\"room created\", this.roomCreated);\n      this.socket.on(\"room creation error\", this.addRoomCreationError);\n   }\n\n   \n\n   componentDidUpdate(prevProps){\n      let user = this.props.user.username;\n      let rooms = this.props.rooms;\n      if (Object.keys(rooms).length != Object.keys(prevProps.rooms).length) {\n         \n         this.socket.emit(\"User connected\", { user, rooms });\n         this.props.getRooms(this.props.user.id); \n         \n         \n      getRooms(this.props.user.id)\n         .then(rooms => {\n            this.setState({\n               roomsJoined: rooms,\n            })\n         })\n         .then(()=>{\n            getAvailableRooms(this.props.user.id) //this pings the database                                \n            .then(rooms => {\n               this.setState({\n                  roomsAvailable: rooms,\n               })\n            })\n            .then(()=>{\n               this.setState({all: this.state.roomsAvailable.data.concat(this.state.roomsJoined.data)})\n            })\n         })\n      };\n   }\n\n   userLeft({ user, room }) { \n      //check if this user belongs to the room\n      let currentRooms = Object.keys(this.props.rooms);\n\n      if (currentRooms.includes(room._id)) {    \n         this.props.updateUserList(room);\n      }\n   }\n\n   userJoined({ user, room }) {\n      //check if this user belongs to the room\n      let currentRooms = Object.keys(this.props.rooms);\n\n      if (currentRooms.includes(room._id)){\n         //reformat the user object added to the room to match existing users\n         room.users.splice(room.users.length - 1, 1);\n         room.users.push({username: user.username, _id: user.id})\n         this.props.updateUserList(room);\n      }\n   }\n   \n   createNewRoom(e){\n      e.preventDefault();\n      e.stopPropagation();\n      let room = {\n         title: this.state.newTitle,\n         admin: this.props.user.id,\n         users: this.props.user.id,\n      }\n      this.socket.emit(\"Create Room\", room);\n      this.setState({\n         newTitle: \"\",\n         errors: []\n      })\n   }\n\n   roomCreated(room){\n       \n      let roomsJoined = cloneDeep(this.state.roomsJoined);\n      let roomsAvail = cloneDeep(this.state.roomsAvailable);\n      let allRooms = cloneDeep(this.state.all);\n      \n      if (room.admin === this.props.user.id){\n         this.props.createRoom(room);\n         roomsJoined.data.push(room);\n         this.setState({\n            roomsJoined: {data: roomsJoined.data},\n         })\n      } else {\n         roomsAvail.data.push(room);\n         this.setState({\n            roomsAvailable: {data: roomsAvail.data},\n         })\n      }\n       \n      allRooms.push(room);\n      this.setState({\n         all: allRooms,\n      })\n   }\n\n   addRoomCreationError({errors, room}){\n      \n      if(room.admin === this.props.user.id){\n         this.setState({\n            errors: [errors.text],\n         })\n      }\n   }\n\n   joinRoom(e){\n       \n      let room = this.state.roomsAvailable.data.filter(room => e.currentTarget.id === room._id ? room : null);\n      \n      room[0].users.push(this.props.user.id);\n      this.props.editRoom(room[0]);\n      \n      this.socket.emit('join room', {\n         room: room[0],\n         user: this.props.user,\n      })\n   }\n\n   leaveRoom(e){\n       \n      let room = cloneDeep(this.props.rooms[e.currentTarget.id]);\n      //find and remove current user from the room users array\n      for (let i = 0; i < room.users.length; i++){\n         if(room.users[i]._id === this.props.user.id){\n            room.users.splice(i, 1);\n         }\n      }\n       \n      this.props.leaveRoom(room);\n      this.socket.emit('leave room',{\n         room: room,\n         user: this.props.user,\n      })\n   }\n\n   deleteRoom(room){\n      this.socket.emit('delete room',{room, user: this.props.user});\n   }\n\n   roomDeleted({room, user}){\n      this.props.deleteRoom(room);\n      //check if this user was a member \n       \n      let roomMembers = room.users;\n      if (this.props.user.id !== room.admin && roomMembers.includes(this.props.user.id)){\n         this.setState({deletedRoom: room});\n         \n      } else {\n         //remove from available rooms list\n         let rmsAvail = cloneDeep(this.state.roomsAvailable);\n         let index = null;\n         for (let i = 0; i < rmsAvail.data.length; i++){\n            if(rmsAvail.data[i]._id === room._id){\n               index = i;\n            }\n         }\n\n         if (index) {\n            rmsAvail.data.splice(index, 1);\n         }\n\n         this.setState({\n            roomsAvailable: {data: rmsAvail.data}\n         })\n          \n      }\n\n      //remove from joined rooms list?\n\n   }\n\n   ackDelete(){\n      this.setState({deletedRoom: null});\n   }\n\n   handleChange(e){\n      this.setState({\n         newTitle: e.currentTarget.value,\n      })\n   };\n\n\n\n\n   render(){\n      let rooms = this.props.rooms || {};\n      let roomIds = [];\n      console.log(\"Dashboard rendered\");\n      Object.keys(rooms).forEach(key => {\n         roomIds.push(rooms[key]._id);  \n      });\n\n      return(\n         <div>\n               <Sidebar \n                  createNewRoom = {this.createNewRoom}\n                  newTitle={this.state.newTitle}\n                  handleChange={this.handleChange}\n                  joinRoom={this.joinRoom}\n                  roomsAvailable={this.state.roomsAvailable}\n                  allRooms = {this.state.all}\n                  errors = {this.state.errors}\n               />\n               {this.state.deletedRoom ? (\n                  <div className=\"deleted-room-alert\">\n                     <h3>{`\"${this.state.deletedRoom.title}\" was deleted by the admin.`}</h3>\n                     <button onClick={this.ackDelete}>OK</button>\n                  </div>\n                  ) : (null)            \n               }\n            <div className=\"chatbox-list\" >\n               {\n                  roomIds.map(id=>\n                     {\n                        return (\n                           <ChatBox leaveRoom={this.leaveRoom} deleteRoom={this.deleteRoom} roomId={id} key={id} socket={this.socket}/>\n                        )\n                     }\n                  )\n               }  \n            </div>\n\n         </div>\n      )\n   }\n}\n\n\nexport default DashBoard;","/home/harry/App Academy/MERN/Pillar/frontend/src/util/room_api_util.js",[],"/home/harry/App Academy/MERN/Pillar/frontend/src/util/message_api_util.js",[],"/home/harry/App Academy/MERN/Pillar/frontend/src/components/chat/chat_box_container.js",[],"/home/harry/App Academy/MERN/Pillar/frontend/src/components/chat/side_bar_container.js",[],"/home/harry/App Academy/MERN/Pillar/frontend/src/components/chat/chat_box.jsx",["193"],"/home/harry/App Academy/MERN/Pillar/frontend/src/components/chat/side_bar.jsx",["194"],"import React from 'react';\nimport {getRoomUsers} from '../../util/room_api_util'\nimport SearchBarDropdown from './search_dropdown'\n\nclass Sidebar extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            show_rooms: false,\n            searchInput: '',\n            dropDown: false,\n            errors: {}\n        };\n        this.handleSearchInput = this.handleSearchInput.bind(this);\n        this.handleDropDown = this.handleDropDown.bind(this);\n        this.displayRooms = this.displayRooms.bind(this);\n        this.hideRooms = this.hideRooms.bind(this);\n    }\n\n    handleSearchInput(e){\n        this.setState({searchInput: e.currentTarget.value, dropDown: true});\n    };\n\n    handleDropDown(){\n        this.setState({dropDown: false});\n    };\n\n    displayRooms(){\n        this.state.show_rooms === true ? \n        this.setState({show_rooms: false}) : this.setState({show_rooms: true});\n    };\n\n    hideRooms(){\n        this.setState({show_rooms:false});\n    };\n\n\n\n\n    render(){\n        let roomsAvailable = this.props.roomsAvailable.data || [];\n        //  \n        return(\n            <div className='sidebar-contaier'>\n                <div className='search-bar-container'>\n                    <input \n                        className='search-bar' \n                        type='text'\n                        onChange={this.handleSearchInput}\n                        onKeyDown={this.handleDropDown}\n                        value={this.state.searchInput}\n                        placeholder='type here to search'\n                    />\n                    {this.state.dropDown && this.state.searchInput.length !== 0 ? \n                        <SearchBarDropdown className='search-bar-dropdown-container'\n                            handleDropDown={this.handleDropDown}\n                            searchInput={this.state.searchInput} \n                            allRooms={this.props.allRooms}\n                            roomsAvailable={this.props.roomsAvailable}\n                            />\n                        : null\n                    }\n                </div>\n                <div>\n                    <form onSubmit={this.props.createNewRoom}>\n                        <input type=\"text\" value={this.props.newTitle} \n                        onChange={this.props.handleChange}\n                        placeholder=\"Enter new room title\"/>\n                    </form>\n\n                    <button onClick={this.props.createNewRoom}>Create a New Chat Room</button>\n                    <h3>{this.props.errors}</h3>\n                </div>\n\n                <div>\n                    <button onClick={()=>this.displayRooms()}>Display All Joinable Chatrooms</button>\n                </div>\n                <div onMouseLeave={this.hideRooms}>\n                    {this.state && this.state.show_rooms === true ? \n                    roomsAvailable.map(room => {\n                     return (\n                        <li id={room._id} key={room._id}>\n                        <p>\n                            Title: {room.title}\n                        </p>\n                        <p>\n                            Number of current users: {room.users.length}\n                        </p>\n                        <button id={room._id} onClick={this.props.joinRoom}>Join Room</button>\n                        </li>\n                     )\n                  }) : null}\n                </div>\n            </div>\n        )\n    }\n};\n\nexport default Sidebar;","/home/harry/App Academy/MERN/Pillar/frontend/src/components/chat/user_list.js",[],"/home/harry/App Academy/MERN/Pillar/frontend/src/components/chat/search_dropdown.jsx",["195","196","197","198"],"/home/harry/App Academy/MERN/Pillar/frontend/src/util/giphy_api_util.js",[],"/home/harry/App Academy/MERN/Pillar/frontend/src/components/giphy/giphy.jsx",[],"/home/harry/App Academy/MERN/Pillar/frontend/src/components/message/message_container.js",[],"/home/harry/App Academy/MERN/Pillar/frontend/src/components/message/message.jsx",["199","200","201"],"import React, { Component } from 'react';\nimport { debug } from 'request';\nimport EditMessageForm from './edit_message_form_container.js';\nimport Replies from './replies.jsx';\nimport RepliesForm from './replies_container.js'\nexport default class Message extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      repliesOpen: false\n    }\n    this.editMessage = this.editMessage.bind(this);\n    this.deleteMessage = this.deleteMessage.bind(this);\n    this.deleteGif = this.deleteGif.bind(this);\n    this.toggleReplies = this.toggleReplies.bind(this)\n  };\n\n  componentDidMount(){\n    this.props.socket.on(\"Message Edited\", this.editMessage);\n    this.props.socket.on(\"Message Deleted\", this.deleteMessage);\n  };\n\n  editMessage(msg){\n     \n    if (msg._id === this.props.msg.id){\n      this.props.editMessage(msg);\n    }\n  };\n\n  deleteMessage(msg){\n    if (msg._id === this.props.msg.id) {\n      this.props.deleteMessage(msg);\n    }\n  };\n\n  deleteGif(){\n    let response = window.confirm(`Are you sure you want to delete your Gif?`);\n    if (response) {\n      this.props.socket.emit(\"Delete Message\", this.props.msg);\n    }\n  };\n\n  toggleReplies(){\n    this.state.repliesOpen === true ? \n    this.setState({repliesOpen: false}) : this.setState({repliesOpen: true})\n  };\n  \n  render() {\n    //show edit button only if current user was the author of this message\n    //open edit message textfield form if button is clicked\n    //use socket to edit database and all connected users' message\n    //update redux state (room and messages)\n    let msg = this.props.msg;\n    let author = false;\n  \n    if (msg.sender === this.props.user.id){\n       author = true;\n     }\n    \n    let message;\n    if (msg.message.includes('giphy')){\n      message = <li key={msg.id}>{msg.username} says: <img className=\"chat-img\" src={msg.message} alt=\"image\" />\n        {author && \n          <button onClick={this.deleteGif}>Delete Gif</button>\n        }\n      </li>\n    } else {\n      message = <li key={msg.id} id={this.props.id}>{msg.username} says: {msg.message}\n        {author &&\n          <EditMessageForm socket={this.props.socket} msg={msg}/> \n        }\n       \n      </li>\n    }\n\n   \n    return (\n      <div>\n      {message}\n\n        <RepliesForm socket={this.props.socket} msg={msg} message={msg.message}/>\n      </div>\n   \n    )\n  }\n}\n","/home/harry/App Academy/MERN/Pillar/frontend/src/components/message/edit_message_form_container.js",[],"/home/harry/App Academy/MERN/Pillar/frontend/src/components/message/edit_message_form.jsx",[],"/home/harry/App Academy/MERN/Pillar/frontend/src/components/message/replies_container.js",[],"/home/harry/App Academy/MERN/Pillar/frontend/src/components/message/replies.jsx",["202"],"import React from \"react\"\nimport moment from \"moment\";\nimport Picker from 'emoji-picker-react';\nimport Giphy from \"../giphy/giphy\";\nimport EditReplyForm from './edit_reply_form';\nimport * as cloneDeep from 'lodash/cloneDeep';\nimport {switcheThread} from './../../components/chat/data_share';\n\n\nclass Replies extends React.Component {\n   constructor(props){\n      super(props)\n\n      this.state ={\n         replyBox: false,\n         replyText: \"\",\n         repliesOpen: false,\n         emojiPicker: false,\n      }\n      this.handleReply = this.handleReply.bind(this);\n      this.handleChange = this.handleChange.bind(this);\n      this.submitReply = this.submitReply.bind(this);\n      this.toggleReplies = this.toggleReplies.bind(this)\n      this.openEmoji = this.openEmoji.bind(this);\n      this.selectEmoji = this.selectEmoji.bind(this);\n      this.useGiphy = this.useGiphy.bind(this);\n      this.deleteGifReply = this.deleteGifReply.bind(this);\n\n   };\n\n   componentDidMount(){\n      this.subscription = switcheThread.receiveOpenThread().subscribe(message=>{\n      if(message === this.props.message.message){\n        this.setState({repliesOpen: true});\n      }; \n    })\n   };\n\n   handleReply(e) {\n      this.state.replyBox === false ? \n         (this.props.replies  ?\n           this.setState({ replyBox: true, repliesOpen: true })\n           : \n           this.setState({replyBox: true, repliesOpen: false})\n         ) \n        :\n        this.setState({ replyBox: false, repliesOpen: false })\n\n   }\n   handleChange(e){\n      this.setState({\n         replyText: e.currentTarget.value\n      })\n   };\n\n   submitReply(e){\n      e.preventDefault();\n      let username = this.props.user.username;\n      let userId = this.props.user.id;\n       \n      let room = this.props.room;\n\n      let timestamp = moment().format('LT');\n      let reply = this.state.replyText;\n      let message = this.props.msg.message\n      let id =  this.props.message.id;\n      this.props.socket.emit(\"Edit Message\", {\n         reply,\n         timestamp,\n         username,\n         userId,\n         room,\n         message,\n         id\n      })\n      this.setState({\n         replyText: \"\",\n         repliesOpen: true,\n      })\n   };\n\n   toggleReplies() {\n      this.state.repliesOpen === true ?\n         this.setState({ repliesOpen: false, replyBox: false })\n          : \n         this.setState({ repliesOpen: true, replyBox: true })\n   };\n\n   selectEmoji(e, emojiObject) {\n      let newMessage = this.state.replyText + emojiObject.emoji;\n      this.setState({\n         replyText: newMessage\n      })\n   };\n\n   openEmoji() {\n      this.state.emojiPicker === true ?\n         this.setState({ emojiPicker: false }) :\n         this.setState({ emojiPicker: true })\n   };\n\n   useGiphy(e) {\n      e.preventDefault();\n      let username = this.props.user.username;\n      let userId = this.props.user.id;\n      let room = this.props.room;\n\n      let timestamp = moment().format('LT');\n      let reply = `${e.target.src}`;\n      let message = this.props.msg.message;\n      let id = this.props.message.id;\n      this.props.socket.emit(\"Edit Message\", {\n         reply,\n         timestamp,\n         username,\n         userId,\n         room,\n         message,\n         id\n      })\n      this.setState({\n         replyText: \"\",\n         repliesOpen: true,\n      })\n   };\n\n   deleteGifReply(e){\n      let response = window.confirm(`Are you sure you want to delete your Gif?`);\n      if (response) {\n         let replies = cloneDeep(this.props.msg.replies);\n         let replyId = e.currentTarget.id;\n          \n         let replyIndex = replies.findIndex(reply => replyId === reply._id);\n         replies.splice(replyIndex, 1);\n\n         this.props.socket.emit(\"Edit Message Reply\", {\n            message: this.props.msg,\n            replies: replies,\n         });\n      }\n   }\n\n\n   render(){\n      let msg = this.props.msg;\n\n      return(\n         <div>\n            {msg.replies && this.state.repliesOpen === true ?\n               (\n\n                  [msg.replies.map(reply => {\n                     // return (\n                     if (reply.reply.includes(\"giphy\")){\n                        return (\n                           <li key={reply._id} className=\"reply\" >\n                              {reply.username} says: <img className=\"chat-img\" src={reply.reply} alt=\"image\" />\n                              {reply.userId === this.props.user.id && \n                                 <button onClick={this.deleteGifReply} id={reply._id}>Delete Gif</button>\n                              }\n                           </li>\n                        )\n                     }\n                     else{\n                        return (\n                           <li key={reply._id} className=\"reply\" id={`msg-reply-${reply.reply}`}>\n                              {reply.username} says: {reply.reply}\n                              {reply.userId === this.props.user.id &&\n                                 <EditReplyForm socket={this.props.socket} msg={msg} replyId={reply._id}/>\n                              }\n                           </li>\n                        )\n                     }\n                  }),\n\n                     <button key=\"button\" className=\"replies-div\" onClick={this.toggleReplies}> Close Thread</button> \n                  ])\n               : (msg.replies.length > 0 ? \n                  (msg.replies.length > 1 ?\n                      <button className=\"replies-div\" onClick={this.toggleReplies}> View {msg.replies.length} replies</button>\n                      :\n                     <button className=\"replies-div\" onClick={this.toggleReplies}> View {msg.replies.length} reply</button>\n                  )\n                  : <button className=\"replies-div\" onClick={this.toggleReplies}> Start Thread</button>)\n            }\n            {this.state.replyBox === false ?\n            // (<button onClick={this.handleReply}> Add Reply</button>)\n            \"\"\n            :\n            (\n               <div>\n                  <form onSubmit={this.submitReply}>\n                    \n                     <input type=\"text\" onChange={this.handleChange} value={this.state.replyText}/>\n                        \n                  </form>\n                     {this.state.emojiPicker === false ?\n                        <button onClick={this.openEmoji} > ☺ </button> :\n                        <div onMouseLeave={this.openEmoji}> <Picker className=\"emoji-picker\" onEmojiClick={this.selectEmoji} /> </div>}\n                     <Giphy useGiphy={this.useGiphy} roomTitle={this.props.room.title} />\n                     {/* <button onClick={this.handleReply}> Cancel</button> */}\n               </div>\n            )}\n            \n         </div>\n      )\n   }\n}\n\nexport default Replies;","/home/harry/App Academy/MERN/Pillar/frontend/src/components/chat/data_share.js",[],"/home/harry/App Academy/MERN/Pillar/frontend/src/components/message/edit_reply_form.jsx",[],"/home/harry/App Academy/MERN/Pillar/frontend/src/components/session/signup_form.js",["203","204","205"],"import { authenticate } from 'passport';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport {Redirect} from 'react-router'\nimport { login } from '../../util/session_api_util';\n\nclass SignupForm extends React.Component {\n  constructor(props) {\n     \n    super(props);\n    this.state = {\n      email: '',\n      username: '',\n      password: '',\n      password2: '',\n      errors: {},\n      is_authenticated: false\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.clearedErrors = false;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    //  \n    if (nextProps.signedIn === true) {\n      this.props.history.push('/pillar');\n    }\n    //  \n    this.setState({errors: nextProps.errors})\n  }\n\n  componentDidUpdate(prevProps){\n    //  \n    if(this.props.authenticated !== prevProps.authenticated){\n      //  \n      this.setState({is_authenticated: true})\n    }\n  }\n\n  update(field) {\n    return e => this.setState({\n      [field]: e.currentTarget.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n     \n    let user = {\n      email: this.state.email,\n      username: this.state.username,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n\n    // this.props.signup(user, this.props.history); \n    this.props.signup(user, this.props.history)\n      .then(user => {\n         \n        this.props.login(user)\n      })\n    // console.log(this.props)\n    // if(this.props.authenticate){\n    //   // this.props.login(user)\n    //   this.props.history.push('/pillars')\n    // }\n\n  }\n\n  renderErrors() {\n    return(\n      <ul>\n        {Object.keys(this.state.errors).map((error, i) => (\n          <li key={`error-${i}`}>\n            {this.state.errors[error]}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"signup-form-container\">\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"signup-form\">\n            <br/>\n              <input type=\"text\"\n                value={this.state.email}\n                onChange={this.update('email')}\n                placeholder=\"Email\"\n              />\n            <br/>\n              <input type=\"text\"\n                value={this.state.username}\n                onChange={this.update('username')}\n                placeholder=\"Username\"\n              />\n            <br/>\n              <input type=\"password\"\n                value={this.state.password}\n                onChange={this.update('password')}\n                placeholder=\"Password\"\n              />\n            <br/>\n              <input type=\"password\"\n                value={this.state.password2}\n                onChange={this.update('password2')}\n                placeholder=\"Confirm Password\"\n              />\n            <br/>\n            <input type=\"submit\" value=\"Submit\" />\n            {this.renderErrors()}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SignupForm);","/home/harry/App Academy/MERN/Pillar/frontend/src/components/session/login_form.js",["206"],"import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport {Redirect} from 'react-router-dom'\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      errors: {},\n      is_authenticated: false\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.renderErrors = this.renderErrors.bind(this);\n  }\n\n\n  // UNSAFE_componentWillReceiveProps(nextProps) {\n  //   if (nextProps.currentUser === true) {\n  //     this.props.history.push('/pillars');\n  //   }\n  //   this.setState({errors: nextProps.errors})\n  // }\n\n  // Handle field updates (called in the render method)\n  update(field) {\n    return e => this.setState({\n      [field]: e.currentTarget.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    let user = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    \n    this.props.login(user);\n    if(this.props.currentUser){\n      this.props.history.push('/pillars')\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.errors !== prevProps.errors) {\n      this.setState({\n        errors: this.props.errors,\n      });\n    }\n  }\n    \n\n\n  \n\n  // Render the session errors if there are any\n  renderErrors() {\n    \n    return(\n      <ul>\n        {Object.keys(this.state.errors).map((error, i) => (\n          <li key={`error-${i}`}>\n            {this.state.errors[error]}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <div>\n              <input type=\"text\"\n                value={this.state.email}\n                onChange={this.update('email')}\n                placeholder=\"Email\"\n              />\n            <br/>\n              <input type=\"password\"\n                value={this.state.password}\n                onChange={this.update('password')}\n                placeholder=\"Password\"\n              />\n            <br/>\n            <input type=\"submit\" value=\"Submit\" />\n            {this.renderErrors()}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(LoginForm);\n",{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":3,"column":18,"nodeType":"213","messageId":"214","endLine":3,"endColumn":23},{"ruleId":"211","severity":1,"message":"215","line":5,"column":8,"nodeType":"213","messageId":"214","endLine":5,"endColumn":16},{"ruleId":"211","severity":1,"message":"216","line":6,"column":8,"nodeType":"213","messageId":"214","endLine":6,"endColumn":15},{"ruleId":"217","severity":1,"message":"218","line":10,"column":1,"nodeType":"219","endLine":32,"endColumn":2},{"ruleId":"211","severity":1,"message":"220","line":2,"column":18,"nodeType":"213","messageId":"214","endLine":2,"endColumn":23},{"ruleId":"211","severity":1,"message":"221","line":1,"column":29,"nodeType":"213","messageId":"214","endLine":1,"endColumn":43},{"ruleId":"211","severity":1,"message":"222","line":1,"column":61,"nodeType":"213","messageId":"214","endLine":1,"endColumn":75},{"ruleId":"211","severity":1,"message":"223","line":1,"column":77,"nodeType":"213","messageId":"214","endLine":1,"endColumn":89},{"ruleId":"211","severity":1,"message":"224","line":1,"column":91,"nodeType":"213","messageId":"214","endLine":1,"endColumn":104},{"ruleId":"225","severity":1,"message":"226","line":75,"column":37,"nodeType":"227","messageId":"228","endLine":75,"endColumn":39},{"ruleId":"211","severity":1,"message":"229","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":10},{"ruleId":"225","severity":1,"message":"226","line":45,"column":30,"nodeType":"227","messageId":"228","endLine":45,"endColumn":32},{"ruleId":"230","severity":1,"message":"231","line":101,"column":66,"nodeType":"232","messageId":"233","endLine":101,"endColumn":68},{"ruleId":"230","severity":1,"message":"231","line":111,"column":66,"nodeType":"232","messageId":"233","endLine":111,"endColumn":68},{"ruleId":"225","severity":1,"message":"226","line":141,"column":46,"nodeType":"227","messageId":"228","endLine":141,"endColumn":48},{"ruleId":"225","severity":1,"message":"226","line":175,"column":54,"nodeType":"227","messageId":"228","endLine":175,"endColumn":56},{"ruleId":"211","severity":1,"message":"234","line":2,"column":10,"nodeType":"213","messageId":"214","endLine":2,"endColumn":15},{"ruleId":"211","severity":1,"message":"235","line":4,"column":8,"nodeType":"213","messageId":"214","endLine":4,"endColumn":15},{"ruleId":"236","severity":1,"message":"237","line":63,"column":55,"nodeType":"238","endLine":63,"endColumn":113},{"ruleId":"236","severity":1,"message":"237","line":157,"column":54,"nodeType":"238","endLine":157,"endColumn":112},{"ruleId":"211","severity":1,"message":"239","line":1,"column":10,"nodeType":"213","messageId":"214","endLine":1,"endColumn":22},{"ruleId":"211","severity":1,"message":"240","line":4,"column":9,"nodeType":"213","messageId":"214","endLine":4,"endColumn":17},{"ruleId":"211","severity":1,"message":"220","line":5,"column":10,"nodeType":"213","messageId":"214","endLine":5,"endColumn":15},{"ruleId":"211","severity":1,"message":"240","line":3,"column":9,"nodeType":"213","messageId":"214","endLine":3,"endColumn":17},"no-native-reassign",["241"],"no-negated-in-lhs",["242"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'MainPage' is defined but never used.","'ChatBox' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'login' is defined but never used.","'deleteRoomUtil' is defined but never used.","'createRoomUtil' is defined but never used.","'getRoomUsers' is defined but never used.","'leaveRoomUtil' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'io' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'debug' is defined but never used.","'Replies' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'authenticate' is defined but never used.","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation"]