[{"/Users/jae/Documents/Pillar/frontend/src/index.js":"1","/Users/jae/Documents/Pillar/frontend/src/components/root.js":"2","/Users/jae/Documents/Pillar/frontend/src/util/giphy_api_util.js":"3","/Users/jae/Documents/Pillar/frontend/src/util/room_api_util.js":"4","/Users/jae/Documents/Pillar/frontend/src/store/store.js":"5","/Users/jae/Documents/Pillar/frontend/src/util/session_api_util.js":"6","/Users/jae/Documents/Pillar/frontend/src/actions/session_actions.js":"7","/Users/jae/Documents/Pillar/frontend/src/components/app.js":"8","/Users/jae/Documents/Pillar/frontend/src/reducers/root_reducer.js":"9","/Users/jae/Documents/Pillar/frontend/src/util/route_util.js":"10","/Users/jae/Documents/Pillar/frontend/src/components/main/main_page.js":"11","/Users/jae/Documents/Pillar/frontend/src/components/session/login_form_container.js":"12","/Users/jae/Documents/Pillar/frontend/src/components/session/signup_form_container.js":"13","/Users/jae/Documents/Pillar/frontend/src/reducers/session_reducer.js":"14","/Users/jae/Documents/Pillar/frontend/src/components/chat/dashboard_container.js":"15","/Users/jae/Documents/Pillar/frontend/src/reducers/errors_reducer.js":"16","/Users/jae/Documents/Pillar/frontend/src/reducers/messages_reducer.js":"17","/Users/jae/Documents/Pillar/frontend/src/reducers/rooms_reducer.js":"18","/Users/jae/Documents/Pillar/frontend/src/reducers/session_errors_reducer.js":"19","/Users/jae/Documents/Pillar/frontend/src/actions/room_actions.js":"20","/Users/jae/Documents/Pillar/frontend/src/actions/message_actions.js":"21","/Users/jae/Documents/Pillar/frontend/src/components/chat/dashboard.jsx":"22","/Users/jae/Documents/Pillar/frontend/src/util/message_api_util.js":"23","/Users/jae/Documents/Pillar/frontend/src/components/chat/chat_box_container.js":"24","/Users/jae/Documents/Pillar/frontend/src/components/chat/side_bar_container.js":"25","/Users/jae/Documents/Pillar/frontend/src/components/chat/chat_box.jsx":"26","/Users/jae/Documents/Pillar/frontend/src/components/chat/side_bar.jsx":"27","/Users/jae/Documents/Pillar/frontend/src/components/chat/user_list.js":"28","/Users/jae/Documents/Pillar/frontend/src/components/chat/data_share.js":"29","/Users/jae/Documents/Pillar/frontend/src/components/message/message_container.js":"30","/Users/jae/Documents/Pillar/frontend/src/components/chat/search_dropdown.jsx":"31","/Users/jae/Documents/Pillar/frontend/src/components/giphy/giphy.jsx":"32","/Users/jae/Documents/Pillar/frontend/src/components/message/message.jsx":"33","/Users/jae/Documents/Pillar/frontend/src/components/message/replies_container.js":"34","/Users/jae/Documents/Pillar/frontend/src/components/message/replies.jsx":"35","/Users/jae/Documents/Pillar/frontend/src/components/message/edit_message_form_container.js":"36","/Users/jae/Documents/Pillar/frontend/src/components/message/edit_reply_form.jsx":"37","/Users/jae/Documents/Pillar/frontend/src/components/message/edit_message_form.jsx":"38","/Users/jae/Documents/Pillar/frontend/src/reducers/modal_reducer.js":"39","/Users/jae/Documents/Pillar/frontend/src/components/splash/splash_page_container.js":"40","/Users/jae/Documents/Pillar/frontend/src/components/modal/modal.jsx":"41","/Users/jae/Documents/Pillar/frontend/src/actions/modal_actions.js":"42","/Users/jae/Documents/Pillar/frontend/src/components/splash/splash_page.jsx":"43","/Users/jae/Documents/Pillar/frontend/src/components/session/session_form.js":"44"},{"size":1901,"mtime":1611714214702,"results":"45","hashOfConfig":"46"},{"size":286,"mtime":1611679565359,"results":"47","hashOfConfig":"46"},{"size":113,"mtime":1611679565364,"results":"48","hashOfConfig":"46"},{"size":1120,"mtime":1611679565364,"results":"49","hashOfConfig":"46"},{"size":507,"mtime":1611679565363,"results":"50","hashOfConfig":"46"},{"size":550,"mtime":1611679565364,"results":"51","hashOfConfig":"46"},{"size":2358,"mtime":1611787854538,"results":"52","hashOfConfig":"46"},{"size":728,"mtime":1611787442518,"results":"53","hashOfConfig":"46"},{"size":361,"mtime":1611787442526,"results":"54","hashOfConfig":"46"},{"size":1025,"mtime":1611787854549,"results":"55","hashOfConfig":"46"},{"size":258,"mtime":1611679565358,"results":"56","hashOfConfig":"46"},{"size":671,"mtime":1611787854541,"results":"57","hashOfConfig":"46"},{"size":716,"mtime":1611787854543,"results":"58","hashOfConfig":"46"},{"size":744,"mtime":1611787854546,"results":"59","hashOfConfig":"46"},{"size":1024,"mtime":1611787854539,"results":"60","hashOfConfig":"46"},{"size":172,"mtime":1611679565361,"results":"61","hashOfConfig":"46"},{"size":1779,"mtime":1611679565362,"results":"62","hashOfConfig":"46"},{"size":2531,"mtime":1611679565362,"results":"63","hashOfConfig":"46"},{"size":429,"mtime":1611679565362,"results":"64","hashOfConfig":"46"},{"size":2192,"mtime":1611679565355,"results":"65","hashOfConfig":"46"},{"size":1069,"mtime":1611679565355,"results":"66","hashOfConfig":"46"},{"size":8835,"mtime":1611854947164,"results":"67","hashOfConfig":"46"},{"size":302,"mtime":1611679565364,"results":"68","hashOfConfig":"46"},{"size":854,"mtime":1611679565356,"results":"69","hashOfConfig":"46"},{"size":1151,"mtime":1611787442523,"results":"70","hashOfConfig":"46"},{"size":7106,"mtime":1611877231154,"results":"71","hashOfConfig":"46"},{"size":7391,"mtime":1611787442521,"results":"72","hashOfConfig":"46"},{"size":517,"mtime":1611787841479,"results":"73","hashOfConfig":"46"},{"size":375,"mtime":1611679565357,"results":"74","hashOfConfig":"46"},{"size":680,"mtime":1611679565359,"results":"75","hashOfConfig":"46"},{"size":14347,"mtime":1611876569445,"results":"76","hashOfConfig":"46"},{"size":2697,"mtime":1611679565358,"results":"77","hashOfConfig":"46"},{"size":2401,"mtime":1611877200734,"results":"78","hashOfConfig":"46"},{"size":562,"mtime":1611679565359,"results":"79","hashOfConfig":"46"},{"size":6784,"mtime":1611877344324,"results":"80","hashOfConfig":"46"},{"size":579,"mtime":1611679565358,"results":"81","hashOfConfig":"46"},{"size":2362,"mtime":1611679565358,"results":"82","hashOfConfig":"46"},{"size":1916,"mtime":1611679565358,"results":"83","hashOfConfig":"46"},{"size":282,"mtime":1611787442525,"results":"84","hashOfConfig":"46"},{"size":610,"mtime":1611787854545,"results":"85","hashOfConfig":"46"},{"size":1004,"mtime":1611787854540,"results":"86","hashOfConfig":"46"},{"size":245,"mtime":1611787442515,"results":"87","hashOfConfig":"46"},{"size":1011,"mtime":1611787854544,"results":"88","hashOfConfig":"46"},{"size":3800,"mtime":1611787854542,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zixcr2",{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"94"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"94"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"94"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"94"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"94"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"94"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"/Users/jae/Documents/Pillar/frontend/src/index.js",[],"/Users/jae/Documents/Pillar/frontend/src/components/root.js",[],["187","188"],"/Users/jae/Documents/Pillar/frontend/src/util/giphy_api_util.js",[],"/Users/jae/Documents/Pillar/frontend/src/util/room_api_util.js",[],"/Users/jae/Documents/Pillar/frontend/src/store/store.js",[],"/Users/jae/Documents/Pillar/frontend/src/util/session_api_util.js",[],"/Users/jae/Documents/Pillar/frontend/src/actions/session_actions.js",[],"/Users/jae/Documents/Pillar/frontend/src/components/app.js",["189"],"import React from 'react';\nimport { AuthRoute, ProtectedRoute } from '../util/route_util';\nimport { Switch, Route } from 'react-router-dom';\nimport Modal from \"./modal/modal\";\nimport MainPage from './main/main_page';\nimport ChatBox from './chat/chat_box_container';\nimport DashBoard from './chat/dashboard_container';\nimport SplashPageContainer from './splash/splash_page_container';\nimport \"../stylesheets/index.scss\";\n\nconst App = () => (\n  <div>\n    <Modal />\n    {/* <Route path=\"/\" component={SideBar} /> */}\n    {/* <NavBar /> */}\n    <Switch>\n      <ProtectedRoute exact path=\"/chat\" component={DashBoard} />\n      <AuthRoute exact path=\"/\" component={SplashPageContainer} />\n    </Switch>\n  </div>\n)\n\nexport default App;","/Users/jae/Documents/Pillar/frontend/src/reducers/root_reducer.js",[],"/Users/jae/Documents/Pillar/frontend/src/util/route_util.js",[],"/Users/jae/Documents/Pillar/frontend/src/components/main/main_page.js",[],"/Users/jae/Documents/Pillar/frontend/src/components/session/login_form_container.js",[],"/Users/jae/Documents/Pillar/frontend/src/components/session/signup_form_container.js",[],"/Users/jae/Documents/Pillar/frontend/src/reducers/session_reducer.js",["190"],"import { RECEIVE_CURRENT_USER, \n         RECEIVE_USER_LOGOUT, \n         RECEIVE_USER_SIGN_IN } from '../actions/session_actions';\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {}\n};\n\nexport default function(state = initialState, action) {\n  ;\n  switch (action.type) {\n    case RECEIVE_CURRENT_USER:\n      // console.log(action.currentUser)\n      ;\n      return {\n        ...state,\n        isAuthenticated: !!action.currentUser,\n        user: action.currentUser\n      };\n    case RECEIVE_USER_LOGOUT:\n      return {\n        isAuthenticated: false,\n        user: undefined\n      };\n    case RECEIVE_USER_SIGN_IN:\n      return ({\n        ...state,\n        isSignedIn: true\n      })\n    default:\n      ;\n      return state;\n  }\n}","/Users/jae/Documents/Pillar/frontend/src/components/chat/dashboard_container.js",[],"/Users/jae/Documents/Pillar/frontend/src/reducers/errors_reducer.js",[],"/Users/jae/Documents/Pillar/frontend/src/reducers/messages_reducer.js",["191"],"import { debug } from 'request';\nimport { RECEIVE_MESSAGES, RECEIVE_NEW_MESSAGE, UPDATE_MESSAGE, REMOVE_MESSAGE } from '../actions/message_actions';\nimport { RECEIVE_ROOMS, DELETE_ROOM, RECEIVE_ROOM } from '../actions/room_actions';\n\nconst MessagesReducer = (state = { }, action) => {\n  Object.freeze(state);\n   ;\n  let newState = Object.assign({}, state);\n  switch (action.type) {\n    case RECEIVE_MESSAGES:\n      newState = action.messages;\n      return newState;\n    case RECEIVE_NEW_MESSAGE:\n       \n      Object.assign(newState, {[action.message.id]: action.message});\n      return newState;\n    case RECEIVE_ROOMS:\n      let messages = {};\n      //create messages object\n      //  ;\n      ;\n      action.rooms.data.forEach(room => {\n        room.messages.forEach(msg => {\n          messages[msg._id] = {\n            id: msg._id,\n            message: msg.message,\n            createdAt: msg.createdAt,\n            updatedAt: msg.updatedAt,\n            room: msg.room,\n            sender: msg.sender === null ? null : msg.sender._id,\n            username: msg.sender === null ? null : msg.sender.username,\n          }\n        })\n      });\n      Object.assign(newState, messages);\n      return newState;\n    case RECEIVE_ROOM:\n\n       ;\n      return state;\n    case UPDATE_MESSAGE:\n      action.message.id = action.message._id; //rename the id property key\n      delete action.message._id;\n      newState[action.message.id] = action.message;\n      return newState;\n    case REMOVE_MESSAGE:\n       \n      delete newState[action.message._id];\n      return newState;\n    case DELETE_ROOM:\n       \n      action.room.messages.forEach(msgId =>{\n        delete newState[msgId];\n      });\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default MessagesReducer;","/Users/jae/Documents/Pillar/frontend/src/reducers/rooms_reducer.js",[],"/Users/jae/Documents/Pillar/frontend/src/reducers/session_errors_reducer.js",[],"/Users/jae/Documents/Pillar/frontend/src/actions/room_actions.js",["192","193","194","195"],"import { getRoom, getRooms, deleteRoomUtil, updateRoomUtil, createRoomUtil, getRoomUsers, leaveRoomUtil, editRoomClosedForUtil} from '../util/room_api_util';\n\nexport const RECEIVE_ROOMS = \"RECEIVE_ROOMS\";\nexport const RECEIVE_ROOM = \"RECEIVE_ROOM\";\nexport const DELETE_ROOM = \"DELETE_ROOM\";\nexport const UPDATE_ROOM = \"UPDATE_ROOM\";\nexport const LEAVE_ROOM = \"LEAVE_ROOM\";\n//export const RECEIVE_NEW_MESSAGE = \"RECEIVE_NEW_MESSAGE\";\nexport const RECEIVE_ROOM_USERS = \"RECEIVE_ROOM_USERS\";\nexport const CHAT_ROOM_STATUS = 'CHAT_ROOM_STATUS';\n\n\nexport const receiveRooms = rooms => ({\n  type: RECEIVE_ROOMS,\n  rooms\n});\n\nexport const deleteRoom = room => ({\n  type: DELETE_ROOM,\n  room\n});\n\nexport const updateRoom = room => ({\n  type: UPDATE_ROOM,\n  room\n})\n\nexport const exitRoom = room => ({\n  type: LEAVE_ROOM,\n  room\n})\n\nexport const receiveRoom = room => ({\n  type: RECEIVE_ROOM,\n  room\n})\n\nexport const chatRoomStatus = data => ({\n  type: CHAT_ROOM_STATUS,\n  data\n})\n\nexport const chatRoomSwitch = data => dispatch => {\n  dispatch(chatRoomStatus(data));\n};\n\n\nexport const fetchRoom = (roomId) => dispatch => (\n  getRoom(roomId)\n    .then(room => dispatch(receiveRoom(room)))\n    .catch(err => console.log(err))\n);\n\nexport const createRoom = room => dispatch => {\n  dispatch(receiveRoom(room))\n}\n\nexport const removeRoom = room => dispatch => (\n  dispatch(deleteRoom(room))\n  )\n\nexport const editRoom = room => dispatch => (\n  updateRoomUtil(room)\n    .then(room => {\n         \n      dispatch(updateRoom(room.data))\n    })\n)\nexport const updateUserList = room => dispatch => {\n    \n  dispatch(updateRoom(room));\n    \n}\n\nexport const leaveRoom = room => dispatch => (\n  updateRoomUtil(room)\n    .then(room => {\n       \n      dispatch(exitRoom(room.data))\n    })\n)\n\nexport const fetchRooms = (userId) => dispatch => (\n  getRooms(userId)\n    .then(rooms => {\n      dispatch(receiveRooms(rooms));\n    })\n    .catch(err => console.log(err))\n);\n\nexport const editClosedFor = (roomId, email, id) => dispatch => {\n   ;\n  return editRoomClosedForUtil(roomId, email, id)\n  .then(rooms => {\n     ;\n    // fetchRooms(id)\n    dispatch(receiveRooms(rooms));\n  })\n  // .catch(err => console.log(err))\n}\n","/Users/jae/Documents/Pillar/frontend/src/actions/message_actions.js",[],"/Users/jae/Documents/Pillar/frontend/src/components/chat/dashboard.jsx",["196","197"],"import React from 'react';\n//import room from '../../../../validation/room';\nimport io from \"socket.io-client\";\nimport ChatBox from './chat_box_container';\nimport Sidebar from './side_bar_container'\nimport { getAvailableRooms, getRooms } from '../../util/room_api_util';\nimport * as cloneDeep from 'lodash/cloneDeep';\nimport \"./chatbox.css\"\nclass DashBoard extends React.Component{\n   constructor(props){\n      super(props);\n      this.socket = io();\n      \n      this.state = {\n         newTitle: \"\",\n         roomsAvailable: [],\n         roomsJoined: [],\n         all: [],\n         deletedRoom: null,\n         myRooms: this.props.user.rooms,\n         errors: [],\n      }\n      \n      this.createNewRoom = this.createNewRoom.bind(this);\n      this.handleChange = this.handleChange.bind(this);\n      this.joinRoom = this.joinRoom.bind(this);\n      this.leaveRoom = this.leaveRoom.bind(this);\n      this.userLeft = this.userLeft.bind(this);\n      this.userJoined = this.userJoined.bind(this);\n      this.deleteRoom = this.deleteRoom.bind(this);\n      this.roomDeleted = this.roomDeleted.bind(this);\n      this.ackDelete = this.ackDelete.bind(this);\n      this.roomCreated = this.roomCreated.bind(this);\n      this.addRoomCreationError = this.addRoomCreationError.bind(this);\n      \n   }\n\n   \n   //component did mount\n   componentDidMount(){\n      \n      this.props.getRooms(this.props.user.id); //this pings the database\n      \n      getRooms(this.props.user.id)\n         .then(rooms => {\n            this.setState({\n               roomsJoined: rooms,\n            })\n         })\n         .then(()=>{\n            getAvailableRooms(this.props.user.id) //this pings the database                                \n            .then(rooms => {\n               this.setState({\n                  roomsAvailable: rooms,\n               })\n            })\n            .then(()=>{\n               this.setState({all: this.state.roomsAvailable.data.concat(this.state.roomsJoined.data)})\n            })\n         })\n      \n      this.socket.on(\"user left\", this.userLeft);\n      this.socket.on(\"user joined\", this.userJoined);\n      this.socket.on(\"room deleted\", this.roomDeleted);\n      this.socket.on(\"room created\", this.roomCreated);\n      this.socket.on(\"room creation error\", this.addRoomCreationError);\n   }\n\n   \n\n   componentDidUpdate(prevProps){\n      let user = this.props.user.username;\n      let rooms = this.props.rooms;\n      if (Object.keys(rooms).length != Object.keys(prevProps.rooms).length) {\n         \n         this.socket.emit(\"User connected\", { user, rooms });\n         this.props.getRooms(this.props.user.id); \n         \n         \n      getRooms(this.props.user.id)\n         .then(rooms => {\n            this.setState({\n               roomsJoined: rooms,\n            })\n         })\n         .then(()=>{\n            getAvailableRooms(this.props.user.id) //this pings the database                                \n            .then(rooms => {\n               this.setState({\n                  roomsAvailable: rooms,\n               })\n            })\n            .then(()=>{\n               this.setState({all: this.state.roomsAvailable.data.concat(this.state.roomsJoined.data)})\n            })\n         })\n      };\n      // if (this.props.rooms != prevProps) {\n      //    this.render()\n      // }\n   }\n\n   userLeft({ user, room }) { \n      //check if this user belongs to the room\n      let currentRooms = Object.keys(this.props.rooms);\n\n      if (currentRooms.includes(room._id)) {    \n         this.props.updateUserList(room);\n      }\n   }\n\n   userJoined({ user, room }) {\n      //check if this user belongs to the room\n      let currentRooms = Object.keys(this.props.rooms);\n\n      if (currentRooms.includes(room._id)){\n         //reformat the user object added to the room to match existing users\n         room.users.splice(room.users.length - 1, 1);\n         room.users.push({username: user.username, _id: user.id})\n         this.props.updateUserList(room);\n      }\n   }\n   \n   createNewRoom(e){\n      e.preventDefault();\n      e.stopPropagation();\n      let room = {\n         title: this.state.newTitle,\n         admin: this.props.user.id,\n         users: this.props.user.id,\n      }\n      this.socket.emit(\"Create Room\", room);\n      this.setState({\n         newTitle: \"\",\n         errors: []\n      })\n   }\n\n   roomCreated(room){\n       \n      let roomsJoined = cloneDeep(this.state.roomsJoined);\n      let roomsAvail = cloneDeep(this.state.roomsAvailable);\n      let allRooms = cloneDeep(this.state.all);\n      \n      if (room.admin === this.props.user.id){\n         this.props.createRoom(room);\n         roomsJoined.data.push(room);\n         this.setState({\n            roomsJoined: {data: roomsJoined.data},\n         })\n      } else {\n         roomsAvail.data.push(room);\n         this.setState({\n            roomsAvailable: {data: roomsAvail.data},\n         })\n      }\n       \n      allRooms.push(room);\n      this.setState({\n         all: allRooms,\n      })\n   }\n\n   addRoomCreationError({errors, room}){\n      \n      if(room.admin === this.props.user.id){\n         this.setState({\n            errors: [errors.text],\n         })\n      }\n   }\n\n   joinRoom(e){\n       \n      let room = this.state.roomsAvailable.data.filter(room => e.currentTarget.id === room._id ? room : null);\n      \n      room[0].users.push(this.props.user.id);\n      this.props.editRoom(room[0]);\n      \n      this.socket.emit('join room', {\n         room: room[0],\n         user: this.props.user,\n      })\n   }\n\n   leaveRoom(e){\n       \n      let room = cloneDeep(this.props.rooms[e.currentTarget.id]);\n      //find and remove current user from the room users array\n      for (let i = 0; i < room.users.length; i++){\n         if(room.users[i]._id === this.props.user.id){\n            room.users.splice(i, 1);\n         }\n      }\n       \n      this.props.leaveRoom(room);\n      this.socket.emit('leave room',{\n         room: room,\n         user: this.props.user,\n      })\n   }\n\n   deleteRoom(room){\n      this.socket.emit('delete room',{room, user: this.props.user});\n   }\n\n   roomDeleted({room, user}){\n      this.props.deleteRoom(room);\n      //check if this user was a member \n       \n      let roomMembers = room.users;\n      if (this.props.user.id !== room.admin && roomMembers.includes(this.props.user.id)){\n         this.setState({deletedRoom: room});\n         \n      } else {\n         //remove from available rooms list\n         let rmsAvail = cloneDeep(this.state.roomsAvailable);\n         let index = null;\n         for (let i = 0; i < rmsAvail.data.length; i++){\n            if(rmsAvail.data[i]._id === room._id){\n               index = i;\n            }\n         }\n\n         if (index) {\n            rmsAvail.data.splice(index, 1);\n         }\n\n         this.setState({\n            roomsAvailable: {data: rmsAvail.data}\n         })\n          \n      }\n\n      //remove from joined rooms list?\n\n   }\n\n   ackDelete(){\n      this.setState({deletedRoom: null});\n   }\n\n   handleChange(e){\n      this.setState({\n         newTitle: e.currentTarget.value,\n      })\n   };\n\n\n\n\n   render(){\n      let rooms = this.props.rooms || {};\n      if (rooms.length > 0){\n         // \n      }\n      let roomIds = [];\n      //   myRooms = this.state.myRooms;\n      console.log(\"Dashboard rendered\");\n      Object.keys(rooms).forEach(key => {\n         // ;\n         roomIds.push(rooms[key]._id);  \n      });\n      // rooms.forEach(room => {\n      //    ;\n      //    roomIds.push(room.roomId);\n      // });\n      // ;\n      return(\n         <div>\n               <Sidebar \n                  createNewRoom = {this.createNewRoom}\n                  newTitle={this.state.newTitle}\n                  handleChange={this.handleChange}\n                  joinRoom={this.joinRoom}\n                  roomsAvailable={this.state.roomsAvailable}\n                  allRooms = {this.state.all}\n                  errors = {this.state.errors}\n               />\n               {this.state.deletedRoom ? (\n                  <div className=\"deleted-room-alert\">\n                     <h3>{`\"${this.state.deletedRoom.title}\" was deleted by the admin.`}</h3>\n                     <button onClick={this.ackDelete}>OK</button>\n                  </div>\n                  ) : (null)            \n               }\n            <div className=\"chatbox-list\" >\n               {\n                  roomIds.map(id=>\n                     {\n                        // debugger;\n                        if (id !== undefined){\n                     return (this.props.rooms[id].closedFor.includes(this.props.user.email) ?\n                         \"\" :  <ChatBox leaveRoom={this.leaveRoom} deleteRoom={this.deleteRoom} roomId={id} key={id} socket={this.socket}/>\n                        )}\n                     }\n                  )\n               }  \n            </div>\n\n         </div>\n      )\n   }\n}\n\n\nexport default DashBoard;","/Users/jae/Documents/Pillar/frontend/src/util/message_api_util.js",[],"/Users/jae/Documents/Pillar/frontend/src/components/chat/chat_box_container.js",["198","199","200","201","202","203","204"],"import { connect } from 'react-redux';\nimport { fetchMessages, afterMessageSent } from '../../actions/message_actions';\nimport ChatBox from './chat_box';\nimport { fetchRoom, fetchRooms, createRoom, removeRoom, editRoom, leaveRoom, updateUserList, editClosedFor} from '../../actions/room_actions';\n\n\nconst mapStateToProps = (state, ownProps) => {\n   \n   return {\n      user: state.session.user,\n      room: state.rooms[ownProps.roomId],\n      socket: ownProps.socket,\n   };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n   return {\n      getMessages: (roomId) => dispatch(fetchMessages(roomId)),\n      afterMessageSent: (msg) => {\n         dispatch(afterMessageSent(msg));\n      },\n      editClosedFor: (roomId, email, id) => dispatch(editClosedFor(roomId, email, id))\n   }\n}\n\nexport default connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(ChatBox);","/Users/jae/Documents/Pillar/frontend/src/components/chat/side_bar_container.js",[],"/Users/jae/Documents/Pillar/frontend/src/components/chat/chat_box.jsx",["205","206"],"/Users/jae/Documents/Pillar/frontend/src/components/chat/side_bar.jsx",["207","208","209","210","211","212","213","214"],"import React from 'react';\nimport {getRoomUsers} from '../../util/room_api_util'\nimport SearchBarDropdown from './search_dropdown'\nimport { getAvailableRooms, getRooms } from '../../util/room_api_util';\nimport {getUser } from \"../../util/session_api_util\"\nimport { updateRoom } from '../../actions/room_actions';\nclass Sidebar extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            show_rooms: false,\n            searchInput: '',\n            dropDown: false,\n            roomsAvailable: [],\n            roomsJoined: [],\n            all: [],\n            rooms: this.props.rooms,\n            errors: {}\n        };\n        this.handleSearchInput = this.handleSearchInput.bind(this);\n        this.handleDropDown = this.handleDropDown.bind(this);\n        this.displayRooms = this.displayRooms.bind(this);\n        this.hideRooms = this.hideRooms.bind(this);\n        this.toggleRooms = this.toggleRooms.bind(this);\n    }\n\n    handleSearchInput(e){\n        this.setState({searchInput: e.currentTarget.value, dropDown: true});\n    };\n\n    handleDropDown(){\n        this.setState({dropDown: false});\n    };\n\n    displayRooms(){\n        this.state.show_rooms === true ? \n        this.setState({show_rooms: false}) : this.setState({show_rooms: true});\n    };\n\n    hideRooms(){\n        this.setState({show_rooms:false});\n    };\n\n\n    toggleRooms(e){\n        //   \n        // let title = e.target.innerText;\n        let user = this.props.user.username;\n        let email = this.props.user.email;\n        let id = this.props.user.id;\n        // e.target.id \n        this.props.editClosedFor(e.target.id, email,  id)\n        .then(rooms => {\n              ;\n            this.setState({rooms: this.props.rooms},this.render)\n        })\n       \n    }\n\n    componentDidMount(props){\n        //   ;\n        this.setState({ rooms: this.props.rooms })\n    }\n    componentDidUpdate(prevprops, prevState){\n        //   ;\n        if( this.props.rooms != prevprops.rooms){\n            this.setState({rooms: this.props.rooms}, this.render)\n            //   ;\n            // this.render()\n        }\n    //    this.setState({ rooms: this.props.rooms })\n        \n        // Object.keys(this.props.rooms).forEach(roomId => {\n        //       ;\n        //      console.log(prevprops.rooms[roomId]) \n\n        //     })\n    }\n\n    render(){\n        let roomsAvailable = this.props.roomsAvailable.data || [];\n        //  \n        let rooms = this.state.rooms || this.props.rooms\n        //   ;\n        let roomIds = [];\n        //   myRooms = this.state.myRooms;\n        console.log(\"Dashboard rendered\");\n        Object.keys(rooms).forEach(key => {\n            // ;\n            //   \n            roomIds.push(rooms[key]._id)}) \n        \n        return(\n            <div className='sidebar-contaier'>\n                <div className='search-bar-container'>\n                    <input \n                        className='search-bar' \n                        type='text'\n                        onChange={this.handleSearchInput}\n                        onKeyDown={this.handleDropDown}\n                        value={this.state.searchInput}\n                        placeholder='type here to search'\n                    />\n                    {this.state.dropDown && this.state.searchInput.length !== 0 ? \n                        <SearchBarDropdown className='search-bar-dropdown-container'\n                            handleDropDown={this.handleDropDown}\n                            searchInput={this.state.searchInput} \n                            allRooms={this.props.allRooms}\n                            roomsAvailable={this.props.roomsAvailable}\n                            user={this.props.user}\n                            editClosedFor= {this.props.editClosedFor}\n                            />\n                        : null\n                    }\n                </div>\n                <div>\n                    <form onSubmit={this.props.createNewRoom}>\n                        <input type=\"text\" value={this.props.newTitle} \n                        onChange={this.props.handleChange}\n                        placeholder=\"Enter new room title\"/>\n                    </form>\n\n                    <button onClick={this.props.createNewRoom}>Create a New Chat Room</button>\n                    <h3>{this.props.errors}</h3>\n                </div>\n\n                <div>\n                    <button onClick={()=>this.displayRooms()}>Display All Joinable Chatrooms</button>\n                </div>\n                <div onMouseLeave={this.hideRooms}>\n                    {this.state && this.state.show_rooms === true ? \n                    roomsAvailable.map(room => {\n                     return (\n                        <li id={room._id} key={room._id}>\n                        <p>\n                            Title: {room.title}\n                        </p>\n                        <p>\n                            Number of current users: {room.users.length}\n                        </p>\n                        <button id={room._id} onClick={this.props.joinRoom}>Join Room</button>\n                        </li>\n                     )\n                  }) : null}\n                </div>\n\n                <div className=\"myroomsdiv\">\n                    {/* <h2>My Rooms</h2> */}\n                    <ul className=\"myrooms\">\n                    {Object.keys(this.props.rooms).length > 0 ? \n\n                    roomIds.map(id =>{\n                        //   debugger;\n                        if (id !== undefined) {\n                            return rooms[id].closedFor.includes(this.props.user.email)\n                            //   [this.props.user.username] \n                            ? \n                            (<li id={rooms[id]._id} onClick={this.toggleRooms}>Open {rooms[id].title}</li>\n                                // ,<button onClick= { this.toggleRooms }> Open</button>]\n                                ) :\n                                (<li id={rooms[id]._id} onClick={this.toggleRooms}> Close {rooms[id].title}</li>\n                                // <button onClick={this.toggleRooms}> Close</button>]\n                                ) \n                            }\n                    }) \n                    : \"\"}\n                        </ul>\n                </div>\n            </div>\n        )\n    }\n};\n\nexport default Sidebar;","/Users/jae/Documents/Pillar/frontend/src/components/chat/user_list.js",[],"/Users/jae/Documents/Pillar/frontend/src/components/chat/data_share.js",[],"/Users/jae/Documents/Pillar/frontend/src/components/message/message_container.js",[],"/Users/jae/Documents/Pillar/frontend/src/components/chat/search_dropdown.jsx",["215","216"],"/Users/jae/Documents/Pillar/frontend/src/components/giphy/giphy.jsx",[],"/Users/jae/Documents/Pillar/frontend/src/components/message/message.jsx",["217","218","219"],"/Users/jae/Documents/Pillar/frontend/src/components/message/replies_container.js",[],"/Users/jae/Documents/Pillar/frontend/src/components/message/replies.jsx",["220"],"/Users/jae/Documents/Pillar/frontend/src/components/message/edit_message_form_container.js",[],"/Users/jae/Documents/Pillar/frontend/src/components/message/edit_reply_form.jsx",[],"/Users/jae/Documents/Pillar/frontend/src/components/message/edit_message_form.jsx",[],"/Users/jae/Documents/Pillar/frontend/src/reducers/modal_reducer.js",[],"/Users/jae/Documents/Pillar/frontend/src/components/splash/splash_page_container.js",["221"],"import { connect } from 'react-redux';\nimport { openModal, closeModal} from '../../actions/modal_actions';\nimport SplashPage from './splash_page';\n\nconst mapStateToProps = (state) => ({\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  openModal: modal => dispatch(openModal(modal))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SplashPage);","/Users/jae/Documents/Pillar/frontend/src/components/modal/modal.jsx",[],"/Users/jae/Documents/Pillar/frontend/src/actions/modal_actions.js",[],"/Users/jae/Documents/Pillar/frontend/src/components/splash/splash_page.jsx",[],"/Users/jae/Documents/Pillar/frontend/src/components/session/session_form.js",[],{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","severity":1,"message":"227","line":3,"column":18,"nodeType":"228","messageId":"229","endLine":3,"endColumn":23},{"ruleId":"230","severity":1,"message":"231","line":10,"column":1,"nodeType":"232","endLine":35,"endColumn":2},{"ruleId":"226","severity":1,"message":"233","line":1,"column":10,"nodeType":"228","messageId":"229","endLine":1,"endColumn":15},{"ruleId":"226","severity":1,"message":"234","line":1,"column":29,"nodeType":"228","messageId":"229","endLine":1,"endColumn":43},{"ruleId":"226","severity":1,"message":"235","line":1,"column":61,"nodeType":"228","messageId":"229","endLine":1,"endColumn":75},{"ruleId":"226","severity":1,"message":"236","line":1,"column":77,"nodeType":"228","messageId":"229","endLine":1,"endColumn":89},{"ruleId":"226","severity":1,"message":"237","line":1,"column":91,"nodeType":"228","messageId":"229","endLine":1,"endColumn":104},{"ruleId":"238","severity":1,"message":"239","line":74,"column":37,"nodeType":"240","messageId":"241","endLine":74,"endColumn":39},{"ruleId":"242","severity":1,"message":"243","line":289,"column":33,"nodeType":"244","messageId":"245","endLine":289,"endColumn":35},{"ruleId":"226","severity":1,"message":"246","line":4,"column":10,"nodeType":"228","messageId":"229","endLine":4,"endColumn":19},{"ruleId":"226","severity":1,"message":"247","line":4,"column":21,"nodeType":"228","messageId":"229","endLine":4,"endColumn":31},{"ruleId":"226","severity":1,"message":"248","line":4,"column":33,"nodeType":"228","messageId":"229","endLine":4,"endColumn":43},{"ruleId":"226","severity":1,"message":"249","line":4,"column":45,"nodeType":"228","messageId":"229","endLine":4,"endColumn":55},{"ruleId":"226","severity":1,"message":"250","line":4,"column":57,"nodeType":"228","messageId":"229","endLine":4,"endColumn":65},{"ruleId":"226","severity":1,"message":"251","line":4,"column":67,"nodeType":"228","messageId":"229","endLine":4,"endColumn":76},{"ruleId":"226","severity":1,"message":"252","line":4,"column":78,"nodeType":"228","messageId":"229","endLine":4,"endColumn":92},{"ruleId":"226","severity":1,"message":"253","line":2,"column":8,"nodeType":"228","messageId":"229","endLine":2,"endColumn":10},{"ruleId":"226","severity":1,"message":"254","line":4,"column":8,"nodeType":"228","messageId":"229","endLine":4,"endColumn":16},{"ruleId":"226","severity":1,"message":"236","line":2,"column":9,"nodeType":"228","messageId":"229","endLine":2,"endColumn":21},{"ruleId":"226","severity":1,"message":"255","line":4,"column":10,"nodeType":"228","messageId":"229","endLine":4,"endColumn":27},{"ruleId":"226","severity":1,"message":"256","line":4,"column":29,"nodeType":"228","messageId":"229","endLine":4,"endColumn":37},{"ruleId":"226","severity":1,"message":"257","line":5,"column":9,"nodeType":"228","messageId":"229","endLine":5,"endColumn":16},{"ruleId":"226","severity":1,"message":"258","line":6,"column":10,"nodeType":"228","messageId":"229","endLine":6,"endColumn":20},{"ruleId":"226","severity":1,"message":"259","line":55,"column":13,"nodeType":"228","messageId":"229","endLine":55,"endColumn":17},{"ruleId":"238","severity":1,"message":"239","line":73,"column":30,"nodeType":"240","messageId":"241","endLine":73,"endColumn":32},{"ruleId":"242","severity":1,"message":"243","line":174,"column":44,"nodeType":"244","messageId":"245","endLine":174,"endColumn":46},{"ruleId":"238","severity":1,"message":"239","line":116,"column":46,"nodeType":"240","messageId":"241","endLine":116,"endColumn":48},{"ruleId":"238","severity":1,"message":"239","line":150,"column":54,"nodeType":"240","messageId":"241","endLine":150,"endColumn":56},{"ruleId":"226","severity":1,"message":"233","line":2,"column":10,"nodeType":"228","messageId":"229","endLine":2,"endColumn":15},{"ruleId":"226","severity":1,"message":"260","line":4,"column":8,"nodeType":"228","messageId":"229","endLine":4,"endColumn":15},{"ruleId":"261","severity":1,"message":"262","line":63,"column":55,"nodeType":"263","endLine":63,"endColumn":113},{"ruleId":"261","severity":1,"message":"262","line":159,"column":54,"nodeType":"263","endLine":159,"endColumn":112},{"ruleId":"226","severity":1,"message":"264","line":2,"column":21,"nodeType":"228","messageId":"229","endLine":2,"endColumn":31},"no-native-reassign",["265"],"no-negated-in-lhs",["266"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'debug' is defined but never used.","'deleteRoomUtil' is defined but never used.","'createRoomUtil' is defined but never used.","'getRoomUsers' is defined but never used.","'leaveRoomUtil' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'fetchRoom' is defined but never used.","'fetchRooms' is defined but never used.","'createRoom' is defined but never used.","'removeRoom' is defined but never used.","'editRoom' is defined but never used.","'leaveRoom' is defined but never used.","'updateUserList' is defined but never used.","'io' is defined but never used.","'UserList' is defined but never used.","'getAvailableRooms' is defined but never used.","'getRooms' is defined but never used.","'getUser' is defined but never used.","'updateRoom' is defined but never used.","'user' is assigned a value but never used.","'Replies' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'closeModal' is defined but never used.","no-global-assign","no-unsafe-negation"]