[{"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/index.js":"1","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/store/store.js":"2","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/session_api_util.js":"3","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/room_api_util.js":"4","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/root.js":"5","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/actions/session_actions.js":"6","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/giphy_api_util.js":"7","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/app.js":"8","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/root_reducer.js":"9","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/route_util.js":"10","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/session_reducer.js":"11","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/messages_reducer.js":"12","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/modal_reducer.js":"13","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/errors_reducer.js":"14","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/chat_box_container.js":"15","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/main/main_page.js":"16","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/dashboard_container.js":"17","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/splash/splash_page_container.js":"18","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/rooms_reducer.js":"19","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/actions/room_actions.js":"20","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/actions/message_actions.js":"21","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/actions/modal_actions.js":"22","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/session_errors_reducer.js":"23","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/modal/modal.jsx":"24","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/splash/splash_page.jsx":"25","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/dashboard.jsx":"26","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/chat_box.jsx":"27","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/message_api_util.js":"28","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/user_list.js":"29","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/session/login_form_container.js":"30","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/session/signup_form_container.js":"31","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/new_room_form/new_room_form_container.js":"32","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/side_bar_container.js":"33","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/data_share.js":"34","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/message_container.js":"35","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/giphy/giphy.jsx":"36","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/session/session_form.js":"37","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/new_room_form/new_room_form.jsx":"38","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/side_bar.jsx":"39","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/message.jsx":"40","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/replies_container.js":"41","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/edit_message_form_container.js":"42","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/replies.jsx":"43","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/search_dropdown.jsx":"44","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/edit_message_form.jsx":"45","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/edit_reply_form.jsx":"46","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/chatbox_header_options.jsx":"47","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/members.jsx":"48"},{"size":1901,"mtime":1611763313924,"results":"49","hashOfConfig":"50"},{"size":507,"mtime":1609373490691,"results":"51","hashOfConfig":"50"},{"size":550,"mtime":1611763313929,"results":"52","hashOfConfig":"50"},{"size":1120,"mtime":1611763313929,"results":"53","hashOfConfig":"50"},{"size":286,"mtime":1609373490691,"results":"54","hashOfConfig":"50"},{"size":2358,"mtime":1611788071057,"results":"55","hashOfConfig":"50"},{"size":113,"mtime":1609168078036,"results":"56","hashOfConfig":"50"},{"size":728,"mtime":1611763313915,"results":"57","hashOfConfig":"50"},{"size":361,"mtime":1611763313926,"results":"58","hashOfConfig":"50"},{"size":1025,"mtime":1611788071071,"results":"59","hashOfConfig":"50"},{"size":744,"mtime":1611788071068,"results":"60","hashOfConfig":"50"},{"size":1779,"mtime":1611763313925,"results":"61","hashOfConfig":"50"},{"size":282,"mtime":1611763313925,"results":"62","hashOfConfig":"50"},{"size":172,"mtime":1606838017480,"results":"63","hashOfConfig":"50"},{"size":943,"mtime":1612221235319,"results":"64","hashOfConfig":"50"},{"size":258,"mtime":1612153430706,"results":"65","hashOfConfig":"50"},{"size":1024,"mtime":1611788071062,"results":"66","hashOfConfig":"50"},{"size":610,"mtime":1611788071067,"results":"67","hashOfConfig":"50"},{"size":2531,"mtime":1611763313925,"results":"68","hashOfConfig":"50"},{"size":2192,"mtime":1611763313914,"results":"69","hashOfConfig":"50"},{"size":1069,"mtime":1609779048130,"results":"70","hashOfConfig":"50"},{"size":245,"mtime":1611766788968,"results":"71","hashOfConfig":"50"},{"size":429,"mtime":1606838017481,"results":"72","hashOfConfig":"50"},{"size":47256,"mtime":1612222433424,"results":"73","hashOfConfig":"50"},{"size":1021,"mtime":1612153430709,"results":"74","hashOfConfig":"50"},{"size":8249,"mtime":1612212883381,"results":"75","hashOfConfig":"50"},{"size":7615,"mtime":1612224059583,"results":"76","hashOfConfig":"50"},{"size":302,"mtime":1608063756134,"results":"77","hashOfConfig":"50"},{"size":508,"mtime":1612106524507,"results":"78","hashOfConfig":"50"},{"size":680,"mtime":1611968662334,"results":"79","hashOfConfig":"50"},{"size":724,"mtime":1611968662334,"results":"80","hashOfConfig":"50"},{"size":511,"mtime":1611968662330,"results":"81","hashOfConfig":"50"},{"size":1320,"mtime":1611968662332,"results":"82","hashOfConfig":"50"},{"size":375,"mtime":1611763313917,"results":"83","hashOfConfig":"50"},{"size":680,"mtime":1611763313921,"results":"84","hashOfConfig":"50"},{"size":3138,"mtime":1612216111050,"results":"85","hashOfConfig":"50"},{"size":3801,"mtime":1612154220047,"results":"86","hashOfConfig":"50"},{"size":1545,"mtime":1612106524505,"results":"87","hashOfConfig":"50"},{"size":8340,"mtime":1612218841929,"results":"88","hashOfConfig":"50"},{"size":2784,"mtime":1612212883385,"results":"89","hashOfConfig":"50"},{"size":562,"mtime":1609786510833,"results":"90","hashOfConfig":"50"},{"size":579,"mtime":1611763313920,"results":"91","hashOfConfig":"50"},{"size":7096,"mtime":1612216111050,"results":"92","hashOfConfig":"50"},{"size":14397,"mtime":1611968662331,"results":"93","hashOfConfig":"50"},{"size":1942,"mtime":1612212883384,"results":"94","hashOfConfig":"50"},{"size":2362,"mtime":1609800602580,"results":"95","hashOfConfig":"50"},{"size":2073,"mtime":1612222027447,"results":"96","hashOfConfig":"50"},{"size":698,"mtime":1612222969761,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1iwtt0",{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"148"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"148"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"148"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/index.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/store/store.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/session_api_util.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/room_api_util.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/root.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/actions/session_actions.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/giphy_api_util.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/app.js",["198","199","200"],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/root_reducer.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/route_util.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/session_reducer.js",["201"],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/messages_reducer.js",["202"],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/modal_reducer.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/errors_reducer.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/chat_box_container.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/main/main_page.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/dashboard_container.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/splash/splash_page_container.js",["203"],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/rooms_reducer.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/actions/room_actions.js",["204","205","206","207"],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/actions/message_actions.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/actions/modal_actions.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/session_errors_reducer.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/modal/modal.jsx",["208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225"],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/splash/splash_page.jsx",[],["226","227"],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/dashboard.jsx",["228","229"],"import React from 'react';\n//import room from '../../../../validation/room';\nimport io from \"socket.io-client\";\nimport ChatBox from './chat_box_container';\nimport Sidebar from './side_bar_container'\nimport { getAvailableRooms, getRooms } from '../../util/room_api_util';\nimport * as cloneDeep from 'lodash/cloneDeep';\nclass DashBoard extends React.Component{\n   constructor(props){\n      super(props);\n      this.socket = io();\n      \n      this.state = {\n         roomsAvailable: [],\n         roomsJoined: [],\n         all: [],\n         deletedRoom: null,\n         myRooms: this.props.user.rooms,\n      }\n      \n      this.createNewRoom = this.createNewRoom.bind(this);\n      this.joinRoom = this.joinRoom.bind(this);\n      this.leaveRoom = this.leaveRoom.bind(this);\n      this.userLeft = this.userLeft.bind(this);\n      this.userJoined = this.userJoined.bind(this);\n      this.deleteRoom = this.deleteRoom.bind(this);\n      this.roomDeleted = this.roomDeleted.bind(this);\n      this.ackDelete = this.ackDelete.bind(this);\n      this.roomCreated = this.roomCreated.bind(this);\n      \n      \n   }\n\n   \n   //component did mount\n   componentDidMount(){\n      \n      this.props.closeModal();\n      this.props.getRooms(this.props.user.id); //this pings the database\n      \n      getRooms(this.props.user.id)\n         .then(rooms => {\n            this.setState({\n               roomsJoined: rooms,\n            })\n         })\n         .then(()=>{\n            getAvailableRooms(this.props.user.id) //this pings the database                                \n            .then(rooms => {\n               this.setState({\n                  roomsAvailable: rooms,\n               })\n            })\n            .then(()=>{\n               this.setState({all: this.state.roomsAvailable.data.concat(this.state.roomsJoined.data)})\n            })\n         })\n      \n      this.socket.on(\"user left\", this.userLeft);\n      this.socket.on(\"user joined\", this.userJoined);\n      this.socket.on(\"room deleted\", this.roomDeleted);\n      this.socket.on(\"room created\", this.roomCreated);\n      // this.socket.on(\"room creation error\", this.addRoomCreationError);\n   }\n\n   \n\n   componentDidUpdate(prevProps){\n      let user = this.props.user.username;\n      let rooms = this.props.rooms;\n      if (Object.keys(rooms).length != Object.keys(prevProps.rooms).length) {\n         \n         this.socket.emit(\"User connected\", { user, rooms });\n         this.props.getRooms(this.props.user.id); \n         \n         \n      getRooms(this.props.user.id)\n         .then(rooms => {\n            this.setState({\n               roomsJoined: rooms,\n            })\n         })\n         .then(()=>{\n            getAvailableRooms(this.props.user.id) //this pings the database                                \n            .then(rooms => {\n               this.setState({\n                  roomsAvailable: rooms,\n               })\n            })\n            .then(()=>{\n               this.setState({all: this.state.roomsAvailable.data.concat(this.state.roomsJoined.data)})\n            })\n         })\n      };\n      // if (this.props.rooms != prevProps) {\n      //    this.render()\n      // }\n   }\n\n   userLeft({ user, room }) { \n      //check if this user belongs to the room\n      let currentRooms = Object.keys(this.props.rooms);\n\n      if (currentRooms.includes(room._id)) {    \n         this.props.updateUserList(room);\n      }\n   }\n\n   userJoined({ user, room }) {\n      //check if this user belongs to the room\n      let currentRooms = Object.keys(this.props.rooms);\n\n      if (currentRooms.includes(room._id)){\n         //reformat the user object added to the room to match existing users\n         room.users.splice(room.users.length - 1, 1);\n         room.users.push({username: user.username, _id: user.id})\n         this.props.updateUserList(room);\n      }\n   }\n   \n   createNewRoom(newRoom){\n      \n      this.socket.emit(\"Create Room\", newRoom);\n      this.setState({\n         newTitle: \"\",\n         errors: []\n      })\n   }\n\n   roomCreated(room){\n       \n      let roomsJoined = cloneDeep(this.state.roomsJoined);\n      let roomsAvail = cloneDeep(this.state.roomsAvailable);\n      let allRooms = cloneDeep(this.state.all);\n      \n      if (room.admin === this.props.user.id){\n         this.props.createRoom(room);\n         roomsJoined.data.push(room);\n         this.setState({\n            roomsJoined: {data: roomsJoined.data},\n         })\n      } else {\n         roomsAvail.data.push(room);\n         this.setState({\n            roomsAvailable: {data: roomsAvail.data},\n         })\n      }\n       \n      allRooms.push(room);\n      this.setState({\n         all: allRooms,\n      })\n   }\n\n\n\n   joinRoom(e){\n       \n      let room = this.state.roomsAvailable.data.filter(room => e.currentTarget.id === room._id ? room : null);\n      \n      room[0].users.push(this.props.user.id);\n      this.props.editRoom(room[0]);\n      \n      this.socket.emit('join room', {\n         room: room[0],\n         user: this.props.user,\n      })\n   }\n\n   leaveRoom(e){\n       \n      let room = cloneDeep(this.props.rooms[e.currentTarget.id]);\n      //find and remove current user from the room users array\n      for (let i = 0; i < room.users.length; i++){\n         if(room.users[i]._id === this.props.user.id){\n            room.users.splice(i, 1);\n         }\n      }\n       \n      this.props.leaveRoom(room);\n      this.socket.emit('leave room',{\n         room: room,\n         user: this.props.user,\n      })\n   }\n\n   deleteRoom(room){\n      this.socket.emit('delete room',{room, user: this.props.user});\n   }\n\n   roomDeleted({room, user}){\n      this.props.deleteRoom(room);\n      //check if this user was a member \n       \n      let roomMembers = room.users;\n      if (this.props.user.id !== room.admin && roomMembers.includes(this.props.user.id)){\n         this.setState({deletedRoom: room});\n         \n      } else {\n         //remove from available rooms list\n         let rmsAvail = cloneDeep(this.state.roomsAvailable);\n         let index = null;\n         for (let i = 0; i < rmsAvail.data.length; i++){\n            if(rmsAvail.data[i]._id === room._id){\n               index = i;\n            }\n         }\n\n         if (index) {\n            rmsAvail.data.splice(index, 1);\n         }\n\n         this.setState({\n            roomsAvailable: {data: rmsAvail.data}\n         })\n          \n      }\n\n      //remove from joined rooms list?\n\n   }\n\n   ackDelete(){\n      this.setState({deletedRoom: null});\n   }\n\n\n\n\n\n\n   render(){\n      let rooms = this.props.rooms || {};\n      if (rooms.length > 0){\n         // \n      }\n      let roomIds = [];\n      //   myRooms = this.state.myRooms;\n      console.log(\"Dashboard rendered\");\n      Object.keys(rooms).forEach(key => {\n         // ;\n         roomIds.push(rooms[key]._id);  \n      });\n      // rooms.forEach(room => {\n      //    ;\n      //    roomIds.push(room.roomId);\n      // });\n      // ;\n      return(\n         <div className=\"dashboard\">\n            <Sidebar \n               createNewRoom = {this.createNewRoom}\n               newTitle={this.state.newTitle}\n               handleChange={this.handleChange}\n               joinRoom={this.joinRoom}\n               roomsAvailable={this.state.roomsAvailable}\n               allRooms = {this.state.all}\n               errors = {this.state.errors}\n               socket = {this.socket}\n            />\n            {this.state.deletedRoom ? (\n               <div className=\"deleted-room-alert\">\n                  <h3>{`\"${this.state.deletedRoom.title}\" was deleted by the admin.`}</h3>\n                  <button onClick={this.ackDelete}>OK</button>\n               </div>\n               ) : (null)            \n            }\n            <div className=\"chatbox-list\" >\n               {\n                  roomIds.map(id=>\n                     {\n                        // debugger;\n                        if (id !== undefined){\n                     return (this.props.rooms[id].closedFor.includes(this.props.user.email) ?\n                         \"\" :  <ChatBox leaveRoom={this.leaveRoom} deleteRoom={this.deleteRoom} roomId={id} key={id} socket={this.socket}/>\n                        )}\n                     }\n                  )\n               }  \n            </div>\n\n         </div>\n      )\n   }\n}\n\n\nexport default DashBoard;","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/chat_box.jsx",["230","231","232"],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/message_api_util.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/user_list.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/session/login_form_container.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/session/signup_form_container.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/new_room_form/new_room_form_container.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/side_bar_container.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/data_share.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/message_container.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/giphy/giphy.jsx",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/session/session_form.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/new_room_form/new_room_form.jsx",["233"],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/side_bar.jsx",["234","235","236","237","238","239","240","241","242"],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/message.jsx",["243","244","245"],"import React, { Component } from 'react';\nimport { debug } from 'request';\nimport EditMessageForm from './edit_message_form_container.js';\nimport Replies from './replies.jsx';\nimport RepliesForm from './replies_container.js'\nexport default class Message extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      repliesOpen: false\n    }\n    this.editMessage = this.editMessage.bind(this);\n    this.deleteMessage = this.deleteMessage.bind(this);\n    this.deleteGif = this.deleteGif.bind(this);\n    this.toggleReplies = this.toggleReplies.bind(this)\n  };\n\n  componentDidMount(){\n    this.props.socket.on(\"Message Edited\", this.editMessage);\n    this.props.socket.on(\"Message Deleted\", this.deleteMessage);\n  };\n\n  editMessage(msg){\n     \n    if (msg._id === this.props.msg.id){\n      this.props.editMessage(msg);\n    }\n  };\n\n  deleteMessage(msg){\n    if (msg._id === this.props.msg.id) {\n      this.props.deleteMessage(msg);\n    }\n  };\n\n  deleteGif(){\n    let response = window.confirm(`Are you sure you want to delete your Gif?`);\n    if (response) {\n      this.props.socket.emit(\"Delete Message\", this.props.msg);\n    }\n  };\n\n  toggleReplies(){\n    this.state.repliesOpen === true ? \n    this.setState({repliesOpen: false}) : this.setState({repliesOpen: true})\n  };\n  \n  render() {\n    //show edit button only if current user was the author of this message\n    //open edit message textfield form if button is clicked\n    //use socket to edit database and all connected users' message\n    //update redux state (room and messages)\n    let msg = this.props.msg;\n    let author = false;\n  \n    if (msg.sender === this.props.user.id){\n       author = true;\n     }\n    \n    let message;\n    if (msg.message.includes('giphy')){\n      message = <li className=\"message-li\" key={msg.id}>\n                    <h6>{msg.username}: </h6>\n                    <img className=\"chat-img\" src={msg.message} alt=\"image\" />\n                  {author && \n                    <button onClick={this.deleteGif}>Delete Gif</button>\n                  }\n\n                 <RepliesForm socket={this.props.socket} msg={msg} message={msg.message} />\n                </li>         \n    } else {\n      message = \n      \n      <li className=\"message-li\" key={msg.id} id={this.props.id}>\n        <div className=\"message-li-text\">\n          <h6>{msg.username}:</h6>\n          <p>{msg.message}</p>\n        </div>\n        <div className=\"message-li-buttons\">\n          {\n            author && <EditMessageForm socket={this.props.socket} msg={msg}/> \n          }       \n          <RepliesForm socket={this.props.socket} msg={msg} message={msg.message}/>\n        </div>\n      </li>\n    }\n\n   \n    return (\n      <div className=\"message-container\">\n        {message}\n      </div>\n   \n    )\n  }\n}\n","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/replies_container.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/edit_message_form_container.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/replies.jsx",["246"],"import React from \"react\"\nimport moment from \"moment\";\nimport Picker from 'emoji-picker-react';\nimport Giphy from \"../giphy/giphy\";\nimport EditReplyForm from './edit_reply_form';\nimport * as cloneDeep from 'lodash/cloneDeep';\nimport {switcheThread} from './../../components/chat/data_share';\n\n\nclass Replies extends React.Component {\n   constructor(props){\n      super(props)\n\n      this.state ={\n         replyBox: false,\n         replyText: \"\",\n         repliesOpen: false,\n         emojiPicker: false,\n      }\n      this.handleReply = this.handleReply.bind(this);\n      this.handleChange = this.handleChange.bind(this);\n      this.submitReply = this.submitReply.bind(this);\n      this.toggleReplies = this.toggleReplies.bind(this)\n      this.openEmoji = this.openEmoji.bind(this);\n      this.selectEmoji = this.selectEmoji.bind(this);\n      this.useGiphy = this.useGiphy.bind(this);\n      this.deleteGifReply = this.deleteGifReply.bind(this);\n\n   };\n\n   componentDidMount(){\n      this.subscription = switcheThread.receiveOpenThread().subscribe(message=>{\n      if(message === this.props.message.message){\n        this.setState({repliesOpen: true});\n      }; \n    })\n   };\n\n   handleReply(e) {\n      this.state.replyBox === false ? \n         (this.props.replies  ?\n           this.setState({ replyBox: true, repliesOpen: true })\n           : \n           this.setState({replyBox: true, repliesOpen: false})\n         ) \n        :\n        this.setState({ replyBox: false, repliesOpen: false })\n\n   }\n   handleChange(e){\n      this.setState({\n         replyText: e.currentTarget.value\n      })\n   };\n\n   submitReply(e){\n      e.preventDefault();\n      let username = this.props.user.username;\n      let userId = this.props.user.id;\n       \n      let room = this.props.room;\n\n      let timestamp = moment().format('LT');\n      let reply = this.state.replyText;\n      let message = this.props.msg.message\n      let id =  this.props.message.id;\n      this.props.socket.emit(\"Edit Message\", {\n         reply,\n         timestamp,\n         username,\n         userId,\n         room,\n         message,\n         id\n      })\n      this.setState({\n         replyText: \"\",\n         repliesOpen: true,\n      })\n   };\n\n   toggleReplies() {\n      this.state.repliesOpen === true ?\n         this.setState({ repliesOpen: false, replyBox: false })\n          : \n         this.setState({ repliesOpen: true, replyBox: true })\n   };\n\n   selectEmoji(e, emojiObject) {\n      let newMessage = this.state.replyText + emojiObject.emoji;\n      this.setState({\n         replyText: newMessage\n      })\n   };\n\n   openEmoji() {\n      this.state.emojiPicker === true ?\n         this.setState({ emojiPicker: false }) :\n         this.setState({ emojiPicker: true })\n   };\n\n   useGiphy(e) {\n      e.preventDefault();\n      let username = this.props.user.username;\n      let userId = this.props.user.id;\n      let room = this.props.room;\n\n      let timestamp = moment().format('LT');\n      let reply = `${e.target.src}`;\n      let message = this.props.msg.message;\n      let id = this.props.message.id;\n      this.props.socket.emit(\"Edit Message\", {\n         reply,\n         timestamp,\n         username,\n         userId,\n         room,\n         message,\n         id\n      })\n      this.setState({\n         replyText: \"\",\n         repliesOpen: true,\n      })\n   };\n\n   deleteGifReply(e){\n      let response = window.confirm(`Are you sure you want to delete your Gif?`);\n      if (response) {\n         let replies = cloneDeep(this.props.msg.replies);\n         let replyId = e.currentTarget.id;\n          \n         let replyIndex = replies.findIndex(reply => replyId === reply._id);\n         replies.splice(replyIndex, 1);\n\n         this.props.socket.emit(\"Edit Message Reply\", {\n            message: this.props.msg,\n            replies: replies,\n         });\n      }\n   }\n\n\n   render(){\n      let msg = this.props.msg;\n\n      return(\n         <div>\n           \n           \n            {msg.replies && this.state.repliesOpen === true ?\n               (\n\n                  [msg.replies.map(reply => {\n                     // return (\n                     if (reply.reply.includes(\"giphy\")){\n                        return (\n                           <li key={reply._id} className=\"reply\" >\n                              {reply.username} says: <img className=\"chat-img\" src={reply.reply} alt=\"image\" />\n                              {reply.userId === this.props.user.id && \n                                 <button onClick={this.deleteGifReply} id={reply._id}>Delete Gif</button>\n                              }\n                           </li>\n                        )\n                     }\n                     else{\n                        return (\n                           <li key={reply._id} className=\"reply\" id={`msg-reply-${reply.reply}`}>\n                              {reply.username} says: {reply.reply}\n                              {reply.userId === this.props.user.id &&\n                                 <EditReplyForm socket={this.props.socket} msg={msg} replyId={reply._id}/>\n                              }\n                           </li>\n                        )\n                     }\n                  }),\n\n                     <button key=\"button\" className=\"replies-div\" onClick={this.toggleReplies}> Close</button> \n                  ])\n               : (msg.replies.length > 0 ? \n                  (msg.replies.length > 1 ?\n                      <button className=\"replies-div\" onClick={this.toggleReplies}> {msg.replies.length} replies</button>\n                      :\n                     <button className=\"replies-div\" onClick={this.toggleReplies}> {msg.replies.length} reply</button>\n                  )\n                  : <button className=\"replies-div\" onClick={this.toggleReplies}> Reply</button>)\n            }\n            {this.state.replyBox === false ?\n            // (<button onClick={this.handleReply}> Add Reply</button>)\n            \"\"\n            :\n            (\n               <div>\n                  <form onSubmit={this.submitReply}>\n                    \n                     <input type=\"text\" onChange={this.handleChange} value={this.state.replyText}/>\n                        \n                  </form>\n                     {this.state.emojiPicker === false ?\n                        <button onClick={this.openEmoji} > ☺ </button> :\n                        <div onMouseLeave={this.openEmoji}> <Picker className=\"emoji-picker\" onEmojiClick={this.selectEmoji} /> </div>}\n                     <Giphy useGiphy={this.useGiphy} roomTitle={this.props.room.title} />\n                     {/* <button onClick={this.handleReply}> Cancel</button> */}\n               </div>\n            )}\n            \n         </div>\n      )\n   }\n}\n\nexport default Replies;","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/search_dropdown.jsx",["247","248"],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/edit_message_form.jsx",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/edit_reply_form.jsx",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/chatbox_header_options.jsx",["249","250"],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/members.jsx",[],{"ruleId":"251","severity":1,"message":"252","line":3,"column":18,"nodeType":"253","messageId":"254","endLine":3,"endColumn":23},{"ruleId":"251","severity":1,"message":"255","line":5,"column":8,"nodeType":"253","messageId":"254","endLine":5,"endColumn":16},{"ruleId":"251","severity":1,"message":"256","line":6,"column":8,"nodeType":"253","messageId":"254","endLine":6,"endColumn":15},{"ruleId":"257","severity":1,"message":"258","line":10,"column":1,"nodeType":"259","endLine":36,"endColumn":2},{"ruleId":"251","severity":1,"message":"260","line":1,"column":10,"nodeType":"253","messageId":"254","endLine":1,"endColumn":15},{"ruleId":"251","severity":1,"message":"261","line":2,"column":21,"nodeType":"253","messageId":"254","endLine":2,"endColumn":31},{"ruleId":"251","severity":1,"message":"262","line":1,"column":29,"nodeType":"253","messageId":"254","endLine":1,"endColumn":43},{"ruleId":"251","severity":1,"message":"263","line":1,"column":61,"nodeType":"253","messageId":"254","endLine":1,"endColumn":75},{"ruleId":"251","severity":1,"message":"264","line":1,"column":77,"nodeType":"253","messageId":"254","endLine":1,"endColumn":89},{"ruleId":"251","severity":1,"message":"265","line":1,"column":91,"nodeType":"253","messageId":"254","endLine":1,"endColumn":104},{"ruleId":"266","severity":1,"message":"267","line":51,"column":70,"nodeType":"268","endLine":51,"endColumn":85},{"ruleId":"269","severity":1,"message":"270","line":52,"column":21,"nodeType":"271","endLine":52,"endColumn":131},{"ruleId":"266","severity":1,"message":"267","line":58,"column":54,"nodeType":"268","endLine":58,"endColumn":69},{"ruleId":"269","severity":1,"message":"270","line":59,"column":25,"nodeType":"271","endLine":59,"endColumn":2925},{"ruleId":"269","severity":1,"message":"270","line":61,"column":74,"nodeType":"271","endLine":61,"endColumn":171},{"ruleId":"266","severity":1,"message":"267","line":62,"column":64,"nodeType":"268","endLine":62,"endColumn":79},{"ruleId":"266","severity":1,"message":"267","line":70,"column":53,"nodeType":"268","endLine":70,"endColumn":68},{"ruleId":"269","severity":1,"message":"270","line":71,"column":25,"nodeType":"271","endLine":71,"endColumn":2925},{"ruleId":"269","severity":1,"message":"270","line":73,"column":80,"nodeType":"271","endLine":73,"endColumn":177},{"ruleId":"266","severity":1,"message":"267","line":74,"column":63,"nodeType":"268","endLine":74,"endColumn":78},{"ruleId":"266","severity":1,"message":"267","line":84,"column":58,"nodeType":"268","endLine":84,"endColumn":73},{"ruleId":"269","severity":1,"message":"270","line":85,"column":23,"nodeType":"271","endLine":85,"endColumn":2923},{"ruleId":"269","severity":1,"message":"270","line":87,"column":72,"nodeType":"271","endLine":87,"endColumn":169},{"ruleId":"266","severity":1,"message":"267","line":88,"column":62,"nodeType":"268","endLine":88,"endColumn":77},{"ruleId":"266","severity":1,"message":"267","line":96,"column":52,"nodeType":"268","endLine":96,"endColumn":67},{"ruleId":"269","severity":1,"message":"270","line":97,"column":23,"nodeType":"271","endLine":97,"endColumn":2923},{"ruleId":"269","severity":1,"message":"270","line":99,"column":86,"nodeType":"271","endLine":99,"endColumn":183},{"ruleId":"266","severity":1,"message":"267","line":100,"column":62,"nodeType":"268","endLine":100,"endColumn":77},{"ruleId":"272","replacedBy":"273"},{"ruleId":"274","replacedBy":"275"},{"ruleId":"276","severity":1,"message":"277","line":71,"column":37,"nodeType":"278","messageId":"279","endLine":71,"endColumn":39},{"ruleId":"280","severity":1,"message":"281","line":270,"column":33,"nodeType":"282","messageId":"283","endLine":270,"endColumn":35},{"ruleId":"251","severity":1,"message":"284","line":2,"column":8,"nodeType":"253","messageId":"254","endLine":2,"endColumn":10},{"ruleId":"251","severity":1,"message":"285","line":4,"column":8,"nodeType":"253","messageId":"254","endLine":4,"endColumn":16},{"ruleId":"251","severity":1,"message":"286","line":188,"column":9,"nodeType":"253","messageId":"254","endLine":188,"endColumn":18},{"ruleId":"251","severity":1,"message":"287","line":2,"column":8,"nodeType":"253","messageId":"254","endLine":2,"endColumn":13},{"ruleId":"251","severity":1,"message":"264","line":2,"column":9,"nodeType":"253","messageId":"254","endLine":2,"endColumn":21},{"ruleId":"251","severity":1,"message":"288","line":4,"column":10,"nodeType":"253","messageId":"254","endLine":4,"endColumn":27},{"ruleId":"251","severity":1,"message":"289","line":4,"column":29,"nodeType":"253","messageId":"254","endLine":4,"endColumn":37},{"ruleId":"251","severity":1,"message":"290","line":5,"column":9,"nodeType":"253","messageId":"254","endLine":5,"endColumn":16},{"ruleId":"251","severity":1,"message":"291","line":6,"column":10,"nodeType":"253","messageId":"254","endLine":6,"endColumn":20},{"ruleId":"251","severity":1,"message":"292","line":8,"column":8,"nodeType":"253","messageId":"254","endLine":8,"endColumn":19},{"ruleId":"251","severity":1,"message":"293","line":57,"column":13,"nodeType":"253","messageId":"254","endLine":57,"endColumn":17},{"ruleId":"276","severity":1,"message":"277","line":76,"column":30,"nodeType":"278","messageId":"279","endLine":76,"endColumn":32},{"ruleId":"280","severity":1,"message":"281","line":189,"column":44,"nodeType":"282","messageId":"283","endLine":189,"endColumn":46},{"ruleId":"251","severity":1,"message":"260","line":2,"column":10,"nodeType":"253","messageId":"254","endLine":2,"endColumn":15},{"ruleId":"251","severity":1,"message":"294","line":4,"column":8,"nodeType":"253","messageId":"254","endLine":4,"endColumn":15},{"ruleId":"295","severity":1,"message":"296","line":65,"column":21,"nodeType":"271","endLine":65,"endColumn":79},{"ruleId":"295","severity":1,"message":"296","line":159,"column":54,"nodeType":"271","endLine":159,"endColumn":112},{"ruleId":"276","severity":1,"message":"277","line":116,"column":46,"nodeType":"278","messageId":"279","endLine":116,"endColumn":48},{"ruleId":"276","severity":1,"message":"277","line":150,"column":54,"nodeType":"278","messageId":"279","endLine":150,"endColumn":56},{"ruleId":"251","severity":1,"message":"297","line":3,"column":10,"nodeType":"253","messageId":"254","endLine":3,"endColumn":19},{"ruleId":"251","severity":1,"message":"261","line":3,"column":21,"nodeType":"253","messageId":"254","endLine":3,"endColumn":31},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'MainPage' is defined but never used.","'ChatBox' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'debug' is defined but never used.","'closeModal' is defined but never used.","'deleteRoomUtil' is defined but never used.","'createRoomUtil' is defined but never used.","'getRoomUsers' is defined but never used.","'leaveRoomUtil' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["298"],"no-negated-in-lhs",["299"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'io' is defined but never used.","'UserList' is defined but never used.","'roomGiphy' is assigned a value but never used.","'Modal' is defined but never used.","'getAvailableRooms' is defined but never used.","'getRooms' is defined but never used.","'getUser' is defined but never used.","'updateRoom' is defined but never used.","'NewRoomForm' is defined but never used.","'user' is assigned a value but never used.","'Replies' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'openModal' is defined but never used.","no-global-assign","no-unsafe-negation"]