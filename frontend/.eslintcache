[{"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/index.js":"1","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/root.js":"2","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/store/store.js":"3","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/session_api_util.js":"4","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/actions/session_actions.js":"5","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/giphy_api_util.js":"6","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/app.js":"7","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/root_reducer.js":"8","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/route_util.js":"9","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/session/login_form_container.js":"10","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/main/main_page.js":"11","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/session/signup_form_container.js":"12","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/dashboard_container.js":"13","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/nav/navbar_container.js":"14","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/session_reducer.js":"15","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/errors_reducer.js":"16","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/messages_reducer.js":"17","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/giphy_reducer.js":"18","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/rooms_reducer.js":"19","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/nav/navbar.js":"20","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/actions/room_actions.js":"21","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/session_errors_reducer.js":"22","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/actions/message_actions.js":"23","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/session/signup_form.js":"24","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/session/login_form.js":"25","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/actions/giphy_actions.js":"26","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/dashboard.jsx":"27","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/room_api_util.js":"28","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/message_api_util.js":"29","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/side_bar_container.js":"30","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/chat_box_container.js":"31","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/side_bar.jsx":"32","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/chat_box.jsx":"33","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/user_list.js":"34","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/search_dropdown.jsx":"35","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/giphy/giphy_container.js":"36","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/giphy/giphy.jsx":"37","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/message_container.js":"38","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/message.jsx":"39","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/edit_message_form_container.js":"40","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/edit_message_form.jsx":"41"},{"size":1741,"mtime":1609168078035,"results":"42","hashOfConfig":"43"},{"size":312,"mtime":1606838017478,"results":"44","hashOfConfig":"43"},{"size":351,"mtime":1606838017482,"results":"45","hashOfConfig":"43"},{"size":459,"mtime":1606948685378,"results":"46","hashOfConfig":"43"},{"size":2295,"mtime":1606948685375,"results":"47","hashOfConfig":"43"},{"size":113,"mtime":1609168078036,"results":"48","hashOfConfig":"43"},{"size":808,"mtime":1608571883305,"results":"49","hashOfConfig":"43"},{"size":359,"mtime":1609168078036,"results":"50","hashOfConfig":"43"},{"size":1030,"mtime":1607006939591,"results":"51","hashOfConfig":"43"},{"size":506,"mtime":1606948685376,"results":"52","hashOfConfig":"43"},{"size":258,"mtime":1606838017477,"results":"53","hashOfConfig":"43"},{"size":603,"mtime":1606948685377,"results":"54","hashOfConfig":"43"},{"size":914,"mtime":1609168078034,"results":"55","hashOfConfig":"43"},{"size":333,"mtime":1607006939590,"results":"56","hashOfConfig":"43"},{"size":717,"mtime":1606948685377,"results":"57","hashOfConfig":"43"},{"size":172,"mtime":1606838017480,"results":"58","hashOfConfig":"43"},{"size":1376,"mtime":1609213162362,"results":"59","hashOfConfig":"43"},{"size":335,"mtime":1609168078035,"results":"60","hashOfConfig":"43"},{"size":1989,"mtime":1609211122657,"results":"61","hashOfConfig":"43"},{"size":1495,"mtime":1608571883307,"results":"62","hashOfConfig":"43"},{"size":1794,"mtime":1608742856910,"results":"63","hashOfConfig":"43"},{"size":429,"mtime":1606838017481,"results":"64","hashOfConfig":"43"},{"size":855,"mtime":1609212236903,"results":"65","hashOfConfig":"43"},{"size":2964,"mtime":1606948685376,"results":"66","hashOfConfig":"43"},{"size":2012,"mtime":1606948685376,"results":"67","hashOfConfig":"43"},{"size":390,"mtime":1609168078033,"results":"68","hashOfConfig":"43"},{"size":5762,"mtime":1609168078034,"results":"69","hashOfConfig":"43"},{"size":974,"mtime":1608595003168,"results":"70","hashOfConfig":"43"},{"size":302,"mtime":1608063756134,"results":"71","hashOfConfig":"43"},{"size":453,"mtime":1609168078035,"results":"72","hashOfConfig":"43"},{"size":626,"mtime":1608742856911,"results":"73","hashOfConfig":"43"},{"size":3573,"mtime":1609168078034,"results":"74","hashOfConfig":"43"},{"size":4158,"mtime":1609185159203,"results":"75","hashOfConfig":"43"},{"size":333,"mtime":1608742856913,"results":"76","hashOfConfig":"43"},{"size":1804,"mtime":1609190207394,"results":"77","hashOfConfig":"43"},{"size":479,"mtime":1609168078035,"results":"78","hashOfConfig":"43"},{"size":2376,"mtime":1609168078035,"results":"79","hashOfConfig":"43"},{"size":613,"mtime":1609212613721,"results":"80","hashOfConfig":"43"},{"size":1459,"mtime":1609212500583,"results":"81","hashOfConfig":"43"},{"size":578,"mtime":1609212640720,"results":"82","hashOfConfig":"43"},{"size":1783,"mtime":1609194217780,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"tzjp3h",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/index.js",[],["176","177"],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/root.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/store/store.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/session_api_util.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/actions/session_actions.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/giphy_api_util.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/app.js",["178"],"import React from 'react';\nimport { AuthRoute, ProtectedRoute } from '../util/route_util';\nimport { Switch, Route } from 'react-router-dom';\nimport NavBarContainer from './nav/navbar_container';\n\nimport MainPage from './main/main_page';\nimport LoginFormContainer from './session/login_form_container';\nimport SignupFormContainer from './session/signup_form_container';\n\nimport DashBoard from './chat/dashboard_container';\nconst App = () => (\n  <div>\n    <NavBarContainer />\n    <Switch>\n        <AuthRoute exact path=\"/login\" component={LoginFormContainer} />\n        <AuthRoute exact path=\"/signup\" component={SignupFormContainer} />\n        <AuthRoute exact path=\"/\" component={MainPage} />\n        <ProtectedRoute exact path=\"/chat\" component={DashBoard} /> \n    </Switch>\n  </div>\n);\n\nexport default App;","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/root_reducer.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/route_util.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/session/login_form_container.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/main/main_page.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/session/signup_form_container.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/dashboard_container.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/nav/navbar_container.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/session_reducer.js",["179"],"import { RECEIVE_CURRENT_USER, \n         RECEIVE_USER_LOGOUT, \n         RECEIVE_USER_SIGN_IN } from '../actions/session_actions';\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case RECEIVE_CURRENT_USER:\n      // console.log(action.currentUser)\n      return {\n        ...state,\n        isAuthenticated: !!action.currentUser,\n        user: action.currentUser\n      };\n    case RECEIVE_USER_LOGOUT:\n      return {\n        isAuthenticated: false,\n        user: undefined\n      };\n    case RECEIVE_USER_SIGN_IN:\n      return ({\n        ...state,\n        isSignedIn: true\n      })\n    default:\n      return state;\n  }\n}","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/errors_reducer.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/messages_reducer.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/giphy_reducer.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/rooms_reducer.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/nav/navbar.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/actions/room_actions.js",["180","181"],"import { getRoom, getRooms, deleteRoomUtil, updateRoomUtil, createRoomUtil, getRoomUsers, leaveRoomUtil } from '../util/room_api_util';\n\nexport const RECEIVE_ROOMS = \"RECEIVE_ROOMS\";\nexport const RECEIVE_ROOM = \"RECEIVE_ROOM\";\nexport const DELETE_ROOM = \"DELETE_ROOM\";\nexport const UPDATE_ROOM = \"UPDATE_ROOM\";\nexport const LEAVE_ROOM = \"LEAVE_ROOM\";\n//export const RECEIVE_NEW_MESSAGE = \"RECEIVE_NEW_MESSAGE\";\nexport const RECEIVE_ROOM_USERS = \"RECEIVE_ROOM_USERS\";\n\n\nexport const receiveRooms = rooms => ({\n  type: RECEIVE_ROOMS,\n  rooms\n});\n\nexport const deleteRoom = roomId => ({\n  type: DELETE_ROOM,\n  roomId\n});\n\nexport const updateRoom = room => ({\n  type: UPDATE_ROOM,\n  room\n})\n\nexport const exitRoom = room => ({\n  type: LEAVE_ROOM,\n  room\n})\n\nexport const receiveRoom = room => ({\n  type: RECEIVE_ROOM,\n  room\n})\n\n\nexport const fetchRoom = (roomId) => dispatch => (\n  getRoom(roomId)\n    .then(room => dispatch(receiveRoom(room)))\n    .catch(err => console.log(err))\n);\n\nexport const createRoom = room => dispatch => (\n  createRoomUtil(room)\n    .then(room => dispatch(receiveRoom(room)))\n)\n\nexport const removeRoom = roomId => dispatch => (\n  deleteRoomUtil(roomId)\n    .then(roomId => dispatch(deleteRoom(roomId)))\n  )\n\nexport const editRoom = room => dispatch => (\n  updateRoomUtil(room)\n    .then(room => {\n         \n      dispatch(updateRoom(room.data))\n    })\n)\nexport const updateUserList = room => dispatch => {\n    \n  dispatch(updateRoom(room));\n    \n}\n\nexport const leaveRoom = room => dispatch => (\n  updateRoomUtil(room)\n    .then(room => {\n       \n      dispatch(exitRoom(room.data))\n    })\n)\n\nexport const fetchRooms = (userId) => dispatch => (\n  getRooms(userId)\n    .then(rooms => {\n      dispatch(receiveRooms(rooms));\n    })\n    .catch(err => console.log(err))\n);\n\n","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/session_errors_reducer.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/actions/message_actions.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/session/signup_form.js",["182","183","184"],"import { authenticate } from 'passport';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport {Redirect} from 'react-router'\nimport { login } from '../../util/session_api_util';\n\nclass SignupForm extends React.Component {\n  constructor(props) {\n     \n    super(props);\n    this.state = {\n      email: '',\n      username: '',\n      password: '',\n      password2: '',\n      errors: {},\n      is_authenticated: false\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.clearedErrors = false;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    //  \n    if (nextProps.signedIn === true) {\n      this.props.history.push('/pillar');\n    }\n    //  \n    this.setState({errors: nextProps.errors})\n  }\n\n  componentDidUpdate(prevProps){\n    //  \n    if(this.props.authenticated !== prevProps.authenticated){\n      //  \n      this.setState({is_authenticated: true})\n    }\n  }\n\n  update(field) {\n    return e => this.setState({\n      [field]: e.currentTarget.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n     \n    let user = {\n      email: this.state.email,\n      username: this.state.username,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n\n    // this.props.signup(user, this.props.history); \n    this.props.signup(user, this.props.history)\n      .then(user => {\n         \n        this.props.login(user)\n      })\n    // console.log(this.props)\n    // if(this.props.authenticate){\n    //   // this.props.login(user)\n    //   this.props.history.push('/pillars')\n    // }\n\n  }\n\n  renderErrors() {\n    return(\n      <ul>\n        {Object.keys(this.state.errors).map((error, i) => (\n          <li key={`error-${i}`}>\n            {this.state.errors[error]}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"signup-form-container\">\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"signup-form\">\n            <br/>\n              <input type=\"text\"\n                value={this.state.email}\n                onChange={this.update('email')}\n                placeholder=\"Email\"\n              />\n            <br/>\n              <input type=\"text\"\n                value={this.state.username}\n                onChange={this.update('username')}\n                placeholder=\"Username\"\n              />\n            <br/>\n              <input type=\"password\"\n                value={this.state.password}\n                onChange={this.update('password')}\n                placeholder=\"Password\"\n              />\n            <br/>\n              <input type=\"password\"\n                value={this.state.password2}\n                onChange={this.update('password2')}\n                placeholder=\"Confirm Password\"\n              />\n            <br/>\n            <input type=\"submit\" value=\"Submit\" />\n            {this.renderErrors()}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SignupForm);","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/session/login_form.js",["185"],"import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport {Redirect} from 'react-router-dom'\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      errors: {},\n      is_authenticated: false\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.renderErrors = this.renderErrors.bind(this);\n  }\n\n\n  // UNSAFE_componentWillReceiveProps(nextProps) {\n  //   if (nextProps.currentUser === true) {\n  //     this.props.history.push('/pillars');\n  //   }\n  //   this.setState({errors: nextProps.errors})\n  // }\n\n  // Handle field updates (called in the render method)\n  update(field) {\n    return e => this.setState({\n      [field]: e.currentTarget.value\n    });\n  }\n\n\n\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    let user = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    \n    this.props.login(user)\n    if(this.props.currentUser){\n      this.props.history.push('/pillars')\n    }\n  }\n    \n\n\n  \n\n  // Render the session errors if there are any\n  renderErrors() {\n    return(\n      <ul>\n        {Object.keys(this.state.errors).map((error, i) => (\n          <li key={`error-${i}`}>\n            {this.state.errors[error]}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <div>\n              <input type=\"text\"\n                value={this.state.email}\n                onChange={this.update('email')}\n                placeholder=\"Email\"\n              />\n            <br/>\n              <input type=\"password\"\n                value={this.state.password}\n                onChange={this.update('password')}\n                placeholder=\"Password\"\n              />\n            <br/>\n            <input type=\"submit\" value=\"Submit\" />\n            {this.renderErrors()}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(LoginForm);\n","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/actions/giphy_actions.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/dashboard.jsx",["186"],"import React from 'react';\n//import room from '../../../../validation/room';\nimport io from \"socket.io-client\";\nimport ChatBox from './chat_box_container';\nimport Sidebar from './side_bar_container'\nimport { getAvailableRooms, getRooms } from '../../util/room_api_util';\nimport * as cloneDeep from 'lodash/cloneDeep';\nimport \"./chatbox.css\"\nclass DashBoard extends React.Component{\n   constructor(props){\n      super(props);\n      this.socket = io();\n      this.state = {\n         newTitle: \"\",\n         roomsAvailable: [],\n         roomsJoined: [],\n         all: []\n      }\n\n      this.createNewRoom = this.createNewRoom.bind(this);\n      this.handleChange = this.handleChange.bind(this);\n      this.joinRoom = this.joinRoom.bind(this);\n      this.leaveRoom = this.leaveRoom.bind(this);\n      this.userLeft = this.userLeft.bind(this);\n      this.userJoined = this.userJoined.bind(this);\n      // this.userLeft = this.userLeft.bind(this);\n\n   }\n\n   \n   //component did mount\n   componentDidMount(){\n      \n      this.props.getRooms(this.props.user.id); //this pings the database\n      \n      getRooms(this.props.user.id)\n         .then(rooms => {\n            this.setState({\n               roomsJoined: rooms,\n            })\n         })\n         .then(()=>{\n            getAvailableRooms(this.props.user.id) //this pings the database                                \n            .then(rooms => {\n               this.setState({\n                  roomsAvailable: rooms,\n               })\n            })\n            .then(()=>{\n               this.setState({all: this.state.roomsAvailable.data.concat(this.state.roomsJoined.data)})\n            })\n         })\n      // getAvailableRooms(this.props.user.id) //this pings the database\n      // .then(rooms => {\n         \n      //    this.setState({\n      //       roomsAvailable: rooms,\n      //    })\n      // });\n      \n      this.socket.on(\"user left\", this.userLeft);\n      this.socket.on(\"user joined\", this.userJoined);\n   }\n   \n   componentDidUpdate(prevProps){\n      let user = this.props.user.username;\n      let rooms = this.props.rooms;\n      if (Object.keys(rooms).length != Object.keys(prevProps.rooms).length) {\n         \n         this.socket.emit(\"User connected\", { user, rooms });\n         this.props.getRooms(this.props.user.id); \n         \n         \n      getRooms(this.props.user.id)\n         .then(rooms => {\n            this.setState({\n               roomsJoined: rooms,\n            })\n         })\n         .then(()=>{\n            getAvailableRooms(this.props.user.id) //this pings the database                                \n            .then(rooms => {\n               this.setState({\n                  roomsAvailable: rooms,\n               })\n            })\n            .then(()=>{\n               this.setState({all: this.state.roomsAvailable.data.concat(this.state.roomsJoined.data)})\n            })\n         })\n            //console.log(roomsAvailable);\n            \n         \n      };\n   }\n\n   userLeft({ user, room }) {\n      //update list of current users....\n       \n      this.props.updateUserList(room);\n   }\n\n   userJoined({ user, room }) {\n      //update list of current users....change format of newly added user to match state format\n      //remove old format\n      room.users.splice(room.users.length - 1, 1);\n      //add new format\n      room.users.push({username: user.username, _id: user.id})\n      this.props.updateUserList(room);\n   }\n   \n   createNewRoom(e){\n      e.preventDefault();\n      e.stopPropagation();\n      let room = {\n         title: this.state.newTitle,\n         admin: this.props.user.id,\n         users: this.props.user.id,\n      }\n      this.props.createRoom(room);\n      this.setState({\n         newTitle: \"\",\n      })\n      \n   }\n\n   joinRoom(e){\n      \n      let room = this.state.roomsAvailable.data.filter(room => e.currentTarget.id === room._id ? room : null);\n      \n      room[0].users.push(this.props.user.id);\n      this.props.editRoom(room[0]);\n      \n      this.socket.emit('join room', {\n         room: room[0],\n         user: this.props.user,\n      })\n       \n      \n   }\n\n   leaveRoom(e){\n       \n      let room = cloneDeep(this.props.rooms[e.currentTarget.id]);\n      //find and remove current user from the room users array\n      for (let i = 0; i < room.users.length; i++){\n         if(room.users[i]._id === this.props.user.id){\n            room.users.splice(i, 1);\n         }\n      }\n       \n      this.props.leaveRoom(room);\n      this.socket.emit('leave room',{\n         room: room,\n         user: this.props.user,\n      })\n   }\n\n   handleChange(e){\n      this.setState({\n         newTitle: e.currentTarget.value,\n      })\n   }\n\n\n   render(){\n      let rooms = this.props.rooms || {};\n      let roomIds = [];\n      console.log(\"Dashboard rendered\");\n      Object.keys(rooms).forEach(key => {\n         roomIds.push(rooms[key]._id);  \n      });\n\n      return(\n         <div>\n               <Sidebar \n                  createNewRoom = {this.createNewRoom}\n                  newTitle={this.state.newTitle}\n                  handleChange={this.handleChange}\n                  joinRoom={this.joinRoom}\n                  roomsAvailable={this.state.roomsAvailable}\n                  rooms={this.props.rooms}\n                  messages={this.props.messages}\n                  allRooms = {this.state.all}\n               />\n            <div className=\"chatbox-list\">\n               {\n                  roomIds.map(id=>\n                     {\n                        return (\n                           <ChatBox leaveRoom={this.leaveRoom} roomId={id} key={id} socket={this.socket}/>\n                        )\n                     }\n                  )\n               }  \n            </div>\n\n         </div>\n      )\n   }\n}\n\n\nexport default DashBoard;","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/room_api_util.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/message_api_util.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/side_bar_container.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/chat_box_container.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/side_bar.jsx",["187"],"import React from 'react';\nimport {getRoomUsers} from '../../util/room_api_util'\nimport SearchBarDropdown from './search_dropdown'\n\nclass Sidebar extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            show_rooms: false,\n            searchInput: '',\n            dropDown: false\n        };\n        this.handleSearchInput = this.handleSearchInput.bind(this);\n        this.handleDropDown = this.handleDropDown.bind(this);\n        this.displayRooms = this.displayRooms.bind(this);\n        this.hideRooms = this.hideRooms.bind(this);\n    }\n\n    handleSearchInput(e){\n        this.setState({searchInput: e.currentTarget.value, dropDown: true});\n    };\n\n    handleDropDown(){\n        this.setState({dropDown: false});\n    };\n\n    displayRooms(){\n        this.state.show_rooms === true ? \n        this.setState({show_rooms: false}) : this.setState({show_rooms: true});\n    };\n\n    hideRooms(){\n        this.setState({show_rooms:false});\n    };\n\n\n\n\n    render(){\n        let roomsAvailable = this.props.roomsAvailable.data || [];\n        // let filtered_messages = this.props.rooms.messages.map(message_obj => {\n        //     message_obj.message\n        // });\n        return(\n            <div className='sidebar-contaier'>\n                <div className='search-bar-container'>\n                    <input \n                        className='search-bar' \n                        type='text'\n                        onChange={this.handleSearchInput}\n                        onBlur={this.handleDropDown}\n                        value={this.state.searchInput}\n                        placeholder='type here to search'\n                    />\n                    {this.state.dropDown ? \n                        <SearchBarDropdown \n                        dropdown={this.state.dropdown} \n                        searchInput={this.state.searchInput} \n                        roomsJoined={this.props.rooms} \n                        messages={this.props.messages} //add logic here to make message and sorted array \n                        allRooms={this.props.allRooms}\n                        roomsAvailable={this.props.roomsAvailable}/>\n                        : null\n                    }\n                </div>\n                <div>\n                    <form onSubmit={this.props.createNewRoom}>\n                        <input type=\"text\" value={this.props.newTitle} \n                        onChange={this.props.handleChange}\n                        placeholder=\"Enter new room title\"/>\n                    </form>\n                    <button onClick={this.props.createNewRoom}>Create a New Chat Room</button>\n                </div>\n                <div>\n                    <button onClick={()=>this.displayRooms()}>Display All Joinable Chatrooms</button>\n                </div>\n                <div onMouseLeave={this.hideRooms}>\n                    {this.state && this.state.show_rooms === true ? \n                    roomsAvailable.map(room => {\n                     return (\n                        <li id={room._id} key={room._id}>\n                        <p>\n                            Title: {room.title}\n                        </p>\n                        <p>\n                            Number of current users: {room.users.length}\n                        </p>\n                        <button id={room._id} onClick={this.props.joinRoom}>Join Room</button>\n                        </li>\n                     )\n                  }) : null}\n                </div>\n            </div>\n        )\n    }\n};\n\nexport default Sidebar;","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/chat_box.jsx",["188"],"import React from \"react\"\nimport io from \"socket.io-client\";\nimport moment from \"moment\";\nimport UserList  from './user_list.js';\nimport './chatbox.css'\nimport Picker from 'emoji-picker-react';\nimport Giphy from \"../giphy/giphy_container\";\nimport Message from '../message/message_container';\n\nclass ChatBox extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      chatMessage: \"\",\n      open: true,\n      openOrClose: 'close',\n      emojiPicker: false,\n      giphyMessage: \"\"\n    }\n    this.toggle = this.toggle.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.submitMessage = this.submitMessage.bind(this);\n    this.openEmoji = this.openEmoji.bind(this);\n    this.selectEmoji = this.selectEmoji.bind(this);\n    this.useGiphy = this.useGiphy.bind(this);\n    this.submitGiphy = this.submitGiphy.bind(this);\n  }\n\n\n  componentDidMount(){\n    let roomId = this.props.room._id;\n\n    this.props.socket.on(`MTC_${roomId}`, msg =>{\n       //this message has been saved to the database, now need to update redux and components\n      console.log(msg);\n    \n      let newMessage = {\n        id: msg._id,\n        message: msg.message,\n        createdAt: msg.createdAt,\n        updatedAt: msg.updatedAt,\n        room: msg.room,\n        sender: msg.sender,\n        username: msg.username,\n      }\n      this.props.afterMessageSent(newMessage);      \n    });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot){\n\n  }    \n\n  handleChange(e){\n    this.setState({\n      chatMessage: e.currentTarget.value,\n    })\n  }\n\n  selectEmoji(e, emojiObject){\n    let newMessage = this.state.chatMessage + emojiObject.emoji;\n    this.setState({\n      chatMessage: newMessage\n    })\n  }\n\n  openEmoji(){\n    this.state.emojiPicker === true ? \n      this.setState({emojiPicker: false}) :\n      this.setState({emojiPicker: true})\n  }\n\n  submitMessage(e) {\n    if (e) { e.preventDefault()}\n\n    let username = this.props.user.username;\n    let userId = this.props.user.id;\n    let room = this.props.room;\n\n    let timestamp = moment().format('LT');\n    let message = this.state.chatMessage;\n     \n    this.props.socket.emit(\"Create Message\", {\n      message,\n      timestamp,\n      username,\n      userId,\n      room\n    })\n\n    this.setState({\n      chatMessage: \"\",\n    })\n\n  }\n\n  toggle(){\n    this.state.open ? \n    this.setState({open: false, openOrClose: 'open'}) : \n    this.setState({open: true, openOrClose: 'close'});\n  }\n\n  submitGiphy(){\n\n    let username = this.props.user.username;\n    let userId = this.props.user.id;\n    let room = this.props.room;\n\n    let timestamp = moment().format('LT');\n    let message = this.state.giphyMessage;\n     \n    this.props.socket.emit(\"Create Message\", {\n      message,timestamp, username, userId, room\n    })\n  \n    this.setState({\n      giphyMessage: \"\"\n    })\n  }\n\n  useGiphy(e){\n\n    let newMessage = `${e.target.src}`;\n    this.setState({\n      giphyMessage: newMessage\n    }, this.submitGiphy)\n\n  }\n  render() {\n    let messages = this.props.room.messages.map(msg=> (<Message socket={this.props.socket} msg={msg}/>)) || [];\n\n    let users = this.props.room.users || [];\n\n     \n    return (\n      <div className={this.state.open ? 'open' : 'close'}> <button onClick={this.toggle}>{this.state.openOrClose}</button>\n        {this.state.open ? (\n          <div className=\"chatbox-container\">\n\n            <h1>{this.props.room.title}</h1>\n            <button onClick={this.props.leaveRoom} id={this.props.roomId}>Leave Room</button>\n            <form onSubmit={this.submitMessage}>\n\n              <input type=\"text\" value={this.state.chatMessage} onChange={this.handleChange} />\n            </form>\n              {this.state.emojiPicker === false ? \n              <button onClick={this.openEmoji} > ☺ </button> : \n             <div onMouseLeave= {this.openEmoji}> <Picker className=\"emoji-picker\" onEmojiClick={this.selectEmoji} /> </div>}\n\n            <Giphy useGiphy={this.useGiphy}/>\n            <ul>\n                {messages}\n            </ul>\n            <UserList users={users}/>\n          </div>\n        ) : null}\n      </div>\n    )\n  }\n\n}\n\n\nexport default ChatBox;","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/user_list.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/search_dropdown.jsx",["189","190","191","192","193"],"import React from 'react';\nimport {connect} from 'react-redux';\n\nclass SearchBarDropdown extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.objectifiedMessages = this.objectifiedMessages.bind(this);\n    }\n    \n    \n    objectifiedMessages(obj){//get an object with roomJoined's title as the key and each room's messages as values\n        const messageArr = [];\n        Object.entries(obj).forEach(room => {\n            const newObj = {};\n            //  \n            newObj[room[1].title]=room[1].messages.map(m=>(m.message));\n            messageArr.push(newObj);\n        });\n        return messageArr.join('Þ');\n    };\n\n\n    render() {\n        const {roomsJoined, allRooms, roomsAvailable, searchInput} = this.props;\n        const roomObj = this.objectifiedMessages(roomsJoined);  \n        //[{Dave's Room #1: [\"hello Dave?\", \"Hi Dave.\", \"who am i?\"...}, {yoyo: [\"kjkjk\", \"what up homey?\", \"just chilling \"...}...]\n        //[{Dave's Room #1: [{[0, 11, 0]:\"hello Dave?\"}, {[starting index, ending index, object index=1]: \"Hi Dave.\"}, \"who am i?\"...}\n        //find character in string and use index to find its position in the above object \n        //Royer-Moore should return index positions like [13, 75, 12]\n        //iterate the result and find the range in each message's key\n\n        //or\n\n        //seperate each message by 'Þ'\n        //use the Royer-Moore algorithm\n            //count the 'Þ' to get the index, and use the index to find the corresponding messages in the array below\n        //roomObj: [{Dave's Room #1: [\"hello Dave?\", \"Hi Dave.\", \"who am i?\"...]}...]\n         \n        return (\n            <div>\n                caonima\n            </div>\n        )\n                    \n        \n        \n    }  \n};\n\n\n\nexport default (SearchBarDropdown);","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/giphy/giphy_container.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/giphy/giphy.jsx",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/message_container.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/message.jsx",["194"],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/edit_message_form_container.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/edit_message_form.jsx",[],{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","severity":1,"message":"200","line":3,"column":18,"nodeType":"201","messageId":"202","endLine":3,"endColumn":23},{"ruleId":"203","severity":1,"message":"204","line":10,"column":1,"nodeType":"205","endLine":32,"endColumn":2},{"ruleId":"199","severity":1,"message":"206","line":1,"column":77,"nodeType":"201","messageId":"202","endLine":1,"endColumn":89},{"ruleId":"199","severity":1,"message":"207","line":1,"column":91,"nodeType":"201","messageId":"202","endLine":1,"endColumn":104},{"ruleId":"199","severity":1,"message":"208","line":1,"column":10,"nodeType":"201","messageId":"202","endLine":1,"endColumn":22},{"ruleId":"199","severity":1,"message":"209","line":4,"column":9,"nodeType":"201","messageId":"202","endLine":4,"endColumn":17},{"ruleId":"199","severity":1,"message":"210","line":5,"column":10,"nodeType":"201","messageId":"202","endLine":5,"endColumn":15},{"ruleId":"199","severity":1,"message":"209","line":3,"column":9,"nodeType":"201","messageId":"202","endLine":3,"endColumn":17},{"ruleId":"211","severity":1,"message":"212","line":68,"column":37,"nodeType":"213","messageId":"214","endLine":68,"endColumn":39},{"ruleId":"199","severity":1,"message":"206","line":2,"column":9,"nodeType":"201","messageId":"202","endLine":2,"endColumn":21},{"ruleId":"199","severity":1,"message":"215","line":2,"column":8,"nodeType":"201","messageId":"202","endLine":2,"endColumn":10},{"ruleId":"199","severity":1,"message":"216","line":2,"column":9,"nodeType":"201","messageId":"202","endLine":2,"endColumn":16},{"ruleId":"199","severity":1,"message":"217","line":25,"column":29,"nodeType":"201","messageId":"202","endLine":25,"endColumn":37},{"ruleId":"199","severity":1,"message":"218","line":25,"column":39,"nodeType":"201","messageId":"202","endLine":25,"endColumn":53},{"ruleId":"199","severity":1,"message":"219","line":25,"column":55,"nodeType":"201","messageId":"202","endLine":25,"endColumn":66},{"ruleId":"199","severity":1,"message":"220","line":26,"column":15,"nodeType":"201","messageId":"202","endLine":26,"endColumn":22},{"ruleId":"221","severity":1,"message":"222","line":40,"column":55,"nodeType":"223","endLine":40,"endColumn":113},"no-native-reassign",["224"],"no-negated-in-lhs",["225"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'getRoomUsers' is defined but never used.","'leaveRoomUtil' is defined but never used.","'authenticate' is defined but never used.","'Redirect' is defined but never used.","'login' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'io' is defined but never used.","'connect' is defined but never used.","'allRooms' is assigned a value but never used.","'roomsAvailable' is assigned a value but never used.","'searchInput' is assigned a value but never used.","'roomObj' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]