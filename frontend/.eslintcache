[{"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/index.js":"1","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/session_api_util.js":"2","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/store/store.js":"3","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/root.js":"4","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/room_api_util.js":"5","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/giphy_api_util.js":"6","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/actions/session_actions.js":"7","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/app.js":"8","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/root_reducer.js":"9","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/route_util.js":"10","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/session_reducer.js":"11","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/messages_reducer.js":"12","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/modal_reducer.js":"13","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/errors_reducer.js":"14","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/main/main_page.js":"15","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/dashboard_container.js":"16","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/chat_box_container.js":"17","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/splash/splash_page_container.js":"18","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/rooms_reducer.js":"19","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/modal/modal.jsx":"20","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/actions/message_actions.js":"21","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/actions/room_actions.js":"22","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/actions/modal_actions.js":"23","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/session_errors_reducer.js":"24","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/splash/splash_page.jsx":"25","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/chat_box.jsx":"26","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/dashboard.jsx":"27","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/message_api_util.js":"28","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/session/signup_form_container.js":"29","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/session/login_form_container.js":"30","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/new_room_form/new_room_form_container.js":"31","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/user_list.js":"32","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/data_share.js":"33","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/side_bar_container.js":"34","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/message_container.js":"35","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/giphy/giphy.jsx":"36","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/session/session_form.js":"37","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/new_room_form/new_room_form.jsx":"38","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/message.jsx":"39","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/side_bar.jsx":"40","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/replies_container.js":"41","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/edit_message_form_container.js":"42","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/replies.jsx":"43","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/search_dropdown.jsx":"44","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/edit_message_form.jsx":"45","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/edit_reply_form.jsx":"46"},{"size":1901,"mtime":1611763313924,"results":"47","hashOfConfig":"48"},{"size":550,"mtime":1611763313929,"results":"49","hashOfConfig":"48"},{"size":507,"mtime":1609373490691,"results":"50","hashOfConfig":"48"},{"size":286,"mtime":1609373490691,"results":"51","hashOfConfig":"48"},{"size":1120,"mtime":1611763313929,"results":"52","hashOfConfig":"48"},{"size":113,"mtime":1609168078036,"results":"53","hashOfConfig":"48"},{"size":2358,"mtime":1611788071057,"results":"54","hashOfConfig":"48"},{"size":728,"mtime":1611763313915,"results":"55","hashOfConfig":"48"},{"size":361,"mtime":1611763313926,"results":"56","hashOfConfig":"48"},{"size":1025,"mtime":1611788071071,"results":"57","hashOfConfig":"48"},{"size":744,"mtime":1611788071068,"results":"58","hashOfConfig":"48"},{"size":1779,"mtime":1611763313925,"results":"59","hashOfConfig":"48"},{"size":282,"mtime":1611763313925,"results":"60","hashOfConfig":"48"},{"size":172,"mtime":1606838017480,"results":"61","hashOfConfig":"48"},{"size":258,"mtime":1609786510829,"results":"62","hashOfConfig":"48"},{"size":1024,"mtime":1611788071062,"results":"63","hashOfConfig":"48"},{"size":854,"mtime":1611763313916,"results":"64","hashOfConfig":"48"},{"size":610,"mtime":1611788071067,"results":"65","hashOfConfig":"48"},{"size":2531,"mtime":1611763313925,"results":"66","hashOfConfig":"48"},{"size":1417,"mtime":1612049960832,"results":"67","hashOfConfig":"48"},{"size":1069,"mtime":1609779048130,"results":"68","hashOfConfig":"48"},{"size":2192,"mtime":1611763313914,"results":"69","hashOfConfig":"48"},{"size":245,"mtime":1611766788968,"results":"70","hashOfConfig":"48"},{"size":429,"mtime":1606838017481,"results":"71","hashOfConfig":"48"},{"size":1020,"mtime":1611968662335,"results":"72","hashOfConfig":"48"},{"size":7085,"mtime":1612049960828,"results":"73","hashOfConfig":"48"},{"size":8272,"mtime":1611968662328,"results":"74","hashOfConfig":"48"},{"size":302,"mtime":1608063756134,"results":"75","hashOfConfig":"48"},{"size":724,"mtime":1611968662334,"results":"76","hashOfConfig":"48"},{"size":680,"mtime":1611968662334,"results":"77","hashOfConfig":"48"},{"size":511,"mtime":1611968662330,"results":"78","hashOfConfig":"48"},{"size":517,"mtime":1611788071064,"results":"79","hashOfConfig":"48"},{"size":375,"mtime":1611763313917,"results":"80","hashOfConfig":"48"},{"size":1320,"mtime":1611968662332,"results":"81","hashOfConfig":"48"},{"size":680,"mtime":1611763313921,"results":"82","hashOfConfig":"48"},{"size":2697,"mtime":1609779048131,"results":"83","hashOfConfig":"48"},{"size":3800,"mtime":1611788071066,"results":"84","hashOfConfig":"48"},{"size":1554,"mtime":1611968662329,"results":"85","hashOfConfig":"48"},{"size":2573,"mtime":1612049960831,"results":"86","hashOfConfig":"48"},{"size":7902,"mtime":1612049960829,"results":"87","hashOfConfig":"48"},{"size":562,"mtime":1609786510833,"results":"88","hashOfConfig":"48"},{"size":579,"mtime":1611763313920,"results":"89","hashOfConfig":"48"},{"size":6761,"mtime":1612049960831,"results":"90","hashOfConfig":"48"},{"size":14397,"mtime":1611968662331,"results":"91","hashOfConfig":"48"},{"size":1938,"mtime":1612049960830,"results":"92","hashOfConfig":"48"},{"size":2362,"mtime":1609800602580,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1iwtt0",{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"147"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"147"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/index.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/session_api_util.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/store/store.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/root.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/room_api_util.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/giphy_api_util.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/actions/session_actions.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/app.js",["191","192","193"],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/root_reducer.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/route_util.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/session_reducer.js",["194"],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/messages_reducer.js",["195"],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/modal_reducer.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/errors_reducer.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/main/main_page.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/dashboard_container.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/chat_box_container.js",["196","197","198","199","200","201","202"],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/splash/splash_page_container.js",["203"],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/rooms_reducer.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/modal/modal.jsx",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/actions/message_actions.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/actions/room_actions.js",["204","205","206","207"],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/actions/modal_actions.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/session_errors_reducer.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/splash/splash_page.jsx",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/chat_box.jsx",["208","209"],"import React from \"react\"\nimport io from \"socket.io-client\";\nimport moment from \"moment\";\nimport UserList  from './user_list.js';\nimport Picker from 'emoji-picker-react';\nimport Giphy from \"../giphy/giphy\";\nimport Message from '../message/message_container';\nimport {switches} from './data_share'\nimport ClickOutHandler from 'react-onclickout';\n\nclass ChatBox extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      chatMessage: \"\",\n      open: true, //null\n      openOrClose: 'close',\n      emojiPicker: false,\n      userList: \"close\"\n    }\n\n    // \n\n    this.toggle = this.toggle.bind(this);\n    this.openUserList = this.openUserList.bind(this);\n    this.closeUserList = this.closeUserList.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.submitMessage = this.submitMessage.bind(this);\n    this.openEmoji = this.openEmoji.bind(this);\n    this.selectEmoji = this.selectEmoji.bind(this);\n    this.useGiphy = this.useGiphy.bind(this);\n    this.deleteRoom = this.deleteRoom.bind(this);\n    this.componentRefresh = this.componentRefresh.bind(this);\n  }\n\n\n  componentDidMount(){\n    let roomId = this.props.room._id;\n\n    this.props.socket.on(`MTC_${roomId}`, msg =>{\n       //this message has been saved to the database, now need to update redux and components\n      console.log(msg);\n       \n    // ;\n      let newMessage = {\n        id: msg._id,\n        message: msg.message,\n        createdAt: msg.createdAt,\n        updatedAt: msg.updatedAt,\n        room: msg.room,\n        sender: msg.sender,\n        username: msg.username,\n        replies: msg.replies\n      }\n      this.props.afterMessageSent(newMessage);      \n    });\n\n    \n    this.subscription = switches.receiveOpen().subscribe(roomTitle=>{\n      if(roomTitle === this.props.room.title){ //send an array or object with information about the room and open to true\n        this.setState({open: true});//change the open directly but has a logic to determine it is the right room\n      } \n    });\n    \n    if(this.props.room.closedFor.includes(this.props.user.email)){\n      this.setState({open: false})\n    } else {\n      this.setState({open: true})\n    }\n\n    window.addEventListener('beforeunload', this.componentRefresh(this.props))\n     \n  };\n\n  componentRefresh(props){\n    // let user = this.props.user.username;\n    let email = props.user.email;\n    let id = props.user.id;\n     \n    if(this.state.open === false){\n       \n      props.editClosedFor(props.room._id, email,  id)\n    }\n  };\n\n  componentWillUnmount() {\n    this.subscription.unsubscribe();\n    const props = this.props;\n    this.componentRefresh(props);\n    window.removeEventListener('beforeunload', this.componentRefresh);\n\n\n  };   \n\n  handleChange(e){\n    this.setState({\n      chatMessage: e.currentTarget.value,\n    })\n  }\n\n  selectEmoji(e, emojiObject){\n    let newMessage = this.state.chatMessage + emojiObject.emoji;\n    this.setState({\n      chatMessage: newMessage\n    })\n  }\n\n  openEmoji(){\n    this.state.emojiPicker === true ? \n      this.setState({emojiPicker: false}) :\n      this.setState({emojiPicker: true})\n  }\n\n  submitMessage(e) {\n    if (e) { e.preventDefault()}\n\n    let username = this.props.user.username;\n    let userId = this.props.user.id;\n    let room = this.props.room;\n\n    let timestamp = moment().format('LT');\n    let message = this.state.chatMessage;\n     \n    this.props.socket.emit(\"Create Message\", {\n      message,\n      timestamp,\n      username,\n      userId,\n      room\n    })\n\n    this.setState({\n      chatMessage: \"\",\n    })\n\n    const ele = document.getElementById(`chatbox-item-${room.title}`);\n    ele.scrollTop = ele.scrollHeight;\n\n\n  }\n\n  toggle(){\n    this.state.open ? \n    this.setState({open: false, openOrClose: 'open'}) : \n    this.setState({open: true, openOrClose: 'close'});\n  }\n\n  openUserList() {\n      this.setState({ userList: 'open' }) \n  }\n\n  closeUserList() {\n      this.setState({ userList: 'close' })\n  }\n\n  useGiphy(e){\n    this.props.socket.emit(\"Create Message\", {\n      message: `${e.target.src}`,\n      timestamp: moment().format('LT'), \n      username: this.props.user.username, \n      userId: this.props.user.id,\n      room: this.props.room,\n    })\n  }\n\n  deleteRoom(){\n    let response = window.confirm(`Are you sure you want to delete the room: \"${this.props.room.title}\"`)\n    if(response){\n      this.props.deleteRoom(this.props.room);\n    }\n  }\n\n  render() {\n    \n    let messages = this.props.room.messages.map((msg, index) => (<Message socket={this.props.socket} id={`msg-${this.props.room.title}-${index}`} msg={msg}/>)) || [];\n    let users = this.props.room.users || [];\n\n    return (\n      <div className={(this.state.open) ? 'open' : 'close'}> \n        {(this.state.open ) ? (\n          <div className=\"chatbox-container\" id={`chatbox-item-${this.props.room.title}`}>\n            <div className=\"chatbox-header\">\n              <h1>{this.props.room.title}</h1>\n              <div className=\"chatbox-header-icons\">\n                <div className=\"leave-room-icon\" onClick={this.props.leaveRoom} id={this.props.roomId}>\n                  <i className=\"fas fa-times\" ></i>\n                  {/* <button className=\"toggle-room\" onClick={this.toggle}>{this.state.openOrClose}</button> */}\n                </div>\n              </div>\n            </div>\n            <div className=\"message-ul\">\n              <ul>{messages}</ul>\n            </div>\n            <div className='input-container' >\n              {\n                this.props.user.id === this.props.room.admin ? (\n                  <button onClick={this.deleteRoom}>Delete Room</button>\n                )\n                :              \n                (null)\n              }\n              {\n                this.state.emojiPicker === false ? \n                <button onClick={this.openEmoji} > ☺ </button> : \n                <div onMouseLeave= {this.openEmoji}> <Picker className=\"emoji-picker\" onEmojiClick={this.selectEmoji} /> </div>\n              }\n              <Giphy useGiphy={this.useGiphy} roomTitle={this.props.room.title}/>\n              <form className=\"message-input\" onSubmit={this.submitMessage}>\n                <input type=\"text\" value={this.state.chatMessage} onChange={this.handleChange} />\n                <button type=\"submit\">Send</button>\n              </form>\n            </div>\n            <ClickOutHandler onClickOut={this.closeUserList}> \n              {/* <p onClick={this.toggleUserList} >List of current users in this room</p> */}\n              \n              <div className=\"chatboxUsers\" >\n                <p  onClick={this.openUserList} >Members</p>\n                \n                { this.state.userList === \"open\" ?\n                <ul className=\"chatboxUl\"> \n                  {users.map(user => {\n                  return (\n                   <li>\n                    {user.username}\n                  </li>\n                  )})}\n                </ul>\n\n                  : \"\"}\n              </div>\n            </ClickOutHandler>\n          </div>\n        ) : null}\n      </div>\n    )\n  }\n\n}\n\n\nexport default ChatBox;",["210","211"],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/dashboard.jsx",["212","213"],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/message_api_util.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/session/signup_form_container.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/session/login_form_container.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/new_room_form/new_room_form_container.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/user_list.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/data_share.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/side_bar_container.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/message_container.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/giphy/giphy.jsx",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/session/session_form.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/new_room_form/new_room_form.jsx",["214"],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/message.jsx",["215","216","217"],"import React, { Component } from 'react';\nimport { debug } from 'request';\nimport EditMessageForm from './edit_message_form_container.js';\nimport Replies from './replies.jsx';\nimport RepliesForm from './replies_container.js'\nexport default class Message extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      repliesOpen: false\n    }\n    this.editMessage = this.editMessage.bind(this);\n    this.deleteMessage = this.deleteMessage.bind(this);\n    this.deleteGif = this.deleteGif.bind(this);\n    this.toggleReplies = this.toggleReplies.bind(this)\n  };\n\n  componentDidMount(){\n    this.props.socket.on(\"Message Edited\", this.editMessage);\n    this.props.socket.on(\"Message Deleted\", this.deleteMessage);\n  };\n\n  editMessage(msg){\n     \n    if (msg._id === this.props.msg.id){\n      this.props.editMessage(msg);\n    }\n  };\n\n  deleteMessage(msg){\n    if (msg._id === this.props.msg.id) {\n      this.props.deleteMessage(msg);\n    }\n  };\n\n  deleteGif(){\n    let response = window.confirm(`Are you sure you want to delete your Gif?`);\n    if (response) {\n      this.props.socket.emit(\"Delete Message\", this.props.msg);\n    }\n  };\n\n  toggleReplies(){\n    this.state.repliesOpen === true ? \n    this.setState({repliesOpen: false}) : this.setState({repliesOpen: true})\n  };\n  \n  render() {\n    //show edit button only if current user was the author of this message\n    //open edit message textfield form if button is clicked\n    //use socket to edit database and all connected users' message\n    //update redux state (room and messages)\n    let msg = this.props.msg;\n    let author = false;\n  \n    if (msg.sender === this.props.user.id){\n       author = true;\n     }\n    \n    let message;\n    if (msg.message.includes('giphy')){\n      message = <li key={msg.id}>{msg.username} says: <img className=\"chat-img\" src={msg.message} alt=\"image\" />\n        {author && \n          <button onClick={this.deleteGif}>Delete Gif</button>\n        }\n      </li>\n    } else {\n      message = \n      \n      <li className=\"message-li\" key={msg.id} id={this.props.id}>\n        <div className=\"message-li-text\">\n          <h6>{msg.username}:</h6>\n          <p>{msg.message}</p>\n        </div>\n        <div className=\"message-li-buttons\">\n          {\n            author && <EditMessageForm socket={this.props.socket} msg={msg}/> \n          }       \n          <RepliesForm socket={this.props.socket} msg={msg} message={msg.message}/>\n        </div>\n      </li>\n    }\n\n   \n    return (\n      <div className=\"message-container\">\n        {message}\n      </div>\n   \n    )\n  }\n}\n","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/side_bar.jsx",["218","219","220","221","222","223","224","225","226"],"import React from 'react';\nimport {getRoomUsers} from '../../util/room_api_util'\nimport SearchBarDropdown from './search_dropdown'\nimport { getAvailableRooms, getRooms } from '../../util/room_api_util';\nimport {getUser } from \"../../util/session_api_util\"\nimport { updateRoom } from '../../actions/room_actions';\nimport ClickOutHandler from 'react-onclickout';\nimport NewRoomForm from './new_room_form/new_room_form_container';\n\nclass Sidebar extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            show_rooms: false,\n            searchInput: '',\n            dropDown: false,\n            roomsAvailable: [],\n            roomsJoined: [],\n            all: [],\n            rooms: this.props.rooms,\n            errors: {}\n        };\n        this.logoutUser = this.logoutUser.bind(this);\n        this.handleSearchInput = this.handleSearchInput.bind(this);\n        this.handleDropDown = this.handleDropDown.bind(this);\n        this.displayRooms = this.displayRooms.bind(this);\n        this.hideRooms = this.hideRooms.bind(this);\n        this.toggleRooms = this.toggleRooms.bind(this);\n    }\n\n    logoutUser(e) {\n        e.preventDefault();\n        this.props.logout();\n    }\n\n    handleSearchInput(e){\n        this.setState({searchInput: e.currentTarget.value, dropDown: true});\n    };\n\n    handleDropDown(){\n        this.setState({dropDown: false});\n    };\n\n    displayRooms(){\n        this.state.show_rooms === true ? \n        this.setState({show_rooms: false}) : this.setState({show_rooms: true});\n    };\n\n    hideRooms(){\n        this.setState({show_rooms:false});\n    };\n\n\n    toggleRooms(e){\n        //   \n        // let title = e.target.innerText;\n        let user = this.props.user.username;\n        let email = this.props.user.email;\n        let id = this.props.user.id;\n        // e.target.id \n        this.props.editClosedFor(e.target.id, email,  id)\n        .then(rooms => {\n              ;\n            this.setState({rooms: this.props.rooms},this.render)\n        })\n       \n    }\n\n    componentDidMount(props){\n        //   ;\n        this.setState({ rooms: this.props.rooms })\n    }\n    componentDidUpdate(prevprops, prevState){\n        //   ;\n        if( this.props.rooms != prevprops.rooms){\n            this.setState({rooms: this.props.rooms}, this.render)\n            //   ;\n            // this.render()\n        }\n    //    this.setState({ rooms: this.props.rooms })\n        \n        // Object.keys(this.props.rooms).forEach(roomId => {\n        //       ;\n        //      console.log(prevprops.rooms[roomId]) \n\n        //     })\n    }\n\n    render(){\n        let roomsAvailable = this.props.roomsAvailable.data || [];\n        //  \n        let rooms = this.state.rooms || this.props.rooms\n        //   ;\n        let roomIds = [];\n        //   myRooms = this.state.myRooms;\n        console.log(\"Dashboard rendered\");\n        Object.keys(rooms).forEach(key => {\n            roomIds.push(rooms[key]._id)})\n            \n        let extras = {\n            createNewRoom: this.props.createNewRoom,\n            socket: this.props.socket,\n        }\n        \n        return(\n            <div>\n            <div className='sidebar-container'>\n                <div className=\"sidebar-left\">\n                    <h1>PILLAR</h1>\n                </div>\n            \n                <div className=\"sidebar-right\">\n                        <div className='search-bar-container'>\n                            <input \n                                className='search-bar' \n                                type='text'\n                                onChange={this.handleSearchInput}\n                                onKeyDown={this.handleDropDown}\n                                value={this.state.searchInput}\n                                placeholder='Search'\n                            />\n                            {this.state.dropDown && this.state.searchInput.length !== 0 ? \n                            <ClickOutHandler onClickOut={this.handleDropDown}> \n                                <SearchBarDropdown className='search-bar-dropdown-container'\n                                    handleDropDown={this.handleDropDown}\n                                    searchInput={this.state.searchInput} \n                                    allRooms={this.props.allRooms}\n                                    roomsAvailable={this.props.roomsAvailable}\n                                    user={this.props.user}\n                                    editClosedFor= {this.props.editClosedFor}\n                                    />\n                            </ClickOutHandler>\n                                : null\n                            }\n                        </div>\n                        <div className=\"logout-button create-room\" \n                            onClick={() => this.props.openModal({\n                                modal: 'create room',\n                                extras: extras\n                            })}>\n                        <div>Create New Room</div>\n                    </div>\n                    <div className=\"allrooms\">\n                        <div className=\"logout-button available-chatrooms\" onClick={()=>this.displayRooms()}>Available Rooms</div>\n                    \n                        <div className=\"allroomsul\" onMouseLeave={this.hideRooms}>\n                            {this.state && this.state.show_rooms === true ? \n                            roomsAvailable.map(room => {\n                            return (\n                                <li className=\"room-list\" id={room._id} key={room._id}>\n                                    <p>\n                                        Title: {room.title}\n                                    </p>\n                                    <p>\n                                        Number of current users: {room.users.length}\n                                    </p>\n                                    <div className=\"join-room-button-div\">\n                                        <button className=\"join-room-button\" id={room._id} onClick={this.props.joinRoom}>Join Room</button>\n                                    </div>\n                                </li>\n                            )\n                        }) : null}\n                        </div>\n                    </div>\n                \n                    \n                        <div className=\"logout-button\" onClick={this.logoutUser}>\n                        <div >Logout</div>\n                    </div>\n                    <br/>\n                    \n                </div>\n            </div>\n            <div className=\"myroomsdiv\">\n                    {/* <h2>My Rooms</h2> */}\n                    <ul className=\"myrooms\">\n                        {Object.keys(this.props.rooms).length > 0 ?\n\n                            roomIds.map(id => {\n                                //   debugger;\n                                if (id !== undefined) {\n                                    return rooms[id].closedFor.includes(this.props.user.email)\n                                        //   [this.props.user.username] \n                                        ?\n                                        (<li id={rooms[id]._id} onClick={this.toggleRooms}>Open {rooms[id].title}</li>\n                                            // ,<button onClick= { this.toggleRooms }> Open</button>]\n                                        ) :\n                                        (<li id={rooms[id]._id} onClick={this.toggleRooms}> Close {rooms[id].title}</li>\n                                            // <button onClick={this.toggleRooms}> Close</button>]\n                                        )\n                                }\n                            })\n                            : \"\"}\n                    </ul>\n                </div>\n        </div >\n        )\n    }\n};\n\nexport default Sidebar;","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/replies_container.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/edit_message_form_container.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/replies.jsx",["227"],"import React from \"react\"\nimport moment from \"moment\";\nimport Picker from 'emoji-picker-react';\nimport Giphy from \"../giphy/giphy\";\nimport EditReplyForm from './edit_reply_form';\nimport * as cloneDeep from 'lodash/cloneDeep';\nimport {switcheThread} from './../../components/chat/data_share';\n\n\nclass Replies extends React.Component {\n   constructor(props){\n      super(props)\n\n      this.state ={\n         replyBox: false,\n         replyText: \"\",\n         repliesOpen: false,\n         emojiPicker: false,\n      }\n      this.handleReply = this.handleReply.bind(this);\n      this.handleChange = this.handleChange.bind(this);\n      this.submitReply = this.submitReply.bind(this);\n      this.toggleReplies = this.toggleReplies.bind(this)\n      this.openEmoji = this.openEmoji.bind(this);\n      this.selectEmoji = this.selectEmoji.bind(this);\n      this.useGiphy = this.useGiphy.bind(this);\n      this.deleteGifReply = this.deleteGifReply.bind(this);\n\n   };\n\n   componentDidMount(){\n      this.subscription = switcheThread.receiveOpenThread().subscribe(message=>{\n      if(message === this.props.message.message){\n        this.setState({repliesOpen: true});\n      }; \n    })\n   };\n\n   handleReply(e) {\n      this.state.replyBox === false ? \n         (this.props.replies  ?\n           this.setState({ replyBox: true, repliesOpen: true })\n           : \n           this.setState({replyBox: true, repliesOpen: false})\n         ) \n        :\n        this.setState({ replyBox: false, repliesOpen: false })\n\n   }\n   handleChange(e){\n      this.setState({\n         replyText: e.currentTarget.value\n      })\n   };\n\n   submitReply(e){\n      e.preventDefault();\n      let username = this.props.user.username;\n      let userId = this.props.user.id;\n       \n      let room = this.props.room;\n\n      let timestamp = moment().format('LT');\n      let reply = this.state.replyText;\n      let message = this.props.msg.message\n      let id =  this.props.message.id;\n      this.props.socket.emit(\"Edit Message\", {\n         reply,\n         timestamp,\n         username,\n         userId,\n         room,\n         message,\n         id\n      })\n      this.setState({\n         replyText: \"\",\n         repliesOpen: true,\n      })\n   };\n\n   toggleReplies() {\n      this.state.repliesOpen === true ?\n         this.setState({ repliesOpen: false, replyBox: false })\n          : \n         this.setState({ repliesOpen: true, replyBox: true })\n   };\n\n   selectEmoji(e, emojiObject) {\n      let newMessage = this.state.replyText + emojiObject.emoji;\n      this.setState({\n         replyText: newMessage\n      })\n   };\n\n   openEmoji() {\n      this.state.emojiPicker === true ?\n         this.setState({ emojiPicker: false }) :\n         this.setState({ emojiPicker: true })\n   };\n\n   useGiphy(e) {\n      e.preventDefault();\n      let username = this.props.user.username;\n      let userId = this.props.user.id;\n      let room = this.props.room;\n\n      let timestamp = moment().format('LT');\n      let reply = `${e.target.src}`;\n      let message = this.props.msg.message;\n      let id = this.props.message.id;\n      this.props.socket.emit(\"Edit Message\", {\n         reply,\n         timestamp,\n         username,\n         userId,\n         room,\n         message,\n         id\n      })\n      this.setState({\n         replyText: \"\",\n         repliesOpen: true,\n      })\n   };\n\n   deleteGifReply(e){\n      let response = window.confirm(`Are you sure you want to delete your Gif?`);\n      if (response) {\n         let replies = cloneDeep(this.props.msg.replies);\n         let replyId = e.currentTarget.id;\n          \n         let replyIndex = replies.findIndex(reply => replyId === reply._id);\n         replies.splice(replyIndex, 1);\n\n         this.props.socket.emit(\"Edit Message Reply\", {\n            message: this.props.msg,\n            replies: replies,\n         });\n      }\n   }\n\n\n   render(){\n      let msg = this.props.msg;\n\n      return(\n         <div>\n           \n           \n            {msg.replies && this.state.repliesOpen === true ?\n               (\n\n                  [msg.replies.map(reply => {\n                     // return (\n                     if (reply.reply.includes(\"giphy\")){\n                        return (\n                           <li key={reply._id} className=\"reply\" >\n                              {reply.username} says: <img className=\"chat-img\" src={reply.reply} alt=\"image\" />\n                              {reply.userId === this.props.user.id && \n                                 <button onClick={this.deleteGifReply} id={reply._id}>Delete Gif</button>\n                              }\n                           </li>\n                        )\n                     }\n                     else{\n                        return (\n                           <li key={reply._id} className=\"reply\" id={`msg-reply-${reply.reply}`}>\n                              {reply.username} says: {reply.reply}\n                              {reply.userId === this.props.user.id &&\n                                 <EditReplyForm socket={this.props.socket} msg={msg} replyId={reply._id}/>\n                              }\n                           </li>\n                        )\n                     }\n                  }),\n\n                     <button key=\"button\" className=\"replies-div\" onClick={this.toggleReplies}> Cancel</button> \n                  ])\n               : (msg.replies.length > 0 ? \n                  (msg.replies.length > 1 ?\n                      <button className=\"replies-div\" onClick={this.toggleReplies}> {msg.replies.length} replies</button>\n                      :\n                     <button className=\"replies-div\" onClick={this.toggleReplies}> {msg.replies.length} reply</button>\n                  )\n                  : <button className=\"replies-div\" onClick={this.toggleReplies}> Reply</button>)\n            }\n            {this.state.replyBox === false ?\n            // (<button onClick={this.handleReply}> Add Reply</button>)\n            \"\"\n            :\n            (\n               <div>\n                  <form onSubmit={this.submitReply}>\n                    \n                     <input type=\"text\" onChange={this.handleChange} value={this.state.replyText}/>\n                        \n                  </form>\n                     {this.state.emojiPicker === false ?\n                        <button onClick={this.openEmoji} > ☺ </button> :\n                        <div onMouseLeave={this.openEmoji}> <Picker className=\"emoji-picker\" onEmojiClick={this.selectEmoji} /> </div>}\n                     <Giphy useGiphy={this.useGiphy} roomTitle={this.props.room.title} />\n                     {/* <button onClick={this.handleReply}> Cancel</button> */}\n               </div>\n            )}\n            \n         </div>\n      )\n   }\n}\n\nexport default Replies;","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/search_dropdown.jsx",["228","229"],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/edit_message_form.jsx",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/edit_reply_form.jsx",[],{"ruleId":"230","severity":1,"message":"231","line":3,"column":18,"nodeType":"232","messageId":"233","endLine":3,"endColumn":23},{"ruleId":"230","severity":1,"message":"234","line":5,"column":8,"nodeType":"232","messageId":"233","endLine":5,"endColumn":16},{"ruleId":"230","severity":1,"message":"235","line":6,"column":8,"nodeType":"232","messageId":"233","endLine":6,"endColumn":15},{"ruleId":"236","severity":1,"message":"237","line":10,"column":1,"nodeType":"238","endLine":36,"endColumn":2},{"ruleId":"230","severity":1,"message":"239","line":1,"column":10,"nodeType":"232","messageId":"233","endLine":1,"endColumn":15},{"ruleId":"230","severity":1,"message":"240","line":4,"column":10,"nodeType":"232","messageId":"233","endLine":4,"endColumn":19},{"ruleId":"230","severity":1,"message":"241","line":4,"column":21,"nodeType":"232","messageId":"233","endLine":4,"endColumn":31},{"ruleId":"230","severity":1,"message":"242","line":4,"column":33,"nodeType":"232","messageId":"233","endLine":4,"endColumn":43},{"ruleId":"230","severity":1,"message":"243","line":4,"column":45,"nodeType":"232","messageId":"233","endLine":4,"endColumn":55},{"ruleId":"230","severity":1,"message":"244","line":4,"column":57,"nodeType":"232","messageId":"233","endLine":4,"endColumn":65},{"ruleId":"230","severity":1,"message":"245","line":4,"column":67,"nodeType":"232","messageId":"233","endLine":4,"endColumn":76},{"ruleId":"230","severity":1,"message":"246","line":4,"column":78,"nodeType":"232","messageId":"233","endLine":4,"endColumn":92},{"ruleId":"230","severity":1,"message":"247","line":2,"column":21,"nodeType":"232","messageId":"233","endLine":2,"endColumn":31},{"ruleId":"230","severity":1,"message":"248","line":1,"column":29,"nodeType":"232","messageId":"233","endLine":1,"endColumn":43},{"ruleId":"230","severity":1,"message":"249","line":1,"column":61,"nodeType":"232","messageId":"233","endLine":1,"endColumn":75},{"ruleId":"230","severity":1,"message":"250","line":1,"column":77,"nodeType":"232","messageId":"233","endLine":1,"endColumn":89},{"ruleId":"230","severity":1,"message":"251","line":1,"column":91,"nodeType":"232","messageId":"233","endLine":1,"endColumn":104},{"ruleId":"230","severity":1,"message":"252","line":2,"column":8,"nodeType":"232","messageId":"233","endLine":2,"endColumn":10},{"ruleId":"230","severity":1,"message":"253","line":4,"column":8,"nodeType":"232","messageId":"233","endLine":4,"endColumn":16},{"ruleId":"254","replacedBy":"255"},{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","severity":1,"message":"259","line":71,"column":37,"nodeType":"260","messageId":"261","endLine":71,"endColumn":39},{"ruleId":"262","severity":1,"message":"263","line":270,"column":33,"nodeType":"264","messageId":"265","endLine":270,"endColumn":35},{"ruleId":"230","severity":1,"message":"266","line":2,"column":8,"nodeType":"232","messageId":"233","endLine":2,"endColumn":13},{"ruleId":"230","severity":1,"message":"239","line":2,"column":10,"nodeType":"232","messageId":"233","endLine":2,"endColumn":15},{"ruleId":"230","severity":1,"message":"267","line":4,"column":8,"nodeType":"232","messageId":"233","endLine":4,"endColumn":15},{"ruleId":"268","severity":1,"message":"269","line":63,"column":55,"nodeType":"270","endLine":63,"endColumn":113},{"ruleId":"230","severity":1,"message":"250","line":2,"column":9,"nodeType":"232","messageId":"233","endLine":2,"endColumn":21},{"ruleId":"230","severity":1,"message":"271","line":4,"column":10,"nodeType":"232","messageId":"233","endLine":4,"endColumn":27},{"ruleId":"230","severity":1,"message":"272","line":4,"column":29,"nodeType":"232","messageId":"233","endLine":4,"endColumn":37},{"ruleId":"230","severity":1,"message":"273","line":5,"column":9,"nodeType":"232","messageId":"233","endLine":5,"endColumn":16},{"ruleId":"230","severity":1,"message":"274","line":6,"column":10,"nodeType":"232","messageId":"233","endLine":6,"endColumn":20},{"ruleId":"230","severity":1,"message":"275","line":8,"column":8,"nodeType":"232","messageId":"233","endLine":8,"endColumn":19},{"ruleId":"230","severity":1,"message":"276","line":57,"column":13,"nodeType":"232","messageId":"233","endLine":57,"endColumn":17},{"ruleId":"258","severity":1,"message":"259","line":75,"column":30,"nodeType":"260","messageId":"261","endLine":75,"endColumn":32},{"ruleId":"262","severity":1,"message":"263","line":188,"column":44,"nodeType":"264","messageId":"265","endLine":188,"endColumn":46},{"ruleId":"268","severity":1,"message":"269","line":159,"column":54,"nodeType":"270","endLine":159,"endColumn":112},{"ruleId":"258","severity":1,"message":"259","line":116,"column":46,"nodeType":"260","messageId":"261","endLine":116,"endColumn":48},{"ruleId":"258","severity":1,"message":"259","line":150,"column":54,"nodeType":"260","messageId":"261","endLine":150,"endColumn":56},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'MainPage' is defined but never used.","'ChatBox' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'debug' is defined but never used.","'fetchRoom' is defined but never used.","'fetchRooms' is defined but never used.","'createRoom' is defined but never used.","'removeRoom' is defined but never used.","'editRoom' is defined but never used.","'leaveRoom' is defined but never used.","'updateUserList' is defined but never used.","'closeModal' is defined but never used.","'deleteRoomUtil' is defined but never used.","'createRoomUtil' is defined but never used.","'getRoomUsers' is defined but never used.","'leaveRoomUtil' is defined but never used.","'io' is defined but never used.","'UserList' is defined but never used.","no-native-reassign",["277"],"no-negated-in-lhs",["278"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Modal' is defined but never used.","'Replies' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'getAvailableRooms' is defined but never used.","'getRooms' is defined but never used.","'getUser' is defined but never used.","'updateRoom' is defined but never used.","'NewRoomForm' is defined but never used.","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]