[{"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/index.js":"1","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/store/store.js":"2","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/session_api_util.js":"3","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/room_api_util.js":"4","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/root.js":"5","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/actions/session_actions.js":"6","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/giphy_api_util.js":"7","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/app.js":"8","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/root_reducer.js":"9","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/route_util.js":"10","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/session_reducer.js":"11","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/messages_reducer.js":"12","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/modal_reducer.js":"13","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/errors_reducer.js":"14","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/chat_box_container.js":"15","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/main/main_page.js":"16","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/dashboard_container.js":"17","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/splash/splash_page_container.js":"18","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/rooms_reducer.js":"19","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/actions/room_actions.js":"20","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/actions/message_actions.js":"21","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/actions/modal_actions.js":"22","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/session_errors_reducer.js":"23","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/modal/modal.jsx":"24","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/splash/splash_page.jsx":"25","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/dashboard.jsx":"26","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/chat_box.jsx":"27","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/message_api_util.js":"28","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/user_list.js":"29","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/session/login_form_container.js":"30","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/session/signup_form_container.js":"31","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/new_room_form/new_room_form_container.js":"32","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/side_bar_container.js":"33","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/data_share.js":"34","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/message_container.js":"35","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/giphy/giphy.jsx":"36","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/session/session_form.js":"37","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/new_room_form/new_room_form.jsx":"38","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/side_bar.jsx":"39","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/message.jsx":"40","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/replies_container.js":"41","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/edit_message_form_container.js":"42","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/replies.jsx":"43","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/search_dropdown.jsx":"44","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/edit_message_form.jsx":"45","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/edit_reply_form.jsx":"46","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/chatbox_header_options.jsx":"47"},{"size":1901,"mtime":1611763313924,"results":"48","hashOfConfig":"49"},{"size":507,"mtime":1609373490691,"results":"50","hashOfConfig":"49"},{"size":550,"mtime":1611763313929,"results":"51","hashOfConfig":"49"},{"size":1120,"mtime":1611763313929,"results":"52","hashOfConfig":"49"},{"size":286,"mtime":1609373490691,"results":"53","hashOfConfig":"49"},{"size":2358,"mtime":1611788071057,"results":"54","hashOfConfig":"49"},{"size":113,"mtime":1609168078036,"results":"55","hashOfConfig":"49"},{"size":728,"mtime":1611763313915,"results":"56","hashOfConfig":"49"},{"size":361,"mtime":1611763313926,"results":"57","hashOfConfig":"49"},{"size":1025,"mtime":1611788071071,"results":"58","hashOfConfig":"49"},{"size":744,"mtime":1611788071068,"results":"59","hashOfConfig":"49"},{"size":1779,"mtime":1611763313925,"results":"60","hashOfConfig":"49"},{"size":282,"mtime":1611763313925,"results":"61","hashOfConfig":"49"},{"size":172,"mtime":1606838017480,"results":"62","hashOfConfig":"49"},{"size":854,"mtime":1611763313916,"results":"63","hashOfConfig":"49"},{"size":258,"mtime":1612153430706,"results":"64","hashOfConfig":"49"},{"size":1024,"mtime":1611788071062,"results":"65","hashOfConfig":"49"},{"size":610,"mtime":1611788071067,"results":"66","hashOfConfig":"49"},{"size":2531,"mtime":1611763313925,"results":"67","hashOfConfig":"49"},{"size":2192,"mtime":1611763313914,"results":"68","hashOfConfig":"49"},{"size":1069,"mtime":1609779048130,"results":"69","hashOfConfig":"49"},{"size":245,"mtime":1611766788968,"results":"70","hashOfConfig":"49"},{"size":429,"mtime":1606838017481,"results":"71","hashOfConfig":"49"},{"size":46902,"mtime":1612049996889,"results":"72","hashOfConfig":"49"},{"size":1021,"mtime":1612153430709,"results":"73","hashOfConfig":"49"},{"size":8249,"mtime":1612212883381,"results":"74","hashOfConfig":"49"},{"size":7869,"mtime":1612205528341,"results":"75","hashOfConfig":"49"},{"size":302,"mtime":1608063756134,"results":"76","hashOfConfig":"49"},{"size":508,"mtime":1612106524507,"results":"77","hashOfConfig":"49"},{"size":680,"mtime":1611968662334,"results":"78","hashOfConfig":"49"},{"size":724,"mtime":1611968662334,"results":"79","hashOfConfig":"49"},{"size":511,"mtime":1611968662330,"results":"80","hashOfConfig":"49"},{"size":1320,"mtime":1611968662332,"results":"81","hashOfConfig":"49"},{"size":375,"mtime":1611763313917,"results":"82","hashOfConfig":"49"},{"size":680,"mtime":1611763313921,"results":"83","hashOfConfig":"49"},{"size":2978,"mtime":1612153430703,"results":"84","hashOfConfig":"49"},{"size":3801,"mtime":1612154220047,"results":"85","hashOfConfig":"49"},{"size":1545,"mtime":1612106524505,"results":"86","hashOfConfig":"49"},{"size":8266,"mtime":1612212883382,"results":"87","hashOfConfig":"49"},{"size":2784,"mtime":1612212883385,"results":"88","hashOfConfig":"49"},{"size":562,"mtime":1609786510833,"results":"89","hashOfConfig":"49"},{"size":579,"mtime":1611763313920,"results":"90","hashOfConfig":"49"},{"size":6760,"mtime":1612212883385,"results":"91","hashOfConfig":"49"},{"size":14397,"mtime":1611968662331,"results":"92","hashOfConfig":"49"},{"size":1942,"mtime":1612212883384,"results":"93","hashOfConfig":"49"},{"size":2362,"mtime":1609800602580,"results":"94","hashOfConfig":"49"},{"size":1570,"mtime":1612212883381,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1iwtt0",{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"146"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"146"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"146"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"146"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/index.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/store/store.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/session_api_util.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/room_api_util.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/root.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/actions/session_actions.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/giphy_api_util.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/app.js",["195","196","197"],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/root_reducer.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/route_util.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/session_reducer.js",["198"],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/messages_reducer.js",["199"],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/modal_reducer.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/errors_reducer.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/chat_box_container.js",["200","201","202","203","204","205","206"],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/main/main_page.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/dashboard_container.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/splash/splash_page_container.js",["207"],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/rooms_reducer.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/actions/room_actions.js",["208","209","210","211"],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/actions/message_actions.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/actions/modal_actions.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/reducers/session_errors_reducer.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/modal/modal.jsx",["212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229"],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/splash/splash_page.jsx",[],["230","231"],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/dashboard.jsx",["232","233"],"import React from 'react';\n//import room from '../../../../validation/room';\nimport io from \"socket.io-client\";\nimport ChatBox from './chat_box_container';\nimport Sidebar from './side_bar_container'\nimport { getAvailableRooms, getRooms } from '../../util/room_api_util';\nimport * as cloneDeep from 'lodash/cloneDeep';\nclass DashBoard extends React.Component{\n   constructor(props){\n      super(props);\n      this.socket = io();\n      \n      this.state = {\n         roomsAvailable: [],\n         roomsJoined: [],\n         all: [],\n         deletedRoom: null,\n         myRooms: this.props.user.rooms,\n      }\n      \n      this.createNewRoom = this.createNewRoom.bind(this);\n      this.joinRoom = this.joinRoom.bind(this);\n      this.leaveRoom = this.leaveRoom.bind(this);\n      this.userLeft = this.userLeft.bind(this);\n      this.userJoined = this.userJoined.bind(this);\n      this.deleteRoom = this.deleteRoom.bind(this);\n      this.roomDeleted = this.roomDeleted.bind(this);\n      this.ackDelete = this.ackDelete.bind(this);\n      this.roomCreated = this.roomCreated.bind(this);\n      \n      \n   }\n\n   \n   //component did mount\n   componentDidMount(){\n      \n      this.props.closeModal();\n      this.props.getRooms(this.props.user.id); //this pings the database\n      \n      getRooms(this.props.user.id)\n         .then(rooms => {\n            this.setState({\n               roomsJoined: rooms,\n            })\n         })\n         .then(()=>{\n            getAvailableRooms(this.props.user.id) //this pings the database                                \n            .then(rooms => {\n               this.setState({\n                  roomsAvailable: rooms,\n               })\n            })\n            .then(()=>{\n               this.setState({all: this.state.roomsAvailable.data.concat(this.state.roomsJoined.data)})\n            })\n         })\n      \n      this.socket.on(\"user left\", this.userLeft);\n      this.socket.on(\"user joined\", this.userJoined);\n      this.socket.on(\"room deleted\", this.roomDeleted);\n      this.socket.on(\"room created\", this.roomCreated);\n      // this.socket.on(\"room creation error\", this.addRoomCreationError);\n   }\n\n   \n\n   componentDidUpdate(prevProps){\n      let user = this.props.user.username;\n      let rooms = this.props.rooms;\n      if (Object.keys(rooms).length != Object.keys(prevProps.rooms).length) {\n         \n         this.socket.emit(\"User connected\", { user, rooms });\n         this.props.getRooms(this.props.user.id); \n         \n         \n      getRooms(this.props.user.id)\n         .then(rooms => {\n            this.setState({\n               roomsJoined: rooms,\n            })\n         })\n         .then(()=>{\n            getAvailableRooms(this.props.user.id) //this pings the database                                \n            .then(rooms => {\n               this.setState({\n                  roomsAvailable: rooms,\n               })\n            })\n            .then(()=>{\n               this.setState({all: this.state.roomsAvailable.data.concat(this.state.roomsJoined.data)})\n            })\n         })\n      };\n      // if (this.props.rooms != prevProps) {\n      //    this.render()\n      // }\n   }\n\n   userLeft({ user, room }) { \n      //check if this user belongs to the room\n      let currentRooms = Object.keys(this.props.rooms);\n\n      if (currentRooms.includes(room._id)) {    \n         this.props.updateUserList(room);\n      }\n   }\n\n   userJoined({ user, room }) {\n      //check if this user belongs to the room\n      let currentRooms = Object.keys(this.props.rooms);\n\n      if (currentRooms.includes(room._id)){\n         //reformat the user object added to the room to match existing users\n         room.users.splice(room.users.length - 1, 1);\n         room.users.push({username: user.username, _id: user.id})\n         this.props.updateUserList(room);\n      }\n   }\n   \n   createNewRoom(newRoom){\n      \n      this.socket.emit(\"Create Room\", newRoom);\n      this.setState({\n         newTitle: \"\",\n         errors: []\n      })\n   }\n\n   roomCreated(room){\n       \n      let roomsJoined = cloneDeep(this.state.roomsJoined);\n      let roomsAvail = cloneDeep(this.state.roomsAvailable);\n      let allRooms = cloneDeep(this.state.all);\n      \n      if (room.admin === this.props.user.id){\n         this.props.createRoom(room);\n         roomsJoined.data.push(room);\n         this.setState({\n            roomsJoined: {data: roomsJoined.data},\n         })\n      } else {\n         roomsAvail.data.push(room);\n         this.setState({\n            roomsAvailable: {data: roomsAvail.data},\n         })\n      }\n       \n      allRooms.push(room);\n      this.setState({\n         all: allRooms,\n      })\n   }\n\n\n\n   joinRoom(e){\n       \n      let room = this.state.roomsAvailable.data.filter(room => e.currentTarget.id === room._id ? room : null);\n      \n      room[0].users.push(this.props.user.id);\n      this.props.editRoom(room[0]);\n      \n      this.socket.emit('join room', {\n         room: room[0],\n         user: this.props.user,\n      })\n   }\n\n   leaveRoom(e){\n       \n      let room = cloneDeep(this.props.rooms[e.currentTarget.id]);\n      //find and remove current user from the room users array\n      for (let i = 0; i < room.users.length; i++){\n         if(room.users[i]._id === this.props.user.id){\n            room.users.splice(i, 1);\n         }\n      }\n       \n      this.props.leaveRoom(room);\n      this.socket.emit('leave room',{\n         room: room,\n         user: this.props.user,\n      })\n   }\n\n   deleteRoom(room){\n      this.socket.emit('delete room',{room, user: this.props.user});\n   }\n\n   roomDeleted({room, user}){\n      this.props.deleteRoom(room);\n      //check if this user was a member \n       \n      let roomMembers = room.users;\n      if (this.props.user.id !== room.admin && roomMembers.includes(this.props.user.id)){\n         this.setState({deletedRoom: room});\n         \n      } else {\n         //remove from available rooms list\n         let rmsAvail = cloneDeep(this.state.roomsAvailable);\n         let index = null;\n         for (let i = 0; i < rmsAvail.data.length; i++){\n            if(rmsAvail.data[i]._id === room._id){\n               index = i;\n            }\n         }\n\n         if (index) {\n            rmsAvail.data.splice(index, 1);\n         }\n\n         this.setState({\n            roomsAvailable: {data: rmsAvail.data}\n         })\n          \n      }\n\n      //remove from joined rooms list?\n\n   }\n\n   ackDelete(){\n      this.setState({deletedRoom: null});\n   }\n\n\n\n\n\n\n   render(){\n      let rooms = this.props.rooms || {};\n      if (rooms.length > 0){\n         // \n      }\n      let roomIds = [];\n      //   myRooms = this.state.myRooms;\n      console.log(\"Dashboard rendered\");\n      Object.keys(rooms).forEach(key => {\n         // ;\n         roomIds.push(rooms[key]._id);  \n      });\n      // rooms.forEach(room => {\n      //    ;\n      //    roomIds.push(room.roomId);\n      // });\n      // ;\n      return(\n         <div className=\"dashboard\">\n            <Sidebar \n               createNewRoom = {this.createNewRoom}\n               newTitle={this.state.newTitle}\n               handleChange={this.handleChange}\n               joinRoom={this.joinRoom}\n               roomsAvailable={this.state.roomsAvailable}\n               allRooms = {this.state.all}\n               errors = {this.state.errors}\n               socket = {this.socket}\n            />\n            {this.state.deletedRoom ? (\n               <div className=\"deleted-room-alert\">\n                  <h3>{`\"${this.state.deletedRoom.title}\" was deleted by the admin.`}</h3>\n                  <button onClick={this.ackDelete}>OK</button>\n               </div>\n               ) : (null)            \n            }\n            <div className=\"chatbox-list\" >\n               {\n                  roomIds.map(id=>\n                     {\n                        // debugger;\n                        if (id !== undefined){\n                     return (this.props.rooms[id].closedFor.includes(this.props.user.email) ?\n                         \"\" :  <ChatBox leaveRoom={this.leaveRoom} deleteRoom={this.deleteRoom} roomId={id} key={id} socket={this.socket}/>\n                        )}\n                     }\n                  )\n               }  \n            </div>\n\n         </div>\n      )\n   }\n}\n\n\nexport default DashBoard;","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/chat_box.jsx",["234","235","236"],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/util/message_api_util.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/user_list.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/session/login_form_container.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/session/signup_form_container.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/new_room_form/new_room_form_container.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/side_bar_container.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/data_share.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/message_container.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/giphy/giphy.jsx",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/session/session_form.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/new_room_form/new_room_form.jsx",["237"],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/side_bar.jsx",["238","239","240","241","242","243","244","245","246"],"import React from 'react';\nimport {getRoomUsers} from '../../util/room_api_util'\nimport SearchBarDropdown from './search_dropdown'\nimport { getAvailableRooms, getRooms } from '../../util/room_api_util';\nimport {getUser } from \"../../util/session_api_util\"\nimport { updateRoom } from '../../actions/room_actions';\nimport ClickOutHandler from 'react-onclickout';\nimport NewRoomForm from './new_room_form/new_room_form_container';\n\nclass Sidebar extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            show_rooms: false,\n            searchInput: '',\n            dropDown: false,\n            roomsAvailable: [],\n            roomsJoined: [],\n            all: [],\n            rooms: this.props.rooms,\n            errors: {}\n        };\n        this.logoutUser = this.logoutUser.bind(this);\n        this.handleSearchInput = this.handleSearchInput.bind(this);\n        this.handleDropDown = this.handleDropDown.bind(this);\n        this.displayRooms = this.displayRooms.bind(this);\n        this.hideRooms = this.hideRooms.bind(this);\n        this.toggleRooms = this.toggleRooms.bind(this);\n    }\n\n    logoutUser(e) {\n        e.preventDefault();\n        this.props.logout();\n    }\n\n    handleSearchInput(e){\n        this.setState({searchInput: e.currentTarget.value, dropDown: true});\n    };\n\n    handleDropDown(){\n        this.setState({dropDown: false});\n    };\n\n    displayRooms(){\n        this.state.show_rooms === true ? \n        this.setState({show_rooms: false}) : this.setState({show_rooms: true});\n    };\n\n    hideRooms(){\n        this.setState({show_rooms:false});\n    };\n\n\n    toggleRooms(e){\n        //   \n        // let title = e.target.innerText;\n        let user = this.props.user.username;\n        let email = this.props.user.email;\n        let id = this.props.user.id;\n        // e.target.id \n        this.props.editClosedFor(e.target.id, email,  id)\n        .then(rooms => {\n              ;\n            this.setState({rooms: this.props.rooms},this.render)\n        })\n       \n    }\n\n    componentDidMount(props){\n        //   ;\n        this.setState({ rooms: this.props.rooms })\n    }\n    componentDidUpdate(prevprops, prevState){\n        //   ;\n        if( this.props.rooms != prevprops.rooms){\n            this.setState({rooms: this.props.rooms}, this.render)\n            //   ;\n            // this.render()\n        }\n    //    this.setState({ rooms: this.props.rooms })\n        \n        // Object.keys(this.props.rooms).forEach(roomId => {\n        //       ;\n        //      console.log(prevprops.rooms[roomId]) \n\n        //     })\n    }\n\n    render(){\n        let roomsAvailable = this.props.roomsAvailable.data || [];\n        //  \n        let rooms = this.state.rooms || this.props.rooms\n        //   ;\n        let roomIds = [];\n        //   myRooms = this.state.myRooms;\n        console.log(\"Dashboard rendered\");\n        Object.keys(rooms).forEach(key => {\n            roomIds.push(rooms[key]._id)})\n            \n        let extras = {\n            createNewRoom: this.props.createNewRoom,\n            socket: this.props.socket,\n        }\n        \n        return(\n            <div className=\"sidebar-parent\">\n            <div className='sidebar-container'>\n                <div className=\"sidebar-left\">\n                    <h1>PILLAR</h1>\n                    \n                </div>\n\n                    \n                <div className=\"sidebar-right\">\n                        <div className='search-bar-container'>\n                            <input \n                                className='search-bar' \n                                type='text'\n                                onChange={this.handleSearchInput}\n                                onKeyDown={this.handleDropDown}\n                                value={this.state.searchInput}\n                                placeholder='Search'\n                            />\n                            {this.state.dropDown && this.state.searchInput.length !== 0 ? \n                            <ClickOutHandler onClickOut={this.handleDropDown}> \n                                <SearchBarDropdown className='search-bar-dropdown-container'\n                                    handleDropDown={this.handleDropDown}\n                                    searchInput={this.state.searchInput} \n                                    allRooms={this.props.allRooms}\n                                    roomsAvailable={this.props.roomsAvailable}\n                                    user={this.props.user}\n                                    editClosedFor= {this.props.editClosedFor}\n                                    />\n                            </ClickOutHandler>\n                                : null\n                            }\n                        </div>\n                        <div className=\"logout-button create-room\" \n                            onClick={() => this.props.openModal({\n                                modal: 'create room',\n                                extras: extras\n                            })}>\n                        <div>Create New Room</div>\n                    </div>\n                    <div className=\"allrooms\">\n                        <div className=\"logout-button available-chatrooms\" onClick={()=>this.displayRooms()}>Available Rooms</div>\n                    \n                        <div className=\"allroomsul\" onMouseLeave={this.hideRooms}>\n                            {this.state && this.state.show_rooms === true ? \n                            roomsAvailable.map(room => {\n                            return (\n                                <li className=\"room-list\" id={room._id} key={room._id}>\n                                    <p>\n                                        Title: {room.title}\n                                    </p>\n                                    <p>\n                                        Number of current users: {room.users.length}\n                                    </p>\n                                    <div className=\"join-room-button-div\">\n                                        <button className=\"join-room-button\" id={room._id} onClick={this.props.joinRoom}>Join Room</button>\n                                    </div>\n                                </li>\n                            )\n                        }) : null}\n                        </div>\n                    </div>\n                        <div className=\"logout-button create-room\"\n                            onClick={() => this.props.openModal({\n                                modal: 'team',\n                                extras: extras\n                            })}>Our Team\n                        </div>\n                    \n                        <div className=\"logout-button\" onClick={this.logoutUser}>\n                        <div >Logout</div>\n                        \n                    </div>\n                    <br/>\n                    \n                </div>\n            </div>\n            <div className=\"myroomsdiv\">\n                    {/* <h2>My Rooms</h2> */}\n                    <ul className=\"myrooms\">\n                        {Object.keys(this.props.rooms).length > 0 ?\n\n                            roomIds.map(id => {\n                                //   debugger;\n                                if (id !== undefined) {\n                                    return rooms[id].closedFor.includes(this.props.user.email)\n                                        //   [this.props.user.username] \n                                        ?\n                                        (<li id={rooms[id]._id} onClick={this.toggleRooms}>Show <span className=\"room-name\">{rooms[id].title}</span></li>\n                                            // ,<button onClick= { this.toggleRooms }> Open</button>]\n                                        ) :\n                                        (<li id={rooms[id]._id} onClick={this.toggleRooms}> Hide <span className=\"room-name\">{rooms[id].title}</span></li>\n                                            // <button onClick={this.toggleRooms}> Close</button>]\n                                        )\n                                }\n                            })\n                            : \"\"}\n                    </ul>\n                </div>\n        </div >\n        )\n    }\n};\n\nexport default Sidebar;","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/message.jsx",["247","248","249"],"import React, { Component } from 'react';\nimport { debug } from 'request';\nimport EditMessageForm from './edit_message_form_container.js';\nimport Replies from './replies.jsx';\nimport RepliesForm from './replies_container.js'\nexport default class Message extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      repliesOpen: false\n    }\n    this.editMessage = this.editMessage.bind(this);\n    this.deleteMessage = this.deleteMessage.bind(this);\n    this.deleteGif = this.deleteGif.bind(this);\n    this.toggleReplies = this.toggleReplies.bind(this)\n  };\n\n  componentDidMount(){\n    this.props.socket.on(\"Message Edited\", this.editMessage);\n    this.props.socket.on(\"Message Deleted\", this.deleteMessage);\n  };\n\n  editMessage(msg){\n     \n    if (msg._id === this.props.msg.id){\n      this.props.editMessage(msg);\n    }\n  };\n\n  deleteMessage(msg){\n    if (msg._id === this.props.msg.id) {\n      this.props.deleteMessage(msg);\n    }\n  };\n\n  deleteGif(){\n    let response = window.confirm(`Are you sure you want to delete your Gif?`);\n    if (response) {\n      this.props.socket.emit(\"Delete Message\", this.props.msg);\n    }\n  };\n\n  toggleReplies(){\n    this.state.repliesOpen === true ? \n    this.setState({repliesOpen: false}) : this.setState({repliesOpen: true})\n  };\n  \n  render() {\n    //show edit button only if current user was the author of this message\n    //open edit message textfield form if button is clicked\n    //use socket to edit database and all connected users' message\n    //update redux state (room and messages)\n    let msg = this.props.msg;\n    let author = false;\n  \n    if (msg.sender === this.props.user.id){\n       author = true;\n     }\n    \n    let message;\n    if (msg.message.includes('giphy')){\n      message = <li className=\"message-li\" key={msg.id}>\n                    <h6>{msg.username}: </h6>\n                    <img className=\"chat-img\" src={msg.message} alt=\"image\" />\n                  {author && \n                    <button onClick={this.deleteGif}>Delete Gif</button>\n                  }\n\n                 <RepliesForm socket={this.props.socket} msg={msg} message={msg.message} />\n                </li>         \n    } else {\n      message = \n      \n      <li className=\"message-li\" key={msg.id} id={this.props.id}>\n        <div className=\"message-li-text\">\n          <h6>{msg.username}:</h6>\n          <p>{msg.message}</p>\n        </div>\n        <div className=\"message-li-buttons\">\n          {\n            author && <EditMessageForm socket={this.props.socket} msg={msg}/> \n          }       \n          <RepliesForm socket={this.props.socket} msg={msg} message={msg.message}/>\n        </div>\n      </li>\n    }\n\n   \n    return (\n      <div className=\"message-container\">\n        {message}\n      </div>\n   \n    )\n  }\n}\n","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/replies_container.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/edit_message_form_container.js",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/replies.jsx",["250"],"import React from \"react\"\nimport moment from \"moment\";\nimport Picker from 'emoji-picker-react';\nimport Giphy from \"../giphy/giphy\";\nimport EditReplyForm from './edit_reply_form';\nimport * as cloneDeep from 'lodash/cloneDeep';\nimport {switcheThread} from './../../components/chat/data_share';\n\n\nclass Replies extends React.Component {\n   constructor(props){\n      super(props)\n\n      this.state ={\n         replyBox: false,\n         replyText: \"\",\n         repliesOpen: false,\n         emojiPicker: false,\n      }\n      this.handleReply = this.handleReply.bind(this);\n      this.handleChange = this.handleChange.bind(this);\n      this.submitReply = this.submitReply.bind(this);\n      this.toggleReplies = this.toggleReplies.bind(this)\n      this.openEmoji = this.openEmoji.bind(this);\n      this.selectEmoji = this.selectEmoji.bind(this);\n      this.useGiphy = this.useGiphy.bind(this);\n      this.deleteGifReply = this.deleteGifReply.bind(this);\n\n   };\n\n   componentDidMount(){\n      this.subscription = switcheThread.receiveOpenThread().subscribe(message=>{\n      if(message === this.props.message.message){\n        this.setState({repliesOpen: true});\n      }; \n    })\n   };\n\n   handleReply(e) {\n      this.state.replyBox === false ? \n         (this.props.replies  ?\n           this.setState({ replyBox: true, repliesOpen: true })\n           : \n           this.setState({replyBox: true, repliesOpen: false})\n         ) \n        :\n        this.setState({ replyBox: false, repliesOpen: false })\n\n   }\n   handleChange(e){\n      this.setState({\n         replyText: e.currentTarget.value\n      })\n   };\n\n   submitReply(e){\n      e.preventDefault();\n      let username = this.props.user.username;\n      let userId = this.props.user.id;\n       \n      let room = this.props.room;\n\n      let timestamp = moment().format('LT');\n      let reply = this.state.replyText;\n      let message = this.props.msg.message\n      let id =  this.props.message.id;\n      this.props.socket.emit(\"Edit Message\", {\n         reply,\n         timestamp,\n         username,\n         userId,\n         room,\n         message,\n         id\n      })\n      this.setState({\n         replyText: \"\",\n         repliesOpen: true,\n      })\n   };\n\n   toggleReplies() {\n      this.state.repliesOpen === true ?\n         this.setState({ repliesOpen: false, replyBox: false })\n          : \n         this.setState({ repliesOpen: true, replyBox: true })\n   };\n\n   selectEmoji(e, emojiObject) {\n      let newMessage = this.state.replyText + emojiObject.emoji;\n      this.setState({\n         replyText: newMessage\n      })\n   };\n\n   openEmoji() {\n      this.state.emojiPicker === true ?\n         this.setState({ emojiPicker: false }) :\n         this.setState({ emojiPicker: true })\n   };\n\n   useGiphy(e) {\n      e.preventDefault();\n      let username = this.props.user.username;\n      let userId = this.props.user.id;\n      let room = this.props.room;\n\n      let timestamp = moment().format('LT');\n      let reply = `${e.target.src}`;\n      let message = this.props.msg.message;\n      let id = this.props.message.id;\n      this.props.socket.emit(\"Edit Message\", {\n         reply,\n         timestamp,\n         username,\n         userId,\n         room,\n         message,\n         id\n      })\n      this.setState({\n         replyText: \"\",\n         repliesOpen: true,\n      })\n   };\n\n   deleteGifReply(e){\n      let response = window.confirm(`Are you sure you want to delete your Gif?`);\n      if (response) {\n         let replies = cloneDeep(this.props.msg.replies);\n         let replyId = e.currentTarget.id;\n          \n         let replyIndex = replies.findIndex(reply => replyId === reply._id);\n         replies.splice(replyIndex, 1);\n\n         this.props.socket.emit(\"Edit Message Reply\", {\n            message: this.props.msg,\n            replies: replies,\n         });\n      }\n   }\n\n\n   render(){\n      let msg = this.props.msg;\n\n      return(\n         <div>\n           \n           \n            {msg.replies && this.state.repliesOpen === true ?\n               (\n\n                  [msg.replies.map(reply => {\n                     // return (\n                     if (reply.reply.includes(\"giphy\")){\n                        return (\n                           <li key={reply._id} className=\"reply\" >\n                              {reply.username} says: <img className=\"chat-img\" src={reply.reply} alt=\"image\" />\n                              {reply.userId === this.props.user.id && \n                                 <button onClick={this.deleteGifReply} id={reply._id}>Delete Gif</button>\n                              }\n                           </li>\n                        )\n                     }\n                     else{\n                        return (\n                           <li key={reply._id} className=\"reply\" id={`msg-reply-${reply.reply}`}>\n                              {reply.username} says: {reply.reply}\n                              {reply.userId === this.props.user.id &&\n                                 <EditReplyForm socket={this.props.socket} msg={msg} replyId={reply._id}/>\n                              }\n                           </li>\n                        )\n                     }\n                  }),\n\n                     <button key=\"button\" className=\"replies-div\" onClick={this.toggleReplies}> Close</button> \n                  ])\n               : (msg.replies.length > 0 ? \n                  (msg.replies.length > 1 ?\n                      <button className=\"replies-div\" onClick={this.toggleReplies}> {msg.replies.length} replies</button>\n                      :\n                     <button className=\"replies-div\" onClick={this.toggleReplies}> {msg.replies.length} reply</button>\n                  )\n                  : <button className=\"replies-div\" onClick={this.toggleReplies}> Reply</button>)\n            }\n            {this.state.replyBox === false ?\n            // (<button onClick={this.handleReply}> Add Reply</button>)\n            \"\"\n            :\n            (\n               <div>\n                  <form onSubmit={this.submitReply}>\n                    \n                     <input type=\"text\" onChange={this.handleChange} value={this.state.replyText}/>\n                        \n                  </form>\n                     {this.state.emojiPicker === false ?\n                        <button onClick={this.openEmoji} > ☺ </button> :\n                        <div onMouseLeave={this.openEmoji}> <Picker className=\"emoji-picker\" onEmojiClick={this.selectEmoji} /> </div>}\n                     <Giphy useGiphy={this.useGiphy} roomTitle={this.props.room.title} />\n                     {/* <button onClick={this.handleReply}> Cancel</button> */}\n               </div>\n            )}\n            \n         </div>\n      )\n   }\n}\n\nexport default Replies;","/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/search_dropdown.jsx",["251","252"],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/edit_message_form.jsx",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/message/edit_reply_form.jsx",[],"/Users/davidpease/Documents/App Academy/Pillar/frontend/src/components/chat/chatbox_header_options.jsx",[],{"ruleId":"253","severity":1,"message":"254","line":3,"column":18,"nodeType":"255","messageId":"256","endLine":3,"endColumn":23},{"ruleId":"253","severity":1,"message":"257","line":5,"column":8,"nodeType":"255","messageId":"256","endLine":5,"endColumn":16},{"ruleId":"253","severity":1,"message":"258","line":6,"column":8,"nodeType":"255","messageId":"256","endLine":6,"endColumn":15},{"ruleId":"259","severity":1,"message":"260","line":10,"column":1,"nodeType":"261","endLine":36,"endColumn":2},{"ruleId":"253","severity":1,"message":"262","line":1,"column":10,"nodeType":"255","messageId":"256","endLine":1,"endColumn":15},{"ruleId":"253","severity":1,"message":"263","line":4,"column":10,"nodeType":"255","messageId":"256","endLine":4,"endColumn":19},{"ruleId":"253","severity":1,"message":"264","line":4,"column":21,"nodeType":"255","messageId":"256","endLine":4,"endColumn":31},{"ruleId":"253","severity":1,"message":"265","line":4,"column":33,"nodeType":"255","messageId":"256","endLine":4,"endColumn":43},{"ruleId":"253","severity":1,"message":"266","line":4,"column":45,"nodeType":"255","messageId":"256","endLine":4,"endColumn":55},{"ruleId":"253","severity":1,"message":"267","line":4,"column":57,"nodeType":"255","messageId":"256","endLine":4,"endColumn":65},{"ruleId":"253","severity":1,"message":"268","line":4,"column":67,"nodeType":"255","messageId":"256","endLine":4,"endColumn":76},{"ruleId":"253","severity":1,"message":"269","line":4,"column":78,"nodeType":"255","messageId":"256","endLine":4,"endColumn":92},{"ruleId":"253","severity":1,"message":"270","line":2,"column":21,"nodeType":"255","messageId":"256","endLine":2,"endColumn":31},{"ruleId":"253","severity":1,"message":"271","line":1,"column":29,"nodeType":"255","messageId":"256","endLine":1,"endColumn":43},{"ruleId":"253","severity":1,"message":"272","line":1,"column":61,"nodeType":"255","messageId":"256","endLine":1,"endColumn":75},{"ruleId":"253","severity":1,"message":"273","line":1,"column":77,"nodeType":"255","messageId":"256","endLine":1,"endColumn":89},{"ruleId":"253","severity":1,"message":"274","line":1,"column":91,"nodeType":"255","messageId":"256","endLine":1,"endColumn":104},{"ruleId":"275","severity":1,"message":"276","line":42,"column":70,"nodeType":"277","endLine":42,"endColumn":85},{"ruleId":"278","severity":1,"message":"279","line":43,"column":21,"nodeType":"280","endLine":43,"endColumn":131},{"ruleId":"275","severity":1,"message":"276","line":49,"column":54,"nodeType":"277","endLine":49,"endColumn":69},{"ruleId":"278","severity":1,"message":"279","line":50,"column":25,"nodeType":"280","endLine":50,"endColumn":2925},{"ruleId":"278","severity":1,"message":"279","line":52,"column":74,"nodeType":"280","endLine":52,"endColumn":171},{"ruleId":"275","severity":1,"message":"276","line":53,"column":64,"nodeType":"277","endLine":53,"endColumn":79},{"ruleId":"275","severity":1,"message":"276","line":61,"column":53,"nodeType":"277","endLine":61,"endColumn":68},{"ruleId":"278","severity":1,"message":"279","line":62,"column":25,"nodeType":"280","endLine":62,"endColumn":2925},{"ruleId":"278","severity":1,"message":"279","line":64,"column":80,"nodeType":"280","endLine":64,"endColumn":177},{"ruleId":"275","severity":1,"message":"276","line":65,"column":63,"nodeType":"277","endLine":65,"endColumn":78},{"ruleId":"275","severity":1,"message":"276","line":75,"column":58,"nodeType":"277","endLine":75,"endColumn":73},{"ruleId":"278","severity":1,"message":"279","line":76,"column":23,"nodeType":"280","endLine":76,"endColumn":2923},{"ruleId":"278","severity":1,"message":"279","line":78,"column":72,"nodeType":"280","endLine":78,"endColumn":169},{"ruleId":"275","severity":1,"message":"276","line":79,"column":62,"nodeType":"277","endLine":79,"endColumn":77},{"ruleId":"275","severity":1,"message":"276","line":87,"column":52,"nodeType":"277","endLine":87,"endColumn":67},{"ruleId":"278","severity":1,"message":"279","line":88,"column":23,"nodeType":"280","endLine":88,"endColumn":2923},{"ruleId":"278","severity":1,"message":"279","line":90,"column":86,"nodeType":"280","endLine":90,"endColumn":183},{"ruleId":"275","severity":1,"message":"276","line":91,"column":62,"nodeType":"277","endLine":91,"endColumn":77},{"ruleId":"281","replacedBy":"282"},{"ruleId":"283","replacedBy":"284"},{"ruleId":"285","severity":1,"message":"286","line":71,"column":37,"nodeType":"287","messageId":"288","endLine":71,"endColumn":39},{"ruleId":"289","severity":1,"message":"290","line":270,"column":33,"nodeType":"291","messageId":"292","endLine":270,"endColumn":35},{"ruleId":"253","severity":1,"message":"293","line":2,"column":8,"nodeType":"255","messageId":"256","endLine":2,"endColumn":10},{"ruleId":"253","severity":1,"message":"294","line":4,"column":8,"nodeType":"255","messageId":"256","endLine":4,"endColumn":16},{"ruleId":"253","severity":1,"message":"295","line":188,"column":9,"nodeType":"255","messageId":"256","endLine":188,"endColumn":18},{"ruleId":"253","severity":1,"message":"296","line":2,"column":8,"nodeType":"255","messageId":"256","endLine":2,"endColumn":13},{"ruleId":"253","severity":1,"message":"273","line":2,"column":9,"nodeType":"255","messageId":"256","endLine":2,"endColumn":21},{"ruleId":"253","severity":1,"message":"297","line":4,"column":10,"nodeType":"255","messageId":"256","endLine":4,"endColumn":27},{"ruleId":"253","severity":1,"message":"298","line":4,"column":29,"nodeType":"255","messageId":"256","endLine":4,"endColumn":37},{"ruleId":"253","severity":1,"message":"299","line":5,"column":9,"nodeType":"255","messageId":"256","endLine":5,"endColumn":16},{"ruleId":"253","severity":1,"message":"300","line":6,"column":10,"nodeType":"255","messageId":"256","endLine":6,"endColumn":20},{"ruleId":"253","severity":1,"message":"301","line":8,"column":8,"nodeType":"255","messageId":"256","endLine":8,"endColumn":19},{"ruleId":"253","severity":1,"message":"302","line":57,"column":13,"nodeType":"255","messageId":"256","endLine":57,"endColumn":17},{"ruleId":"285","severity":1,"message":"286","line":76,"column":30,"nodeType":"287","messageId":"288","endLine":76,"endColumn":32},{"ruleId":"289","severity":1,"message":"290","line":188,"column":44,"nodeType":"291","messageId":"292","endLine":188,"endColumn":46},{"ruleId":"253","severity":1,"message":"262","line":2,"column":10,"nodeType":"255","messageId":"256","endLine":2,"endColumn":15},{"ruleId":"253","severity":1,"message":"303","line":4,"column":8,"nodeType":"255","messageId":"256","endLine":4,"endColumn":15},{"ruleId":"304","severity":1,"message":"305","line":65,"column":21,"nodeType":"280","endLine":65,"endColumn":79},{"ruleId":"304","severity":1,"message":"305","line":159,"column":54,"nodeType":"280","endLine":159,"endColumn":112},{"ruleId":"285","severity":1,"message":"286","line":116,"column":46,"nodeType":"287","messageId":"288","endLine":116,"endColumn":48},{"ruleId":"285","severity":1,"message":"286","line":150,"column":54,"nodeType":"287","messageId":"288","endLine":150,"endColumn":56},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'MainPage' is defined but never used.","'ChatBox' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'debug' is defined but never used.","'fetchRoom' is defined but never used.","'fetchRooms' is defined but never used.","'createRoom' is defined but never used.","'removeRoom' is defined but never used.","'editRoom' is defined but never used.","'leaveRoom' is defined but never used.","'updateUserList' is defined but never used.","'closeModal' is defined but never used.","'deleteRoomUtil' is defined but never used.","'createRoomUtil' is defined but never used.","'getRoomUsers' is defined but never used.","'leaveRoomUtil' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["306"],"no-negated-in-lhs",["307"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'io' is defined but never used.","'UserList' is defined but never used.","'roomGiphy' is assigned a value but never used.","'Modal' is defined but never used.","'getAvailableRooms' is defined but never used.","'getRooms' is defined but never used.","'getUser' is defined but never used.","'updateRoom' is defined but never used.","'NewRoomForm' is defined but never used.","'user' is assigned a value but never used.","'Replies' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation"]