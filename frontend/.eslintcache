[{"/Users/jae/Documents/pill/frontend/src/index.js":"1","/Users/jae/Documents/pill/frontend/src/components/root.js":"2","/Users/jae/Documents/pill/frontend/src/store/store.js":"3","/Users/jae/Documents/pill/frontend/src/util/session_api_util.js":"4","/Users/jae/Documents/pill/frontend/src/util/giphy_api_util.js":"5","/Users/jae/Documents/pill/frontend/src/actions/session_actions.js":"6","/Users/jae/Documents/pill/frontend/src/components/app.js":"7","/Users/jae/Documents/pill/frontend/src/reducers/root_reducer.js":"8","/Users/jae/Documents/pill/frontend/src/util/route_util.js":"9","/Users/jae/Documents/pill/frontend/src/components/nav/navbar_container.js":"10","/Users/jae/Documents/pill/frontend/src/components/main/main_page.js":"11","/Users/jae/Documents/pill/frontend/src/components/session/login_form_container.js":"12","/Users/jae/Documents/pill/frontend/src/components/session/signup_form_container.js":"13","/Users/jae/Documents/pill/frontend/src/reducers/session_reducer.js":"14","/Users/jae/Documents/pill/frontend/src/components/chat/dashboard_container.js":"15","/Users/jae/Documents/pill/frontend/src/reducers/errors_reducer.js":"16","/Users/jae/Documents/pill/frontend/src/reducers/messages_reducer.js":"17","/Users/jae/Documents/pill/frontend/src/reducers/rooms_reducer.js":"18","/Users/jae/Documents/pill/frontend/src/components/nav/navbar.js":"19","/Users/jae/Documents/pill/frontend/src/actions/room_actions.js":"20","/Users/jae/Documents/pill/frontend/src/reducers/session_errors_reducer.js":"21","/Users/jae/Documents/pill/frontend/src/actions/message_actions.js":"22","/Users/jae/Documents/pill/frontend/src/components/session/login_form.js":"23","/Users/jae/Documents/pill/frontend/src/components/session/signup_form.js":"24","/Users/jae/Documents/pill/frontend/src/components/chat/dashboard.jsx":"25","/Users/jae/Documents/pill/frontend/src/util/room_api_util.js":"26","/Users/jae/Documents/pill/frontend/src/util/message_api_util.js":"27","/Users/jae/Documents/pill/frontend/src/components/chat/side_bar_container.js":"28","/Users/jae/Documents/pill/frontend/src/components/chat/chat_box_container.js":"29","/Users/jae/Documents/pill/frontend/src/components/chat/side_bar.jsx":"30","/Users/jae/Documents/pill/frontend/src/components/chat/chat_box.jsx":"31","/Users/jae/Documents/pill/frontend/src/components/chat/user_list.js":"32","/Users/jae/Documents/pill/frontend/src/components/message/message_container.js":"33","/Users/jae/Documents/pill/frontend/src/components/giphy/giphy.jsx":"34","/Users/jae/Documents/pill/frontend/src/components/chat/search_dropdown.jsx":"35","/Users/jae/Documents/pill/frontend/src/components/message/message.jsx":"36","/Users/jae/Documents/pill/frontend/src/components/message/edit_message_form_container.js":"37","/Users/jae/Documents/pill/frontend/src/components/message/replies_container.js":"38","/Users/jae/Documents/pill/frontend/src/components/message/replies.jsx":"39","/Users/jae/Documents/pill/frontend/src/components/message/edit_message_form.jsx":"40","/Users/jae/Documents/pill/frontend/src/components/chat/data_share.js":"41","/Users/jae/Documents/pill/frontend/src/components/message/edit_reply_form.jsx":"42","/Users/jae/Documents/dapills/frontend/src/index.js":"43","/Users/jae/Documents/dapills/frontend/src/components/root.js":"44","/Users/jae/Documents/dapills/frontend/src/util/session_api_util.js":"45","/Users/jae/Documents/dapills/frontend/src/util/giphy_api_util.js":"46","/Users/jae/Documents/dapills/frontend/src/store/store.js":"47","/Users/jae/Documents/dapills/frontend/src/util/room_api_util.js":"48","/Users/jae/Documents/dapills/frontend/src/actions/session_actions.js":"49","/Users/jae/Documents/dapills/frontend/src/components/app.js":"50","/Users/jae/Documents/dapills/frontend/src/reducers/root_reducer.js":"51","/Users/jae/Documents/dapills/frontend/src/util/route_util.js":"52","/Users/jae/Documents/dapills/frontend/src/components/nav/navbar_container.js":"53","/Users/jae/Documents/dapills/frontend/src/components/session/login_form_container.js":"54","/Users/jae/Documents/dapills/frontend/src/components/main/main_page.js":"55","/Users/jae/Documents/dapills/frontend/src/components/chat/dashboard_container.js":"56","/Users/jae/Documents/dapills/frontend/src/components/session/signup_form_container.js":"57","/Users/jae/Documents/dapills/frontend/src/reducers/session_reducer.js":"58","/Users/jae/Documents/dapills/frontend/src/reducers/errors_reducer.js":"59","/Users/jae/Documents/dapills/frontend/src/reducers/rooms_reducer.js":"60","/Users/jae/Documents/dapills/frontend/src/reducers/messages_reducer.js":"61","/Users/jae/Documents/dapills/frontend/src/components/nav/navbar.js":"62","/Users/jae/Documents/dapills/frontend/src/components/session/login_form.js":"63","/Users/jae/Documents/dapills/frontend/src/actions/room_actions.js":"64","/Users/jae/Documents/dapills/frontend/src/components/session/signup_form.js":"65","/Users/jae/Documents/dapills/frontend/src/reducers/session_errors_reducer.js":"66","/Users/jae/Documents/dapills/frontend/src/actions/message_actions.js":"67","/Users/jae/Documents/dapills/frontend/src/components/chat/dashboard.jsx":"68","/Users/jae/Documents/dapills/frontend/src/util/message_api_util.js":"69","/Users/jae/Documents/dapills/frontend/src/components/chat/side_bar_container.js":"70","/Users/jae/Documents/dapills/frontend/src/components/chat/chat_box_container.js":"71","/Users/jae/Documents/dapills/frontend/src/components/chat/chat_box.jsx":"72","/Users/jae/Documents/dapills/frontend/src/components/chat/side_bar.jsx":"73","/Users/jae/Documents/dapills/frontend/src/components/chat/user_list.js":"74","/Users/jae/Documents/dapills/frontend/src/components/chat/data_share.js":"75","/Users/jae/Documents/dapills/frontend/src/components/message/message_container.js":"76","/Users/jae/Documents/dapills/frontend/src/components/chat/search_dropdown.jsx":"77","/Users/jae/Documents/dapills/frontend/src/components/giphy/giphy.jsx":"78","/Users/jae/Documents/dapills/frontend/src/components/message/message.jsx":"79","/Users/jae/Documents/dapills/frontend/src/components/message/replies_container.js":"80","/Users/jae/Documents/dapills/frontend/src/components/message/replies.jsx":"81","/Users/jae/Documents/dapills/frontend/src/components/message/edit_reply_form.jsx":"82","/Users/jae/Documents/dapills/frontend/src/components/message/edit_message_form_container.js":"83","/Users/jae/Documents/dapills/frontend/src/components/message/edit_message_form.jsx":"84"},{"size":1901,"mtime":1609888990145,"results":"85","hashOfConfig":"86"},{"size":286,"mtime":1609374869122,"results":"87","hashOfConfig":"86"},{"size":507,"mtime":1609374869125,"results":"88","hashOfConfig":"86"},{"size":550,"mtime":1609888990150,"results":"89","hashOfConfig":"86"},{"size":113,"mtime":1609284082581,"results":"90","hashOfConfig":"86"},{"size":2197,"mtime":1609899790371,"results":"91","hashOfConfig":"86"},{"size":808,"mtime":1609284082573,"results":"92","hashOfConfig":"86"},{"size":316,"mtime":1609284082578,"results":"93","hashOfConfig":"86"},{"size":1030,"mtime":1609284082583,"results":"94","hashOfConfig":"86"},{"size":333,"mtime":1609284082576,"results":"95","hashOfConfig":"86"},{"size":258,"mtime":1609284082575,"results":"96","hashOfConfig":"86"},{"size":506,"mtime":1609284082577,"results":"97","hashOfConfig":"86"},{"size":603,"mtime":1609284082577,"results":"98","hashOfConfig":"86"},{"size":737,"mtime":1609888990148,"results":"99","hashOfConfig":"86"},{"size":920,"mtime":1609888990142,"results":"100","hashOfConfig":"86"},{"size":172,"mtime":1609284082578,"results":"101","hashOfConfig":"86"},{"size":1793,"mtime":1609888990146,"results":"102","hashOfConfig":"86"},{"size":2531,"mtime":1609888990147,"results":"103","hashOfConfig":"86"},{"size":1444,"mtime":1609284082576,"results":"104","hashOfConfig":"86"},{"size":2222,"mtime":1609899790372,"results":"105","hashOfConfig":"86"},{"size":429,"mtime":1609284082579,"results":"106","hashOfConfig":"86"},{"size":1069,"mtime":1609899790350,"results":"107","hashOfConfig":"86"},{"size":2231,"mtime":1609899790355,"results":"108","hashOfConfig":"86"},{"size":2842,"mtime":1609899790355,"results":"109","hashOfConfig":"86"},{"size":8853,"mtime":1609899865603,"results":"110","hashOfConfig":"86"},{"size":1127,"mtime":1609888990149,"results":"111","hashOfConfig":"86"},{"size":302,"mtime":1609284082582,"results":"112","hashOfConfig":"86"},{"size":1020,"mtime":1609888990144,"results":"113","hashOfConfig":"86"},{"size":630,"mtime":1609899818882,"results":"114","hashOfConfig":"86"},{"size":6245,"mtime":1609901540821,"results":"115","hashOfConfig":"86"},{"size":5068,"mtime":1609899835643,"results":"116","hashOfConfig":"86"},{"size":333,"mtime":1609284082574,"results":"117","hashOfConfig":"86"},{"size":680,"mtime":1609899790355,"results":"118","hashOfConfig":"86"},{"size":2697,"mtime":1609899790351,"results":"119","hashOfConfig":"86"},{"size":13730,"mtime":1609902917156,"results":"120","hashOfConfig":"86"},{"size":2348,"mtime":1609899898272,"results":"121","hashOfConfig":"86"},{"size":579,"mtime":1609899790354,"results":"122","hashOfConfig":"86"},{"size":562,"mtime":1609899790355,"results":"123","hashOfConfig":"86"},{"size":6760,"mtime":1609899918232,"results":"124","hashOfConfig":"86"},{"size":1916,"mtime":1609899790351,"results":"125","hashOfConfig":"86"},{"size":375,"mtime":1609899790350,"results":"126","hashOfConfig":"86"},{"size":2362,"mtime":1609899790354,"results":"127","hashOfConfig":"86"},{"size":1901,"mtime":1609962554884,"results":"128","hashOfConfig":"129"},{"size":286,"mtime":1609962554882,"results":"130","hashOfConfig":"129"},{"size":550,"mtime":1609962554888,"results":"131","hashOfConfig":"129"},{"size":113,"mtime":1609962554887,"results":"132","hashOfConfig":"129"},{"size":507,"mtime":1609962554887,"results":"133","hashOfConfig":"129"},{"size":1127,"mtime":1609962554887,"results":"134","hashOfConfig":"129"},{"size":2197,"mtime":1609962554875,"results":"135","hashOfConfig":"129"},{"size":808,"mtime":1609962554875,"results":"136","hashOfConfig":"129"},{"size":316,"mtime":1609962554885,"results":"137","hashOfConfig":"129"},{"size":1030,"mtime":1609962554887,"results":"138","hashOfConfig":"129"},{"size":333,"mtime":1609962554882,"results":"139","hashOfConfig":"129"},{"size":506,"mtime":1609962554883,"results":"140","hashOfConfig":"129"},{"size":258,"mtime":1609962554879,"results":"141","hashOfConfig":"129"},{"size":920,"mtime":1609962554877,"results":"142","hashOfConfig":"129"},{"size":603,"mtime":1609962554884,"results":"143","hashOfConfig":"129"},{"size":737,"mtime":1609962554886,"results":"144","hashOfConfig":"129"},{"size":172,"mtime":1609962554885,"results":"145","hashOfConfig":"129"},{"size":2531,"mtime":1609962554885,"results":"146","hashOfConfig":"129"},{"size":1793,"mtime":1609962554885,"results":"147","hashOfConfig":"129"},{"size":1444,"mtime":1609962554882,"results":"148","hashOfConfig":"129"},{"size":2231,"mtime":1609962554883,"results":"149","hashOfConfig":"129"},{"size":2222,"mtime":1609962554875,"results":"150","hashOfConfig":"129"},{"size":2842,"mtime":1609962554884,"results":"151","hashOfConfig":"129"},{"size":429,"mtime":1609962554886,"results":"152","hashOfConfig":"129"},{"size":1069,"mtime":1609962554875,"results":"153","hashOfConfig":"129"},{"size":8853,"mtime":1609962554877,"results":"154","hashOfConfig":"129"},{"size":302,"mtime":1609962554887,"results":"155","hashOfConfig":"129"},{"size":1020,"mtime":1609962554878,"results":"156","hashOfConfig":"129"},{"size":630,"mtime":1609962554876,"results":"157","hashOfConfig":"129"},{"size":5135,"mtime":1611166045670,"results":"158","hashOfConfig":"129"},{"size":6423,"mtime":1609974492495,"results":"159","hashOfConfig":"129"},{"size":333,"mtime":1609962554878,"results":"160","hashOfConfig":"129"},{"size":375,"mtime":1609962554877,"results":"161","hashOfConfig":"129"},{"size":680,"mtime":1609962554881,"results":"162","hashOfConfig":"129"},{"size":14455,"mtime":1609975020522,"results":"163","hashOfConfig":"129"},{"size":2697,"mtime":1609962554879,"results":"164","hashOfConfig":"129"},{"size":2348,"mtime":1609962554881,"results":"165","hashOfConfig":"129"},{"size":562,"mtime":1609962554881,"results":"166","hashOfConfig":"129"},{"size":6760,"mtime":1609962554881,"results":"167","hashOfConfig":"129"},{"size":2362,"mtime":1609962554880,"results":"168","hashOfConfig":"129"},{"size":579,"mtime":1609962554880,"results":"169","hashOfConfig":"129"},{"size":1916,"mtime":1609962554880,"results":"170","hashOfConfig":"129"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},"pxqowk",{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"173"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"173"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"173"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"173"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"173"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"173"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"173"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"173"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"173"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"173"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},"cr81a5",{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"268"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"268"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"268"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"268"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"268"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"268"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"268"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"330","messages":"331","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"268"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"268"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"268"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"268"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},"/Users/jae/Documents/pill/frontend/src/index.js",[],["356","357"],"/Users/jae/Documents/pill/frontend/src/components/root.js",[],"/Users/jae/Documents/pill/frontend/src/store/store.js",[],"/Users/jae/Documents/pill/frontend/src/util/session_api_util.js",[],"/Users/jae/Documents/pill/frontend/src/util/giphy_api_util.js",[],"/Users/jae/Documents/pill/frontend/src/actions/session_actions.js",[],"/Users/jae/Documents/pill/frontend/src/components/app.js",["358"],"import React from 'react';\nimport { AuthRoute, ProtectedRoute } from '../util/route_util';\nimport { Switch, Route } from 'react-router-dom';\nimport NavBarContainer from './nav/navbar_container';\n\nimport MainPage from './main/main_page';\nimport LoginFormContainer from './session/login_form_container';\nimport SignupFormContainer from './session/signup_form_container';\n\nimport DashBoard from './chat/dashboard_container';\nconst App = () => (\n  <div>\n    <NavBarContainer />\n    <Switch>\n        <AuthRoute exact path=\"/login\" component={LoginFormContainer} />\n        <AuthRoute exact path=\"/signup\" component={SignupFormContainer} />\n        <AuthRoute exact path=\"/\" component={MainPage} />\n        <ProtectedRoute exact path=\"/chat\" component={DashBoard} /> \n    </Switch>\n  </div>\n);\n\nexport default App;","/Users/jae/Documents/pill/frontend/src/reducers/root_reducer.js",[],"/Users/jae/Documents/pill/frontend/src/util/route_util.js",[],"/Users/jae/Documents/pill/frontend/src/components/nav/navbar_container.js",[],"/Users/jae/Documents/pill/frontend/src/components/main/main_page.js",[],"/Users/jae/Documents/pill/frontend/src/components/session/login_form_container.js",[],"/Users/jae/Documents/pill/frontend/src/components/session/signup_form_container.js",[],"/Users/jae/Documents/pill/frontend/src/reducers/session_reducer.js",["359"],"import { RECEIVE_CURRENT_USER, \n         RECEIVE_USER_LOGOUT, \n         RECEIVE_USER_SIGN_IN } from '../actions/session_actions';\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {}\n};\n\nexport default function(state = initialState, action) {\n  ;\n  switch (action.type) {\n    case RECEIVE_CURRENT_USER:\n      // console.log(action.currentUser)\n      ;\n      return {\n        ...state,\n        isAuthenticated: !!action.currentUser,\n        user: action.currentUser\n      };\n    case RECEIVE_USER_LOGOUT:\n      return {\n        isAuthenticated: false,\n        user: undefined\n      };\n    case RECEIVE_USER_SIGN_IN:\n      return ({\n        ...state,\n        isSignedIn: true\n      })\n    default:\n      ;\n      return state;\n  }\n}","/Users/jae/Documents/pill/frontend/src/components/chat/dashboard_container.js",[],"/Users/jae/Documents/pill/frontend/src/reducers/errors_reducer.js",[],"/Users/jae/Documents/pill/frontend/src/reducers/messages_reducer.js",["360"],"import { RECEIVE_MESSAGES, RECEIVE_NEW_MESSAGE, UPDATE_MESSAGE, REMOVE_MESSAGE } from '../actions/message_actions';\nimport { RECEIVE_ROOMS, DELETE_ROOM } from '../actions/room_actions';\n\nconst MessagesReducer = (state = { }, action) => {\n  Object.freeze(state);\n   ;\n  let newState = Object.assign({}, state);\n  switch (action.type) {\n    case RECEIVE_MESSAGES:\n      newState = action.messages;\n      return newState;\n    case RECEIVE_NEW_MESSAGE:\n       \n      Object.assign(newState, {[action.message.id]: action.message});\n      return newState;\n    case RECEIVE_ROOMS:\n      let messages = {};\n      //create messages object\n      action.rooms.data.forEach(room => {\n        room.messages.forEach(msg => {\n          messages[msg._id] = {\n            id: msg._id,\n            message: msg.message,\n            createdAt: msg.createdAt,\n            updatedAt: msg.updatedAt,\n            room: msg.room,\n            sender: msg.sender === null ? null : msg.sender._id,\n            username: msg.sender === null ? null : msg.sender.username,\n          }\n        })\n      });\n      Object.assign(newState, messages);\n      return newState;\n    case UPDATE_MESSAGE:\n      action.message.id = action.message._id; //rename the id property key\n      delete action.message._id;\n      newState[action.message.id] = action.message;\n      return newState;\n    case REMOVE_MESSAGE:\n       \n      delete newState[action.message._id];\n      return newState;\n    case DELETE_ROOM:\n       \n      action.room.messages.forEach(msgId =>{\n        delete newState[msgId];\n      });\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default MessagesReducer;","/Users/jae/Documents/pill/frontend/src/reducers/rooms_reducer.js",[],"/Users/jae/Documents/pill/frontend/src/components/nav/navbar.js",[],"/Users/jae/Documents/pill/frontend/src/actions/room_actions.js",["361","362","363","364"],"import { getRoom, getRooms, deleteRoomUtil, updateRoomUtil, createRoomUtil, getRoomUsers, leaveRoomUtil, editRoomClosedForUtil} from '../util/room_api_util';\n\nexport const RECEIVE_ROOMS = \"RECEIVE_ROOMS\";\nexport const RECEIVE_ROOM = \"RECEIVE_ROOM\";\nexport const DELETE_ROOM = \"DELETE_ROOM\";\nexport const UPDATE_ROOM = \"UPDATE_ROOM\";\nexport const LEAVE_ROOM = \"LEAVE_ROOM\";\n//export const RECEIVE_NEW_MESSAGE = \"RECEIVE_NEW_MESSAGE\";\nexport const RECEIVE_ROOM_USERS = \"RECEIVE_ROOM_USERS\";\nexport const CHAT_ROOM_STATUS = 'CHAT_ROOM_STATUS';\n\n\nexport const receiveRooms = rooms => ({\n  type: RECEIVE_ROOMS,\n  rooms\n});\n\nexport const deleteRoom = room => ({\n  type: DELETE_ROOM,\n  room\n});\n\nexport const updateRoom = room => ({\n  type: UPDATE_ROOM,\n  room\n})\n\nexport const exitRoom = room => ({\n  type: LEAVE_ROOM,\n  room\n})\n\nexport const receiveRoom = room => ({\n  type: RECEIVE_ROOM,\n  room\n})\n\nexport const chatRoomStatus = data => ({\n  type: CHAT_ROOM_STATUS,\n  data\n})\n\nexport const chatRoomSwitch = data => dispatch => {\n  dispatch(chatRoomStatus(data));\n};\n\n\nexport const fetchRoom = (roomId) => dispatch => (\n  getRoom(roomId)\n    .then(room => dispatch(receiveRoom(room)))\n    .catch(err => console.log(err))\n);\n\nexport const createRoom = room => dispatch => {\n  dispatch(receiveRoom(room))\n}\n\nexport const removeRoom = room => dispatch => (\n  dispatch(deleteRoom(room))\n  )\n\nexport const editRoom = room => dispatch => (\n  updateRoomUtil(room)\n    .then(room => {\n         \n      dispatch(updateRoom(room.data))\n    })\n)\nexport const updateUserList = room => dispatch => {\n    \n  dispatch(updateRoom(room));\n    \n}\n\nexport const leaveRoom = room => dispatch => (\n  updateRoomUtil(room)\n    .then(room => {\n       \n      dispatch(exitRoom(room.data))\n    })\n)\n\nexport const fetchRooms = (userId) => dispatch => (\n  getRooms(userId)\n    .then(rooms => {\n      debugger;\n      dispatch(receiveRooms(rooms));\n    })\n    .catch(err => console.log(err))\n);\n\nexport const editClosedFor = (roomId, email, id) => dispatch => {\n  debugger;\n  return editRoomClosedForUtil(roomId, email, id)\n  .then(rooms => {\n    debugger;\n    // fetchRooms(id)\n    dispatch(receiveRooms(rooms));\n  })\n  // .catch(err => console.log(err))\n}\n","/Users/jae/Documents/pill/frontend/src/reducers/session_errors_reducer.js",[],"/Users/jae/Documents/pill/frontend/src/actions/message_actions.js",[],"/Users/jae/Documents/pill/frontend/src/components/session/login_form.js",["365"],"import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport {Redirect} from 'react-router-dom'\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      errors: {},\n      is_authenticated: false\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.renderErrors = this.renderErrors.bind(this);\n  }\n\n\n  // UNSAFE_componentWillReceiveProps(nextProps) {\n  //   if (nextProps.currentUser === true) {\n  //     this.props.history.push('/pillars');\n  //   }\n  //   this.setState({errors: nextProps.errors})\n  // }\n\n  // Handle field updates (called in the render method)\n  update(field) {\n    return e => this.setState({\n      [field]: e.currentTarget.value\n    });\n  }\n\n\n\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    let user = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    \n    this.props.login(user)\n    if(this.props.currentUser){\n      this.props.history.push('/pillars')\n    }\n  }\n    \n\n\n  \n\n  // Render the session errors if there are any\n  renderErrors() {\n    return(\n      <ul>\n        {Object.keys(this.state.errors).map((error, i) => (\n          <li key={`error-${i}`}>\n            {this.state.errors[error]}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <div>\n              <input type=\"text\"\n                value={this.state.email}\n                onChange={this.update('email')}\n                placeholder=\"Email\"\n              />\n            <br/>\n              <input type=\"password\"\n                value={this.state.password}\n                onChange={this.update('password')}\n                placeholder=\"Password\"\n              />\n            <br/>\n            <input type=\"submit\" value=\"Submit\" />\n            {this.renderErrors()}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(LoginForm);\n","/Users/jae/Documents/pill/frontend/src/components/session/signup_form.js",["366","367","368"],"import { authenticate } from 'passport';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport {Redirect} from 'react-router'\nimport { login } from '../../util/session_api_util';\n\nclass SignupForm extends React.Component {\n  constructor(props) {\n     \n    super(props);\n    this.state = {\n      email: '',\n      username: '',\n      password: '',\n      password2: '',\n      errors: {},\n      is_authenticated: false\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.clearedErrors = false;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    //  \n    if (nextProps.signedIn === true) {\n      this.props.history.push('/pillar');\n    }\n    //  \n    this.setState({errors: nextProps.errors})\n  }\n\n  componentDidUpdate(prevProps){\n    //  \n    if(this.props.authenticated !== prevProps.authenticated){\n      //  \n      this.setState({is_authenticated: true})\n    }\n  }\n\n  update(field) {\n    return e => this.setState({\n      [field]: e.currentTarget.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n     \n    let user = {\n      email: this.state.email,\n      username: this.state.username,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n\n    // this.props.signup(user, this.props.history); \n    this.props.signup(user, this.props.history)\n      .then(user => {\n         \n        this.props.login(user)\n      })\n    // console.log(this.props)\n    // if(this.props.authenticate){\n    //   // this.props.login(user)\n    //   this.props.history.push('/pillars')\n    // }\n\n  }\n\n  renderErrors() {\n    return(\n      <ul>\n        {Object.keys(this.state.errors).map((error, i) => (\n          <li key={`error-${i}`}>\n            {this.state.errors[error]}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"signup-form-container\">\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"signup-form\">\n            <br/>\n              <input type=\"text\"\n                value={this.state.email}\n                onChange={this.update('email')}\n                placeholder=\"Email\"\n              />\n            <br/>\n              <input type=\"text\"\n                value={this.state.username}\n                onChange={this.update('username')}\n                placeholder=\"Username\"\n              />\n            <br/>\n              <input type=\"password\"\n                value={this.state.password}\n                onChange={this.update('password')}\n                placeholder=\"Password\"\n              />\n            <br/>\n              <input type=\"password\"\n                value={this.state.password2}\n                onChange={this.update('password2')}\n                placeholder=\"Confirm Password\"\n              />\n            <br/>\n            <input type=\"submit\" value=\"Submit\" />\n            {this.renderErrors()}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SignupForm);","/Users/jae/Documents/pill/frontend/src/components/chat/dashboard.jsx",["369","370"],"import React from 'react';\n//import room from '../../../../validation/room';\nimport io from \"socket.io-client\";\nimport ChatBox from './chat_box_container';\nimport Sidebar from './side_bar_container'\nimport { getAvailableRooms, getRooms } from '../../util/room_api_util';\nimport * as cloneDeep from 'lodash/cloneDeep';\nimport \"./chatbox.css\"\nclass DashBoard extends React.Component{\n   constructor(props){\n      super(props);\n      this.socket = io();\n      \n      this.state = {\n         newTitle: \"\",\n         roomsAvailable: [],\n         roomsJoined: [],\n         all: [],\n         deletedRoom: null,\n         myRooms: this.props.user.rooms,\n         errors: [],\n      }\n      \n      this.createNewRoom = this.createNewRoom.bind(this);\n      this.handleChange = this.handleChange.bind(this);\n      this.joinRoom = this.joinRoom.bind(this);\n      this.leaveRoom = this.leaveRoom.bind(this);\n      this.userLeft = this.userLeft.bind(this);\n      this.userJoined = this.userJoined.bind(this);\n      this.deleteRoom = this.deleteRoom.bind(this);\n      this.roomDeleted = this.roomDeleted.bind(this);\n      this.ackDelete = this.ackDelete.bind(this);\n      this.roomCreated = this.roomCreated.bind(this);\n      this.addRoomCreationError = this.addRoomCreationError.bind(this);\n      \n   }\n\n   \n   //component did mount\n   componentDidMount(){\n      \n      this.props.getRooms(this.props.user.id); //this pings the database\n      \n      getRooms(this.props.user.id)\n         .then(rooms => {\n            this.setState({\n               roomsJoined: rooms,\n            })\n         })\n         .then(()=>{\n            getAvailableRooms(this.props.user.id) //this pings the database                                \n            .then(rooms => {\n               this.setState({\n                  roomsAvailable: rooms,\n               })\n            })\n            .then(()=>{\n               this.setState({all: this.state.roomsAvailable.data.concat(this.state.roomsJoined.data)})\n            })\n         })\n      \n      this.socket.on(\"user left\", this.userLeft);\n      this.socket.on(\"user joined\", this.userJoined);\n      this.socket.on(\"room deleted\", this.roomDeleted);\n      this.socket.on(\"room created\", this.roomCreated);\n      this.socket.on(\"room creation error\", this.addRoomCreationError);\n   }\n\n   \n\n   componentDidUpdate(prevProps){\n      let user = this.props.user.username;\n      let rooms = this.props.rooms;\n      if (Object.keys(rooms).length != Object.keys(prevProps.rooms).length) {\n         \n         this.socket.emit(\"User connected\", { user, rooms });\n         this.props.getRooms(this.props.user.id); \n         \n         \n      getRooms(this.props.user.id)\n         .then(rooms => {\n            this.setState({\n               roomsJoined: rooms,\n            })\n         })\n         .then(()=>{\n            getAvailableRooms(this.props.user.id) //this pings the database                                \n            .then(rooms => {\n               this.setState({\n                  roomsAvailable: rooms,\n               })\n            })\n            .then(()=>{\n               this.setState({all: this.state.roomsAvailable.data.concat(this.state.roomsJoined.data)})\n            })\n         })\n      };\n      // if (this.props.rooms != prevProps) {\n      //    this.render()\n      // }\n   }\n\n   userLeft({ user, room }) { \n      //check if this user belongs to the room\n      let currentRooms = Object.keys(this.props.rooms);\n\n      if (currentRooms.includes(room._id)) {    \n         this.props.updateUserList(room);\n      }\n   }\n\n   userJoined({ user, room }) {\n      //check if this user belongs to the room\n      let currentRooms = Object.keys(this.props.rooms);\n\n      if (currentRooms.includes(room._id)){\n         //reformat the user object added to the room to match existing users\n         room.users.splice(room.users.length - 1, 1);\n         room.users.push({username: user.username, _id: user.id})\n         this.props.updateUserList(room);\n      }\n   }\n   \n   createNewRoom(e){\n      e.preventDefault();\n      e.stopPropagation();\n      let room = {\n         title: this.state.newTitle,\n         admin: this.props.user.id,\n         users: this.props.user.id,\n      }\n      this.socket.emit(\"Create Room\", room);\n      this.setState({\n         newTitle: \"\",\n         errors: []\n      })\n   }\n\n   roomCreated(room){\n       \n      let roomsJoined = cloneDeep(this.state.roomsJoined);\n      let roomsAvail = cloneDeep(this.state.roomsAvailable);\n      let allRooms = cloneDeep(this.state.all);\n      \n      if (room.admin === this.props.user.id){\n         this.props.createRoom(room);\n         roomsJoined.data.push(room);\n         this.setState({\n            roomsJoined: {data: roomsJoined.data},\n         })\n      } else {\n         roomsAvail.data.push(room);\n         this.setState({\n            roomsAvailable: {data: roomsAvail.data},\n         })\n      }\n       \n      allRooms.push(room);\n      this.setState({\n         all: allRooms,\n      })\n   }\n\n   addRoomCreationError({errors, room}){\n      \n      if(room.admin === this.props.user.id){\n         this.setState({\n            errors: [errors.text],\n         })\n      }\n   }\n\n   joinRoom(e){\n       \n      let room = this.state.roomsAvailable.data.filter(room => e.currentTarget.id === room._id ? room : null);\n      \n      room[0].users.push(this.props.user.id);\n      this.props.editRoom(room[0]);\n      \n      this.socket.emit('join room', {\n         room: room[0],\n         user: this.props.user,\n      })\n   }\n\n   leaveRoom(e){\n       \n      let room = cloneDeep(this.props.rooms[e.currentTarget.id]);\n      //find and remove current user from the room users array\n      for (let i = 0; i < room.users.length; i++){\n         if(room.users[i]._id === this.props.user.id){\n            room.users.splice(i, 1);\n         }\n      }\n       \n      this.props.leaveRoom(room);\n      this.socket.emit('leave room',{\n         room: room,\n         user: this.props.user,\n      })\n   }\n\n   deleteRoom(room){\n      this.socket.emit('delete room',{room, user: this.props.user});\n   }\n\n   roomDeleted({room, user}){\n      this.props.deleteRoom(room);\n      //check if this user was a member \n       \n      let roomMembers = room.users;\n      if (this.props.user.id !== room.admin && roomMembers.includes(this.props.user.id)){\n         this.setState({deletedRoom: room});\n         \n      } else {\n         //remove from available rooms list\n         let rmsAvail = cloneDeep(this.state.roomsAvailable);\n         let index = null;\n         for (let i = 0; i < rmsAvail.data.length; i++){\n            if(rmsAvail.data[i]._id === room._id){\n               index = i;\n            }\n         }\n\n         if (index) {\n            rmsAvail.data.splice(index, 1);\n         }\n\n         this.setState({\n            roomsAvailable: {data: rmsAvail.data}\n         })\n          \n      }\n\n      //remove from joined rooms list?\n\n   }\n\n   ackDelete(){\n      this.setState({deletedRoom: null});\n   }\n\n   handleChange(e){\n      this.setState({\n         newTitle: e.currentTarget.value,\n      })\n   };\n\n\n\n\n   render(){\n      let rooms = this.props.rooms || {};\n      if (rooms.length > 0){\n         // \n      }\n      let roomIds = [];\n      //   myRooms = this.state.myRooms;\n      console.log(\"Dashboard rendered\");\n      Object.keys(rooms).forEach(key => {\n         // ;\n         roomIds.push(rooms[key]._id);  \n      });\n      // rooms.forEach(room => {\n      //    ;\n      //    roomIds.push(room.roomId);\n      // });\n      // ;\n      return(\n         <div>\n               <Sidebar \n                  createNewRoom = {this.createNewRoom}\n                  newTitle={this.state.newTitle}\n                  handleChange={this.handleChange}\n                  joinRoom={this.joinRoom}\n                  roomsAvailable={this.state.roomsAvailable}\n                  allRooms = {this.state.all}\n                  errors = {this.state.errors}\n               />\n               {this.state.deletedRoom ? (\n                  <div className=\"deleted-room-alert\">\n                     <h3>{`\"${this.state.deletedRoom.title}\" was deleted by the admin.`}</h3>\n                     <button onClick={this.ackDelete}>OK</button>\n                  </div>\n                  ) : (null)            \n               }\n            <div className=\"chatbox-list\" >\n               {\n                  roomIds.map(id=>\n                     {\n                        // debugger;\n                        if (id !== undefined){\n                     return (this.props.rooms[id].closedFor.includes(this.props.user.email) ?\n                         \"\" :  <ChatBox leaveRoom={this.leaveRoom} deleteRoom={this.deleteRoom} roomId={id} key={id} socket={this.socket}/>\n                        )}\n                     }\n                  )\n               }  \n            </div>\n\n         </div>\n      )\n   }\n}\n\n\nexport default DashBoard;","/Users/jae/Documents/pill/frontend/src/util/room_api_util.js",[],"/Users/jae/Documents/pill/frontend/src/util/message_api_util.js",[],"/Users/jae/Documents/pill/frontend/src/components/chat/side_bar_container.js",[],"/Users/jae/Documents/pill/frontend/src/components/chat/chat_box_container.js",[],"/Users/jae/Documents/pill/frontend/src/components/chat/side_bar.jsx",["371","372","373","374","375","376","377","378"],"/Users/jae/Documents/pill/frontend/src/components/chat/chat_box.jsx",["379"],"import React from \"react\"\nimport io from \"socket.io-client\";\nimport moment from \"moment\";\nimport UserList  from './user_list.js';\nimport './chatbox.css'\nimport Picker from 'emoji-picker-react';\nimport Giphy from \"../giphy/giphy\";\nimport Message from '../message/message_container';\n\nclass ChatBox extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      chatMessage: \"\",\n      open: true,\n      openOrClose: 'close',\n      emojiPicker: false,\n      // dataFromSearchbar: instance.openOrClose//maybe use directly in the toggle function below\n    }\n\n    // debugger\n\n    this.toggle = this.toggle.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.submitMessage = this.submitMessage.bind(this);\n    this.openEmoji = this.openEmoji.bind(this);\n    this.selectEmoji = this.selectEmoji.bind(this);\n    this.useGiphy = this.useGiphy.bind(this);\n    this.deleteRoom = this.deleteRoom.bind(this);\n  }\n\n\n  componentDidMount(){\n    let roomId = this.props.room._id;\n\n    this.props.socket.on(`MTC_${roomId}`, msg =>{\n       //this message has been saved to the database, now need to update redux and components\n      console.log(msg);\n       \n    debugger;\n      let newMessage = {\n        id: msg._id,\n        message: msg.message,\n        createdAt: msg.createdAt,\n        updatedAt: msg.updatedAt,\n        room: msg.room,\n        sender: msg.sender,\n        username: msg.username,\n        replies: msg.replies\n      }\n      this.props.afterMessageSent(newMessage);      \n    });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot){\n\n  }    \n\n  handleChange(e){\n    this.setState({\n      chatMessage: e.currentTarget.value,\n    })\n    debugger\n  }\n\n  selectEmoji(e, emojiObject){\n    let newMessage = this.state.chatMessage + emojiObject.emoji;\n    this.setState({\n      chatMessage: newMessage\n    })\n  }\n\n  openEmoji(){\n    this.state.emojiPicker === true ? \n      this.setState({emojiPicker: false}) :\n      this.setState({emojiPicker: true})\n  }\n\n  submitMessage(e) {\n    if (e) { e.preventDefault()}\n\n    let username = this.props.user.username;\n    let userId = this.props.user.id;\n    let room = this.props.room;\n\n    let timestamp = moment().format('LT');\n    let message = this.state.chatMessage;\n     \n    this.props.socket.emit(\"Create Message\", {\n      message,\n      timestamp,\n      username,\n      userId,\n      room\n    })\n\n    this.setState({\n      chatMessage: \"\",\n    })\n\n    const ele = document.getElementById(`charbox-item-${room.title}`);\n    ele.scrollTop = ele.scrollHeight;\n\n\n  }\n\n  toggle(){\n    this.state.open ? \n    this.setState({open: false, openOrClose: 'open'}) : \n    this.setState({open: true, openOrClose: 'close'});\n  }\n\n  useGiphy(e){\n    this.props.socket.emit(\"Create Message\", {\n      message: `${e.target.src}`,\n      timestamp: moment().format('LT'), \n      username: this.props.user.username, \n      userId: this.props.user.id,\n      room: this.props.room,\n    })\n  }\n\n  deleteRoom(){\n    let response = window.confirm(`Are you sure you want to delete the room: \"${this.props.room.title}\"`)\n    if(response){\n      this.props.deleteRoom(this.props.room);\n    }\n  }\n\n  render() {\n    \n    let messages = this.props.room.messages.map((msg, index) => (<Message socket={this.props.socket} id={`msg-${this.props.room.title}-${index}`} msg={msg}/>)) || [];\n      \n    let users = this.props.room.users || [];\n\n     debugger;\n    return (\n      <div className={this.state.open ? 'open' : 'close'}> <button onClick={this.toggle}>{this.state.openOrClose}</button>\n        {this.state.open ? (\n          <div className=\"chatbox-container\" id={`charbox-item-${this.props.room.title}`}>\n\n            <h1>{this.props.room.title}</h1>\n            <div className='input-container' >\n              <button onClick={this.props.leaveRoom} id={this.props.roomId}>Leave Room</button>\n              {\n                this.props.user.id === this.props.room.admin ? (\n                  <button onClick={this.deleteRoom}>Delete Room</button>\n                )\n                :              \n                (null)\n              }\n              <form onSubmit={this.submitMessage}>\n\n                <input type=\"text\" value={this.state.chatMessage} onChange={this.handleChange} />\n              </form>\n                {this.state.emojiPicker === false ? \n                <button onClick={this.openEmoji} > ☺ </button> : \n              <div onMouseLeave= {this.openEmoji}> <Picker className=\"emoji-picker\" onEmojiClick={this.selectEmoji} /> </div>}\n\n              <Giphy useGiphy={this.useGiphy} roomTitle={this.props.room.title}/>\n            </div>\n            <ul>\n                {messages}\n            </ul>\n            <UserList users={users}/>\n          </div>\n        ) : null}\n      </div>\n    )\n  }\n\n}\n\n\nexport default ChatBox;","/Users/jae/Documents/pill/frontend/src/components/chat/user_list.js",[],"/Users/jae/Documents/pill/frontend/src/components/message/message_container.js",[],"/Users/jae/Documents/pill/frontend/src/components/giphy/giphy.jsx",[],"/Users/jae/Documents/pill/frontend/src/components/chat/search_dropdown.jsx",["380","381"],"/Users/jae/Documents/pill/frontend/src/components/message/message.jsx",["382","383","384"],"import React, { Component } from 'react';\nimport { debug } from 'request';\nimport EditMessageForm from './edit_message_form_container.js';\nimport Replies from './replies.jsx';\nimport RepliesForm from './replies_container.js'\nexport default class Message extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      repliesOpen: false\n    }\n    this.editMessage = this.editMessage.bind(this);\n    this.deleteMessage = this.deleteMessage.bind(this);\n    this.deleteGif = this.deleteGif.bind(this);\n    this.toggleReplies = this.toggleReplies.bind(this)\n  };\n\n  componentDidMount(){\n    this.props.socket.on(\"Message Edited\", this.editMessage);\n    this.props.socket.on(\"Message Deleted\", this.deleteMessage);\n  };\n\n  editMessage(msg){\n     \n    if (msg._id === this.props.msg.id){\n      this.props.editMessage(msg);\n    }\n  };\n\n  deleteMessage(msg){\n    if (msg._id === this.props.msg.id) {\n      this.props.deleteMessage(msg);\n    }\n  };\n\n  deleteGif(){\n    let response = window.confirm(`Are you sure you want to delete your Gif?`);\n    if (response) {\n      this.props.socket.emit(\"Delete Message\", this.props.msg);\n    }\n  };\n\n  toggleReplies(){\n    this.state.repliesOpen === true ? \n    this.setState({repliesOpen: false}) : this.setState({repliesOpen: true})\n  };\n  \n  render() {\n    //show edit button only if current user was the author of this message\n    //open edit message textfield form if button is clicked\n    //use socket to edit database and all connected users' message\n    //update redux state (room and messages)\n    let msg = this.props.msg;\n    let author = false;\n  \n    if (msg.sender === this.props.user.id){\n       author = true;\n     }\n    \n    let message;\n    if (msg.message.includes('giphy')){\n      message = <li key={msg.id}>{msg.username} says: <img className=\"chat-img\" src={msg.message} alt=\"image\" />\n        {author && \n          <button onClick={this.deleteGif}>Delete Gif</button>\n        }\n      </li>\n    } else {\n      message = <li key={msg.id} id={this.props.id}>{msg.username} says: {msg.message}\n        {author &&\n          <EditMessageForm socket={this.props.socket} msg={msg}/> \n        }\n       \n      </li>\n    }\n\n   \n    return (\n      <div>\n      {message}\n\n        <RepliesForm socket={this.props.socket} msg={msg} message={msg.message}/>\n      </div>\n   \n    )\n  }\n}\n","/Users/jae/Documents/pill/frontend/src/components/message/edit_message_form_container.js",[],"/Users/jae/Documents/pill/frontend/src/components/message/replies_container.js",[],"/Users/jae/Documents/pill/frontend/src/components/message/replies.jsx",["385"],"import React from \"react\"\nimport moment from \"moment\";\nimport Picker from 'emoji-picker-react';\nimport Giphy from \"../giphy/giphy\";\nimport EditReplyForm from './edit_reply_form';\nimport * as cloneDeep from 'lodash/cloneDeep';\nimport {switcheThread} from './../../components/chat/data_share';\n\n\nclass Replies extends React.Component {\n   constructor(props){\n      super(props)\n\n      this.state ={\n         replyBox: false,\n         replyText: \"\",\n         repliesOpen: false,\n         emojiPicker: false,\n      }\n      this.handleReply = this.handleReply.bind(this);\n      this.handleChange = this.handleChange.bind(this);\n      this.submitReply = this.submitReply.bind(this);\n      this.toggleReplies = this.toggleReplies.bind(this)\n      this.openEmoji = this.openEmoji.bind(this);\n      this.selectEmoji = this.selectEmoji.bind(this);\n      this.useGiphy = this.useGiphy.bind(this);\n      this.deleteGifReply = this.deleteGifReply.bind(this);\n\n   };\n\n   componentDidMount(){\n      this.subscription = switcheThread.receiveOpenThread().subscribe(message=>{\n      if(message === this.props.message.message){\n        this.setState({repliesOpen: true});\n      }; \n    })\n   };\n\n   handleReply(e) {\n      this.state.replyBox === false ? \n         (this.props.replies  ?\n           this.setState({ replyBox: true, repliesOpen: true })\n           : \n           this.setState({replyBox: true, repliesOpen: false})\n         ) \n        :\n        this.setState({ replyBox: false, repliesOpen: false })\n\n   }\n   handleChange(e){\n      this.setState({\n         replyText: e.currentTarget.value\n      })\n   };\n\n   submitReply(e){\n      e.preventDefault();\n      let username = this.props.user.username;\n      let userId = this.props.user.id;\n       \n      let room = this.props.room;\n\n      let timestamp = moment().format('LT');\n      let reply = this.state.replyText;\n      let message = this.props.msg.message\n      let id =  this.props.message.id;\n      this.props.socket.emit(\"Edit Message\", {\n         reply,\n         timestamp,\n         username,\n         userId,\n         room,\n         message,\n         id\n      })\n      this.setState({\n         replyText: \"\",\n         repliesOpen: true,\n      })\n   };\n\n   toggleReplies() {\n      this.state.repliesOpen === true ?\n         this.setState({ repliesOpen: false, replyBox: false })\n          : \n         this.setState({ repliesOpen: true, replyBox: true })\n   };\n\n   selectEmoji(e, emojiObject) {\n      let newMessage = this.state.replyText + emojiObject.emoji;\n      this.setState({\n         replyText: newMessage\n      })\n   };\n\n   openEmoji() {\n      this.state.emojiPicker === true ?\n         this.setState({ emojiPicker: false }) :\n         this.setState({ emojiPicker: true })\n   };\n\n   useGiphy(e) {\n      e.preventDefault();\n      let username = this.props.user.username;\n      let userId = this.props.user.id;\n      let room = this.props.room;\n\n      let timestamp = moment().format('LT');\n      let reply = `${e.target.src}`;\n      let message = this.props.msg.message;\n      let id = this.props.message.id;\n      this.props.socket.emit(\"Edit Message\", {\n         reply,\n         timestamp,\n         username,\n         userId,\n         room,\n         message,\n         id\n      })\n      this.setState({\n         replyText: \"\",\n         repliesOpen: true,\n      })\n   };\n\n   deleteGifReply(e){\n      let response = window.confirm(`Are you sure you want to delete your Gif?`);\n      if (response) {\n         let replies = cloneDeep(this.props.msg.replies);\n         let replyId = e.currentTarget.id;\n          \n         let replyIndex = replies.findIndex(reply => replyId === reply._id);\n         replies.splice(replyIndex, 1);\n\n         this.props.socket.emit(\"Edit Message Reply\", {\n            message: this.props.msg,\n            replies: replies,\n         });\n      }\n   }\n\n\n   render(){\n      let msg = this.props.msg;\n\n      return(\n         <div>\n            {msg.replies && this.state.repliesOpen === true ?\n               (\n\n                  [msg.replies.map(reply => {\n                     // return (\n                     if (reply.reply.includes(\"giphy\")){\n                        return (\n                           <li key={reply._id} className=\"reply\" >\n                              {reply.username} says: <img className=\"chat-img\" src={reply.reply} alt=\"image\" />\n                              {reply.userId === this.props.user.id && \n                                 <button onClick={this.deleteGifReply} id={reply._id}>Delete Gif</button>\n                              }\n                           </li>\n                        )\n                     }\n                     else{\n                        return (\n                           <li key={reply._id} className=\"reply\" id={`msg-reply-${reply.reply}`}>\n                              {reply.username} says: {reply.reply}\n                              {reply.userId === this.props.user.id &&\n                                 <EditReplyForm socket={this.props.socket} msg={msg} replyId={reply._id}/>\n                              }\n                           </li>\n                        )\n                     }\n                  }),\n\n                     <button key=\"button\" className=\"replies-div\" onClick={this.toggleReplies}> Close Thread</button> \n                  ])\n               : (msg.replies.length > 0 ? \n                  (msg.replies.length > 1 ?\n                      <button className=\"replies-div\" onClick={this.toggleReplies}> View {msg.replies.length} replies</button>\n                      :\n                     <button className=\"replies-div\" onClick={this.toggleReplies}> View {msg.replies.length} reply</button>\n                  )\n                  : <button className=\"replies-div\" onClick={this.toggleReplies}> Start Thread</button>)\n            }\n            {this.state.replyBox === false ?\n            // (<button onClick={this.handleReply}> Add Reply</button>)\n            \"\"\n            :\n            (\n               <div>\n                  <form onSubmit={this.submitReply}>\n                    \n                     <input type=\"text\" onChange={this.handleChange} value={this.state.replyText}/>\n                        \n                  </form>\n                     {this.state.emojiPicker === false ?\n                        <button onClick={this.openEmoji} > ☺ </button> :\n                        <div onMouseLeave={this.openEmoji}> <Picker className=\"emoji-picker\" onEmojiClick={this.selectEmoji} /> </div>}\n                     <Giphy useGiphy={this.useGiphy} roomTitle={this.props.room.title} />\n                     {/* <button onClick={this.handleReply}> Cancel</button> */}\n               </div>\n            )}\n            \n         </div>\n      )\n   }\n}\n\nexport default Replies;","/Users/jae/Documents/pill/frontend/src/components/message/edit_message_form.jsx",[],"/Users/jae/Documents/pill/frontend/src/components/chat/data_share.js",[],"/Users/jae/Documents/pill/frontend/src/components/message/edit_reply_form.jsx",[],"/Users/jae/Documents/dapills/frontend/src/index.js",[],["386","387"],"/Users/jae/Documents/dapills/frontend/src/components/root.js",[],"/Users/jae/Documents/dapills/frontend/src/util/session_api_util.js",[],"/Users/jae/Documents/dapills/frontend/src/util/giphy_api_util.js",[],"/Users/jae/Documents/dapills/frontend/src/store/store.js",[],"/Users/jae/Documents/dapills/frontend/src/util/room_api_util.js",[],"/Users/jae/Documents/dapills/frontend/src/actions/session_actions.js",[],"/Users/jae/Documents/dapills/frontend/src/components/app.js",["388"],"/Users/jae/Documents/dapills/frontend/src/reducers/root_reducer.js",[],"/Users/jae/Documents/dapills/frontend/src/util/route_util.js",[],"/Users/jae/Documents/dapills/frontend/src/components/nav/navbar_container.js",[],"/Users/jae/Documents/dapills/frontend/src/components/session/login_form_container.js",[],"/Users/jae/Documents/dapills/frontend/src/components/main/main_page.js",[],"/Users/jae/Documents/dapills/frontend/src/components/chat/dashboard_container.js",[],"/Users/jae/Documents/dapills/frontend/src/components/session/signup_form_container.js",[],"/Users/jae/Documents/dapills/frontend/src/reducers/session_reducer.js",["389"],"/Users/jae/Documents/dapills/frontend/src/reducers/errors_reducer.js",[],"/Users/jae/Documents/dapills/frontend/src/reducers/rooms_reducer.js",[],"/Users/jae/Documents/dapills/frontend/src/reducers/messages_reducer.js",["390"],"import { debug } from 'request';\nimport { RECEIVE_MESSAGES, RECEIVE_NEW_MESSAGE, UPDATE_MESSAGE, REMOVE_MESSAGE } from '../actions/message_actions';\nimport { RECEIVE_ROOMS, DELETE_ROOM, RECEIVE_ROOM } from '../actions/room_actions';\n\nconst MessagesReducer = (state = { }, action) => {\n  Object.freeze(state);\n   ;\n  let newState = Object.assign({}, state);\n  switch (action.type) {\n    case RECEIVE_MESSAGES:\n      newState = action.messages;\n      return newState;\n    case RECEIVE_NEW_MESSAGE:\n       \n      Object.assign(newState, {[action.message.id]: action.message});\n      return newState;\n    case RECEIVE_ROOMS:\n      let messages = {};\n      //create messages object\n      // debugger;\n      ;\n      action.rooms.data.forEach(room => {\n        room.messages.forEach(msg => {\n          messages[msg._id] = {\n            id: msg._id,\n            message: msg.message,\n            createdAt: msg.createdAt,\n            updatedAt: msg.updatedAt,\n            room: msg.room,\n            sender: msg.sender === null ? null : msg.sender._id,\n            username: msg.sender === null ? null : msg.sender.username,\n          }\n        })\n      });\n      Object.assign(newState, messages);\n      return newState;\n    case RECEIVE_ROOM:\n\n      debugger;\n      return state;\n    case UPDATE_MESSAGE:\n      action.message.id = action.message._id; //rename the id property key\n      delete action.message._id;\n      newState[action.message.id] = action.message;\n      return newState;\n    case REMOVE_MESSAGE:\n       \n      delete newState[action.message._id];\n      return newState;\n    case DELETE_ROOM:\n       \n      action.room.messages.forEach(msgId =>{\n        delete newState[msgId];\n      });\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default MessagesReducer;","/Users/jae/Documents/dapills/frontend/src/components/nav/navbar.js",[],"/Users/jae/Documents/dapills/frontend/src/components/session/login_form.js",["391"],"import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport {Redirect} from 'react-router-dom'\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      errors: {},\n      is_authenticated: false\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.renderErrors = this.renderErrors.bind(this);\n  }\n\n\n  // UNSAFE_componentWillReceiveProps(nextProps) {\n  //   if (nextProps.currentUser === true) {\n  //     this.props.history.push('/pillars');\n  //   }\n  //   this.setState({errors: nextProps.errors})\n  // }\n\n  // Handle field updates (called in the render method)\n  update(field) {\n    return e => this.setState({\n      [field]: e.currentTarget.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    let user = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    \n    this.props.login(user);\n    if(this.props.currentUser){\n      this.props.history.push('/pillars')\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.errors !== prevProps.errors) {\n      this.setState({\n        errors: this.props.errors,\n      });\n    }\n  }\n    \n\n\n  \n\n  // Render the session errors if there are any\n  renderErrors() {\n    \n    return(\n      <ul>\n        {Object.keys(this.state.errors).map((error, i) => (\n          <li key={`error-${i}`}>\n            {this.state.errors[error]}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <div>\n              <input type=\"text\"\n                value={this.state.email}\n                onChange={this.update('email')}\n                placeholder=\"Email\"\n              />\n            <br/>\n              <input type=\"password\"\n                value={this.state.password}\n                onChange={this.update('password')}\n                placeholder=\"Password\"\n              />\n            <br/>\n            <input type=\"submit\" value=\"Submit\" />\n            {this.renderErrors()}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(LoginForm);\n","/Users/jae/Documents/dapills/frontend/src/actions/room_actions.js",["392","393","394","395"],"/Users/jae/Documents/dapills/frontend/src/components/session/signup_form.js",["396","397","398"],"import { authenticate } from 'passport';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport {Redirect} from 'react-router'\nimport { login } from '../../util/session_api_util';\n\nclass SignupForm extends React.Component {\n  constructor(props) {\n     \n    super(props);\n    this.state = {\n      email: '',\n      username: '',\n      password: '',\n      password2: '',\n      errors: {},\n      is_authenticated: false\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.clearedErrors = false;\n  }\n\n  componentDidUpdate(prevProps){\n    //  \n    if(this.props.authenticated !== prevProps.authenticated){\n      //  \n      this.setState({is_authenticated: true})\n    }\n\n    if(this.props.errors !== prevProps.errors){\n      this.setState({\n        errors: this.props.errors,\n      })\n    }\n  }\n\n  update(field) {\n    return e => this.setState({\n      [field]: e.currentTarget.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n     \n    let user = {\n      email: this.state.email,\n      username: this.state.username,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n\n    this.props.signup(user, this.props.history)\n      .then(user => {\n        \n        if (Object.keys(user.errors).length === 0){\n          this.props.login({\n            email: this.state.email,\n            password: this.state.password\n          });\n        }\n          \n      })\n\n  }\n\n  renderErrors() {\n    return(\n      <ul>\n        {Object.keys(this.state.errors).map((error, i) => (\n          <li key={`error-${i}`}>\n            {this.state.errors[error]}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"signup-form-container\">\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"signup-form\">\n            <br/>\n              <input type=\"text\"\n                value={this.state.email}\n                onChange={this.update('email')}\n                placeholder=\"Email\"\n              />\n            <br/>\n              <input type=\"text\"\n                value={this.state.username}\n                onChange={this.update('username')}\n                placeholder=\"Username\"\n              />\n            <br/>\n              <input type=\"password\"\n                value={this.state.password}\n                onChange={this.update('password')}\n                placeholder=\"Password\"\n              />\n            <br/>\n              <input type=\"password\"\n                value={this.state.password2}\n                onChange={this.update('password2')}\n                placeholder=\"Confirm Password\"\n              />\n            <br/>\n            <input type=\"submit\" value=\"Submit\" />\n            {this.renderErrors()}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SignupForm);","/Users/jae/Documents/dapills/frontend/src/reducers/session_errors_reducer.js",[],"/Users/jae/Documents/dapills/frontend/src/actions/message_actions.js",[],"/Users/jae/Documents/dapills/frontend/src/components/chat/dashboard.jsx",["399","400"],"/Users/jae/Documents/dapills/frontend/src/util/message_api_util.js",[],"/Users/jae/Documents/dapills/frontend/src/components/chat/side_bar_container.js",[],"/Users/jae/Documents/dapills/frontend/src/components/chat/chat_box_container.js",[],"/Users/jae/Documents/dapills/frontend/src/components/chat/chat_box.jsx",["401"],"/Users/jae/Documents/dapills/frontend/src/components/chat/side_bar.jsx",["402","403","404","405","406","407","408","409"],"import React from 'react';\nimport {getRoomUsers} from '../../util/room_api_util'\nimport SearchBarDropdown from './search_dropdown'\nimport { getAvailableRooms, getRooms } from '../../util/room_api_util';\nimport {getUser } from \"../../util/session_api_util\"\nimport { updateRoom } from '../../actions/room_actions';\nclass Sidebar extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            show_rooms: false,\n            searchInput: '',\n            dropDown: false,\n            roomsAvailable: [],\n            roomsJoined: [],\n            all: [],\n            rooms: this.props.rooms,\n            errors: {}\n        };\n        this.handleSearchInput = this.handleSearchInput.bind(this);\n        this.handleDropDown = this.handleDropDown.bind(this);\n        this.displayRooms = this.displayRooms.bind(this);\n        this.hideRooms = this.hideRooms.bind(this);\n        this.toggleRooms = this.toggleRooms.bind(this);\n    }\n\n    handleSearchInput(e){\n        this.setState({searchInput: e.currentTarget.value, dropDown: true});\n    };\n\n    handleDropDown(){\n        this.setState({dropDown: false});\n    };\n\n    displayRooms(){\n        this.state.show_rooms === true ? \n        this.setState({show_rooms: false}) : this.setState({show_rooms: true});\n    };\n\n    hideRooms(){\n        this.setState({show_rooms:false});\n    };\n\n\n    toggleRooms(e){\n        // debugger\n        // let title = e.target.innerText;\n        let user = this.props.user.username;\n        let email = this.props.user.email;\n        let id = this.props.user.id;\n        // e.target.id \n        this.props.editClosedFor(e.target.id, email,  id)\n        .then(rooms => {\n            debugger;\n            this.setState({rooms: this.props.rooms},this.render)\n        })\n       \n    }\n\n    componentDidMount(props){\n        // debugger;\n        this.setState({ rooms: this.props.rooms })\n    }\n    componentDidUpdate(prevprops, prevState){\n        // debugger;\n        if( this.props.rooms != prevprops.rooms){\n            this.setState({rooms: this.props.rooms}, this.render)\n            // debugger;\n            // this.render()\n        }\n    //    this.setState({ rooms: this.props.rooms })\n        \n        // Object.keys(this.props.rooms).forEach(roomId => {\n        //     debugger;\n        //      console.log(prevprops.rooms[roomId]) \n\n        //     })\n    }\n\n    render(){\n        let roomsAvailable = this.props.roomsAvailable.data || [];\n        //  \n        let rooms = this.state.rooms || this.props.rooms\n        // debugger;\n        let roomIds = [];\n        //   myRooms = this.state.myRooms;\n        console.log(\"Dashboard rendered\");\n        Object.keys(rooms).forEach(key => {\n            // ;\n            // debugger\n            roomIds.push(rooms[key]._id)}) \n        \n        return(\n            <div className='sidebar-contaier'>\n                <div className='search-bar-container'>\n                    <input \n                        className='search-bar' \n                        type='text'\n                        onChange={this.handleSearchInput}\n                        onKeyDown={this.handleDropDown}\n                        value={this.state.searchInput}\n                        placeholder='type here to search'\n                    />\n                    {this.state.dropDown && this.state.searchInput.length !== 0 ? \n                        <SearchBarDropdown className='search-bar-dropdown-container'\n                            handleDropDown={this.handleDropDown}\n                            searchInput={this.state.searchInput} \n                            allRooms={this.props.allRooms}\n                            roomsAvailable={this.props.roomsAvailable}\n                            user={this.props.user}\n                            editClosedFor= {this.props.editClosedFor}\n                            />\n                        : null\n                    }\n                </div>\n                <div>\n                    <form onSubmit={this.props.createNewRoom}>\n                        <input type=\"text\" value={this.props.newTitle} \n                        onChange={this.props.handleChange}\n                        placeholder=\"Enter new room title\"/>\n                    </form>\n\n                    <button onClick={this.props.createNewRoom}>Create a New Chat Room</button>\n                    <h3>{this.props.errors}</h3>\n                </div>\n\n                <div>\n                    <button onClick={()=>this.displayRooms()}>Display All Joinable Chatrooms</button>\n                </div>\n                <div onMouseLeave={this.hideRooms}>\n                    {this.state && this.state.show_rooms === true ? \n                    roomsAvailable.map(room => {\n                     return (\n                        <li id={room._id} key={room._id}>\n                        <p>\n                            Title: {room.title}\n                        </p>\n                        <p>\n                            Number of current users: {room.users.length}\n                        </p>\n                        <button id={room._id} onClick={this.props.joinRoom}>Join Room</button>\n                        </li>\n                     )\n                  }) : null}\n                </div>\n\n                <div className=\"myroomsdiv\">\n                    {/* <h2>My Rooms</h2> */}\n                    <ul className=\"myrooms\">\n                    {Object.keys(this.props.rooms).length > 0 ? \n\n                    roomIds.map(id =>{\n                        //   debugger;\n                        if (id !== undefined) {\n                            return rooms[id].closedFor.includes(this.props.user.email)\n                            //   [this.props.user.username] \n                            ? \n                            (<li id={rooms[id]._id} onClick={this.toggleRooms}>Open {rooms[id].title}</li>\n                                // ,<button onClick= { this.toggleRooms }> Open</button>]\n                                ) :\n                                (<li id={rooms[id]._id} onClick={this.toggleRooms}> Close {rooms[id].title}</li>\n                                // <button onClick={this.toggleRooms}> Close</button>]\n                                ) \n                            }\n                    }) \n                    : \"\"}\n                        </ul>\n                </div>\n            </div>\n        )\n    }\n};\n\nexport default Sidebar;","/Users/jae/Documents/dapills/frontend/src/components/chat/user_list.js",[],"/Users/jae/Documents/dapills/frontend/src/components/chat/data_share.js",[],"/Users/jae/Documents/dapills/frontend/src/components/message/message_container.js",[],"/Users/jae/Documents/dapills/frontend/src/components/chat/search_dropdown.jsx",["410","411"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport { switches, switcheThread } from './data_share'\n\nconst mapStateToProps = (state) => {\n\n    return {\n        roomsJoined: state.rooms\n    };\n\n};\n\n\nclass SearchBarDropdown extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.removeEmojis = this.removeEmojis.bind(this);\n        this.listedMessages = this.listedMessages.bind(this);\n        this.findRepliesMasterMessage = this.findRepliesMasterMessage.bind(this);\n        this.objectifiedMessages = this.objectifiedMessages.bind(this);\n        this.filteredRooms = this.filteredRooms.bind(this);\n        this.objectifiedReplies = this.objectifiedReplies.bind(this);\n        this.boyer_moore = this.boyer_moore.bind(this);\n        this.handleOpen = this.handleOpen.bind(this);\n        this.handleClickChatroom = this.handleClickChatroom.bind(this);\n        this.handleClickThread = this.handleClickThread.bind(this);\n    };\n\n\n\n    removeEmojis(string) {//function to replace emojis from https://stackoverflow.com/questions/18862256/how-to-detect-emoji-using-javascript\n        const regex = /(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\u0023-\\u0039]\\ufe0f?\\u20e3|\\u3299|\\u3297|\\u303d|\\u3030|\\u24c2|\\ud83c[\\udd70-\\udd71]|\\ud83c[\\udd7e-\\udd7f]|\\ud83c\\udd8e|\\ud83c[\\udd91-\\udd9a]|\\ud83c[\\udde6-\\uddff]|\\ud83c[\\ude01-\\ude02]|\\ud83c\\ude1a|\\ud83c\\ude2f|\\ud83c[\\ude32-\\ude3a]|\\ud83c[\\ude50-\\ude51]|\\u203c|\\u2049|[\\u25aa-\\u25ab]|\\u25b6|\\u25c0|[\\u25fb-\\u25fe]|\\u00a9|\\u00ae|\\u2122|\\u2139|\\ud83c\\udc04|[\\u2600-\\u26FF]|\\u2b05|\\u2b06|\\u2b07|\\u2b1b|\\u2b1c|\\u2b50|\\u2b55|\\u231a|\\u231b|\\u2328|\\u23cf|[\\u23e9-\\u23f3]|[\\u23f8-\\u23fa]|\\ud83c\\udccf|\\u2934|\\u2935|[\\u2190-\\u21ff])/g;\n        return string.replace(regex, \" \");\n    };\n\n\n\n    listedMessages(obj) {//get an object with roomJoined's title as the key and each room's messages as values\n        const messageArr = [];\n        Object.entries(obj).forEach(room => {\n            const title = [room[1].title]; //put title ar the index 0 in the messageArr\n            const messages = room[1].messages.map(m => (\n                m.message\n            ));\n            const newArr = title.concat(messages)\n            messageArr.push(newArr);\n        });\n        return messageArr;\n    };\n\n    findRepliesMasterMessage(reply, obj) {\n        const res = [];\n        Object.entries(obj).forEach(room => {\n            room[1].messages.forEach(m => {\n                if (m.replies.map(m => (m.reply)).includes(reply)) {\n                    return res.push(m.message)\n                };\n            });\n        });\n        return res;\n    };\n\n    listedReplies(obj) {\n        const repliesArr = [];\n        Object.entries(obj).forEach(room => {\n            let allReplies = [];\n            let title = [room[1].title];\n            let replies = room[1].messages.filter(m => {\n                return m.replies.length > 0\n            });\n            for (let i = 0; i < replies.length; i++) {\n                allReplies = allReplies.concat(replies[i].replies.map(r => (r.reply)));\n            }\n            const newArr = title.concat(allReplies)\n            repliesArr.push(newArr);\n        });\n        return repliesArr;\n    };\n\n    objectifiedMessages(arr) {//get an object with roomJoined's title as the key and each room's messages as values\n        const newObj = {}\n        Object.entries(arr).forEach(room => {\n            newObj[room[1].title] = room[1].messages.map(m => (m.message));\n        });\n        return newObj;\n    };\n\n    objectifiedReplies(arr) {\n        const repObj = {};\n        arr.forEach(room => {\n            repObj[room[0]] = room.slice(1);\n        });\n        return repObj;\n    };\n\n    filteredRooms(sub) {//display a list of matching rooms\n        const { allRooms } = this.props;\n        const roomList = allRooms.map(room => {\n\n            return room.title\n        });\n        let filteredRooms = [];\n        for (let r = 0; r < roomList.length; r++) {\n            let skip;\n            let bad_char = new Array(265).fill(-1);\n\n            for (let t = 0; t < sub.length; t++) {//constructing a bad character table for each chatacter in the substring at its corresponding place in 256 ASCII characters\n                const index = sub[t].charCodeAt();\n                bad_char[index] = t;\n            };\n\n            for (let i = 0; i <= roomList[r].length - sub.length; i += skip) {//compare each character from substring to string, if mismatch, then shift to the next matching character; if no matching character found, shift the entire length of the substring\n                skip = 0;\n                for (let j = sub.length - 1; j >= 0; j--) {\n                    if (sub[j].toLowerCase() != roomList[r][i + j].toLowerCase()) {\n                        const asciiIndex = bad_char[roomList[r][i + j].charCodeAt()];\n                        skip = 1 > j - asciiIndex ? 1 : j - asciiIndex;\n                        break;\n                    }\n                };\n                if (skip === 0) {\n                    filteredRooms.push([roomList[r]]);\n                    skip++;\n                    break\n                }\n            }\n        }\n        return filteredRooms; //return list of object with matching room name as key and character index as value \n    };\n\n    boyer_moore(arr, sub) {//customized seaching function based on Boyer Moore searchign algorithm for faster lookup\n        let filteredMessages = [];\n        arr.forEach(room => {//iterating thru rooms\n            for (let r = 1; r < room.length; r++) {//iterating thru messages in each room\n                if (room[r].slice(0, 8) !== 'https://' && room[r].slice(room[r].length - 4, room[r].length) !== '.gif' &&\n                    room[r].slice(0, 4) !== '<img' && room[r].slice(room[r].length - 1, room[r].length) !== '>') {//skipiing gifs\n                    room[r] = this.removeEmojis(room[r]);\n                    let skip;\n                    let bad_char = new Array(265).fill(-1);\n\n                    for (let t = 0; t < sub.length; t++) {//constructing a bad character table for each chatacter in the substring at its corresponding place in 256 ASCII characters\n                        const index = sub[t].charCodeAt();\n                        bad_char[index] = t;\n                    };\n\n                    for (let i = 0; i <= room[r].length - sub.length; i += skip) {//compare each character from substring to string, if mismatch, then shift to the next matching character; if no matching character found, shift the entire length of the substring\n                        skip = 0;\n                        for (let j = sub.length - 1; j >= 0; j--) {\n                            if (sub[j].toLowerCase() != room[r][i + j].toLowerCase()) {\n                                const asciiIndex = bad_char[room[r][i + j].charCodeAt()];\n                                skip = 1 > j - asciiIndex ? 1 : j - asciiIndex;\n                                break;\n                            }\n                        };\n                        if (skip === 0) {\n                            filteredMessages.push([room[0], r - 1, i]);\n                            skip++;\n                        };\n                    }\n                }\n            }\n        });\n\n        return filteredMessages; //this returns an array: [room_title, message_index, matching_character_index]\n    };\n\n    handleOpen(id) {\n        const roomTitle = id.split('-');\n        let roomsJoined = this.props.roomsJoined\n        let email = this.props.user.email;\n        let userId = this.props.user.id;\n        for (let i = 0; i < Object.keys(roomsJoined).length; i++) {\n            if (roomsJoined[Object.keys(roomsJoined)[i]].title === roomTitle[1] && roomsJoined[Object.keys(roomsJoined)[i]].closedFor.includes(email)) {\n                let roomId = roomsJoined[Object.keys(roomsJoined)[i]]._id;\n                // let email = this.props.user.email;\n                // let userId = this.props.user.id;\n                this.props.editClosedFor(roomId, email, userId)\n                    .then(rooms => {\n                        debugger\n                    })\n            }\n        }\n        switches.sendOpen(roomTitle[1]);//tells the chatroom to open\n    };\n    handleOpenThread(title) {\n        let roomsJoined = this.props.roomsJoined\n        let email = this.props.user.email;\n        let userId = this.props.user.id;\n        for (let i = 0; i < Object.keys(roomsJoined).length; i++) {\n            if (roomsJoined[Object.keys(roomsJoined)[i]].title === title && roomsJoined[Object.keys(roomsJoined)[i]].closedFor.includes(email)) {\n                let roomId = roomsJoined[Object.keys(roomsJoined)[i]]._id;\n                // let email = this.props.user.email;\n                // let userId = this.props.user.id;\n                this.props.editClosedFor(roomId, email, userId)\n                    .then(rooms => {\n                    })\n            }\n        }\n        switches.sendOpen(title);//tells the chatroom to open\n    };\n    async handleClickChatroom(id) {\n        await this.handleOpen(id)\n        setTimeout(() => {//open first then search the element\n            const ele = document.getElementById(id);\n            ele.scrollIntoView();\n            this.props.handleDropDown();\n        }, 300);\n    };\n    handleClickThread(id, room, msg) {\n        this.handleOpenThread(room);\n        switches.sendOpen(room);\n        setTimeout(() => {\n            switcheThread.sendOpenThread(msg);\n            setTimeout(() => {\n                const ele = document.getElementById(id);\n                ele.scrollIntoView();\n            })\n        }, 600);\n        this.props.handleDropDown();\n    };\n\n\n\n    render() {\n        let { roomsJoined, allRooms, roomsAvailable, searchInput } = this.props;\n        if (allRooms !== undefined && roomsAvailable.data !== undefined) {\n            allRooms = allRooms.map(r => (Object.values(r))).map(roomTitle => (roomTitle[3])) || []; //return an array of all of the room titles [\"Dave's Room #1\", \"sss\", \"hahaha\", \"heyheyhey\", \"lala\", \"blah\", \"yoyo\", \"Cars\", \"new new new\"]\n            roomsAvailable = roomsAvailable.data.map(r => (Object.values(r))).map(roomTitle => (roomTitle[3])) || []; //return an array of all the rooms available to join\n        };\n\n        const roomArr = this.listedMessages(roomsJoined);\n        const repliesArr = this.listedReplies(roomsJoined);\n        const roomsDisplayed = roomArr.map(r => (r[0]));\n\n        const availableRoomObj = this.objectifiedMessages(roomsJoined);\n        const searchableReplies = this.objectifiedReplies(repliesArr);\n\n        const matchedMessages = this.boyer_moore(roomArr, searchInput).map(m => {\n            return [availableRoomObj[m[0]][m[1]].slice(m[2]), m[0], m[1]]; //m[0] is the chatroom title; m[1] is the index number for the matching string in the array; and m[2] is the matching substring\n        });\n        const matchedRooms = this.filteredRooms(searchInput).map(room => {\n            return room[0];\n        });\n        const matchedReplies = this.boyer_moore(repliesArr, searchInput).map(m => {\n            return [searchableReplies[m[0]][m[1]].slice(m[2]), m[0], m[1], searchableReplies[m[0]][m[1]]]; //m[0] is the chatroom title; m[1] is the index number for the matching string in the array; and m[2] is the matching substring\n        });\n\n        //function to find the thread master for the reply using the searchableReplies[m[0]][m[1]] from line 190\n        const roomsJoinable = matchedRooms.filter(room => (roomsAvailable.includes(room)));\n        const roomsOpened = matchedRooms.filter(room => (roomsDisplayed.includes(room)));\n\n\n        return (\n            <div className='searchbar-dropdown'>\n                <div className='message-results'>\n                    {matchedMessages.length === 0 ?\n                        <p>No Match Found</p>\n                        :\n                        <ul>\n                            {matchedMessages.map(m => {\n                                return (\n                                    <li onClick={() => this.handleClickChatroom(`msg-${m[1]}-${m[2]}`)}>\n                                        Message: {m[0]} Room: {m[1]}\n                                    </li>\n                                )\n                            })}\n                        </ul>}\n                </div>\n                <p>------------------------------</p>\n                <div className='replies-results'>\n                    {matchedReplies.length === 0 ?\n                        <p>No Match Found</p>\n                        :\n                        <ul>\n                            {matchedReplies.map(m => {\n                                const masterMessage = this.findRepliesMasterMessage(m[3], roomsJoined)//this should return a list of master messages\n                                return (\n                                    <li onClick={() => this.handleClickThread(`msg-reply-${m[3]}`, m[1], masterMessage[0])}>\n                                        Thread Replies: {m[0]} Room: {m[1]}\n                                    </li>\n                                )\n                            })}\n                        </ul>}\n                </div>\n                <p>------------------------------</p>\n                <div className='room-results'>\n                    {matchedRooms.length === 0 ?\n                        <p>No Match Found</p>\n                        :\n                        <ul>\n                            {roomsJoinable.length === 0 ? null :\n\n                                roomsJoinable.map(r => {\n                                    return (\n                                        <li>\n                                            {r}\n                                            <p>Rooms Not Joined</p>\n                                        </li>\n                                    )\n                                })\n                            }\n                            {roomsOpened.length === 0 ? null :\n                                roomsOpened.map(r => {\n                                    return (\n                                        <li>{r}</li>\n                                    )\n                                })\n                            }\n                        </ul>}\n\n                </div>\n            </div>\n        )\n    }\n};\n\n\nexport default connect(\n    mapStateToProps,\n    null\n)(SearchBarDropdown);","/Users/jae/Documents/dapills/frontend/src/components/giphy/giphy.jsx",[],"/Users/jae/Documents/dapills/frontend/src/components/message/message.jsx",["412","413","414"],"/Users/jae/Documents/dapills/frontend/src/components/message/replies_container.js",[],"/Users/jae/Documents/dapills/frontend/src/components/message/replies.jsx",["415"],"/Users/jae/Documents/dapills/frontend/src/components/message/edit_reply_form.jsx",[],"/Users/jae/Documents/dapills/frontend/src/components/message/edit_message_form_container.js",[],"/Users/jae/Documents/dapills/frontend/src/components/message/edit_message_form.jsx",[],{"ruleId":"416","replacedBy":"417"},{"ruleId":"418","replacedBy":"419"},{"ruleId":"420","severity":1,"message":"421","line":3,"column":18,"nodeType":"422","messageId":"423","endLine":3,"endColumn":23},{"ruleId":"424","severity":1,"message":"425","line":10,"column":1,"nodeType":"426","endLine":35,"endColumn":2},{"ruleId":"420","severity":1,"message":"427","line":1,"column":10,"nodeType":"422","messageId":"423","endLine":1,"endColumn":15},{"ruleId":"420","severity":1,"message":"428","line":1,"column":29,"nodeType":"422","messageId":"423","endLine":1,"endColumn":43},{"ruleId":"420","severity":1,"message":"429","line":1,"column":61,"nodeType":"422","messageId":"423","endLine":1,"endColumn":75},{"ruleId":"420","severity":1,"message":"430","line":1,"column":77,"nodeType":"422","messageId":"423","endLine":1,"endColumn":89},{"ruleId":"420","severity":1,"message":"431","line":1,"column":91,"nodeType":"422","messageId":"423","endLine":1,"endColumn":104},{"ruleId":"420","severity":1,"message":"432","line":3,"column":9,"nodeType":"422","messageId":"423","endLine":3,"endColumn":17},{"ruleId":"420","severity":1,"message":"433","line":1,"column":10,"nodeType":"422","messageId":"423","endLine":1,"endColumn":22},{"ruleId":"420","severity":1,"message":"432","line":4,"column":9,"nodeType":"422","messageId":"423","endLine":4,"endColumn":17},{"ruleId":"420","severity":1,"message":"434","line":5,"column":10,"nodeType":"422","messageId":"423","endLine":5,"endColumn":15},{"ruleId":"435","severity":1,"message":"436","line":74,"column":37,"nodeType":"437","messageId":"438","endLine":74,"endColumn":39},{"ruleId":"439","severity":1,"message":"440","line":289,"column":33,"nodeType":"441","messageId":"442","endLine":289,"endColumn":35},{"ruleId":"420","severity":1,"message":"430","line":2,"column":9,"nodeType":"422","messageId":"423","endLine":2,"endColumn":21},{"ruleId":"420","severity":1,"message":"443","line":4,"column":10,"nodeType":"422","messageId":"423","endLine":4,"endColumn":27},{"ruleId":"420","severity":1,"message":"444","line":4,"column":29,"nodeType":"422","messageId":"423","endLine":4,"endColumn":37},{"ruleId":"420","severity":1,"message":"445","line":5,"column":9,"nodeType":"422","messageId":"423","endLine":5,"endColumn":16},{"ruleId":"420","severity":1,"message":"446","line":6,"column":10,"nodeType":"422","messageId":"423","endLine":6,"endColumn":20},{"ruleId":"420","severity":1,"message":"447","line":48,"column":13,"nodeType":"422","messageId":"423","endLine":48,"endColumn":17},{"ruleId":"435","severity":1,"message":"436","line":66,"column":30,"nodeType":"437","messageId":"438","endLine":66,"endColumn":32},{"ruleId":"439","severity":1,"message":"440","line":149,"column":34,"nodeType":"441","messageId":"442","endLine":149,"endColumn":36},{"ruleId":"420","severity":1,"message":"448","line":2,"column":8,"nodeType":"422","messageId":"423","endLine":2,"endColumn":10},{"ruleId":"435","severity":1,"message":"436","line":116,"column":46,"nodeType":"437","messageId":"438","endLine":116,"endColumn":48},{"ruleId":"435","severity":1,"message":"436","line":150,"column":54,"nodeType":"437","messageId":"438","endLine":150,"endColumn":56},{"ruleId":"420","severity":1,"message":"427","line":2,"column":10,"nodeType":"422","messageId":"423","endLine":2,"endColumn":15},{"ruleId":"420","severity":1,"message":"449","line":4,"column":8,"nodeType":"422","messageId":"423","endLine":4,"endColumn":15},{"ruleId":"450","severity":1,"message":"451","line":63,"column":55,"nodeType":"452","endLine":63,"endColumn":113},{"ruleId":"450","severity":1,"message":"451","line":157,"column":54,"nodeType":"452","endLine":157,"endColumn":112},{"ruleId":"416","replacedBy":"453"},{"ruleId":"418","replacedBy":"454"},{"ruleId":"420","severity":1,"message":"421","line":3,"column":18,"nodeType":"422","messageId":"423","endLine":3,"endColumn":23},{"ruleId":"424","severity":1,"message":"425","line":10,"column":1,"nodeType":"426","endLine":35,"endColumn":2},{"ruleId":"420","severity":1,"message":"427","line":1,"column":10,"nodeType":"422","messageId":"423","endLine":1,"endColumn":15},{"ruleId":"420","severity":1,"message":"432","line":3,"column":9,"nodeType":"422","messageId":"423","endLine":3,"endColumn":17},{"ruleId":"420","severity":1,"message":"428","line":1,"column":29,"nodeType":"422","messageId":"423","endLine":1,"endColumn":43},{"ruleId":"420","severity":1,"message":"429","line":1,"column":61,"nodeType":"422","messageId":"423","endLine":1,"endColumn":75},{"ruleId":"420","severity":1,"message":"430","line":1,"column":77,"nodeType":"422","messageId":"423","endLine":1,"endColumn":89},{"ruleId":"420","severity":1,"message":"431","line":1,"column":91,"nodeType":"422","messageId":"423","endLine":1,"endColumn":104},{"ruleId":"420","severity":1,"message":"433","line":1,"column":10,"nodeType":"422","messageId":"423","endLine":1,"endColumn":22},{"ruleId":"420","severity":1,"message":"432","line":4,"column":9,"nodeType":"422","messageId":"423","endLine":4,"endColumn":17},{"ruleId":"420","severity":1,"message":"434","line":5,"column":10,"nodeType":"422","messageId":"423","endLine":5,"endColumn":15},{"ruleId":"435","severity":1,"message":"436","line":74,"column":37,"nodeType":"437","messageId":"438","endLine":74,"endColumn":39},{"ruleId":"439","severity":1,"message":"440","line":289,"column":33,"nodeType":"441","messageId":"442","endLine":289,"endColumn":35},{"ruleId":"420","severity":1,"message":"448","line":2,"column":8,"nodeType":"422","messageId":"423","endLine":2,"endColumn":10},{"ruleId":"420","severity":1,"message":"430","line":2,"column":9,"nodeType":"422","messageId":"423","endLine":2,"endColumn":21},{"ruleId":"420","severity":1,"message":"443","line":4,"column":10,"nodeType":"422","messageId":"423","endLine":4,"endColumn":27},{"ruleId":"420","severity":1,"message":"444","line":4,"column":29,"nodeType":"422","messageId":"423","endLine":4,"endColumn":37},{"ruleId":"420","severity":1,"message":"445","line":5,"column":9,"nodeType":"422","messageId":"423","endLine":5,"endColumn":16},{"ruleId":"420","severity":1,"message":"446","line":6,"column":10,"nodeType":"422","messageId":"423","endLine":6,"endColumn":20},{"ruleId":"420","severity":1,"message":"447","line":48,"column":13,"nodeType":"422","messageId":"423","endLine":48,"endColumn":17},{"ruleId":"435","severity":1,"message":"436","line":66,"column":30,"nodeType":"437","messageId":"438","endLine":66,"endColumn":32},{"ruleId":"439","severity":1,"message":"440","line":152,"column":36,"nodeType":"441","messageId":"442","endLine":152,"endColumn":38},{"ruleId":"435","severity":1,"message":"436","line":116,"column":46,"nodeType":"437","messageId":"438","endLine":116,"endColumn":48},{"ruleId":"435","severity":1,"message":"436","line":150,"column":54,"nodeType":"437","messageId":"438","endLine":150,"endColumn":56},{"ruleId":"420","severity":1,"message":"427","line":2,"column":10,"nodeType":"422","messageId":"423","endLine":2,"endColumn":15},{"ruleId":"420","severity":1,"message":"449","line":4,"column":8,"nodeType":"422","messageId":"423","endLine":4,"endColumn":15},{"ruleId":"450","severity":1,"message":"451","line":63,"column":55,"nodeType":"452","endLine":63,"endColumn":113},{"ruleId":"450","severity":1,"message":"451","line":157,"column":54,"nodeType":"452","endLine":157,"endColumn":112},"no-native-reassign",["455"],"no-negated-in-lhs",["456"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'debug' is defined but never used.","'deleteRoomUtil' is defined but never used.","'createRoomUtil' is defined but never used.","'getRoomUsers' is defined but never used.","'leaveRoomUtil' is defined but never used.","'Redirect' is defined but never used.","'authenticate' is defined but never used.","'login' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'getAvailableRooms' is defined but never used.","'getRooms' is defined but never used.","'getUser' is defined but never used.","'updateRoom' is defined but never used.","'user' is assigned a value but never used.","'io' is defined but never used.","'Replies' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["455"],["456"],"no-global-assign","no-unsafe-negation"]